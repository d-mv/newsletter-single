{"version":3,"sources":["styles/PostTextStyle.module.scss","store/user/types.tsx","store/user/actions.tsx","styles/_definitions.tsx","styles/LoginForm.tsx","components/Login.tsx","styles/Home.tsx","styles/Filter.tsx","containers/Home/Home.tsx","store/post/types.tsx","store/source/types.tsx","styles/Title.tsx","components/Header/Title.tsx","modules/dateTime.tsx","styles/DateTime.tsx","components/DateTime.tsx","styles/Header.tsx","components/Header/Header.tsx","styles/SmartButton.tsx","components/SmartButton.tsx","styles/_animations.tsx","styles/SmartMenu.tsx","components/SmartMenu.tsx","components/Filter.tsx","styles/PostCardList.tsx","components/Loading.tsx","styles/PostButton.tsx","components/PostElements/PostButton.tsx","styles/PostCard.tsx","components/PostElements/PostLine.tsx","components/PostElements/PostFooter.tsx","components/PostCard.tsx","components/PostCardList.tsx","styles/PostShow.tsx","components/PostShow.tsx","styles/SourceCard.tsx","components/SourceEdit.tsx","components/SourceCard.tsx","styles/SourceCardList.tsx","components/SourceCardList.tsx","styles/Content.tsx","styles/Profile.tsx","components/Profile.tsx","containers/Content/Content.tsx","store/post/actions.tsx","store/source/actions.tsx","containers/App/App.tsx","store/post/reducers.tsx","store/source/reducers.tsx","store/user/reducers.tsx","store/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","text","signature","book-cta","border-bottom","CHECK_USER","checkUser","query","promise","axios","post","then","response","catch","error","type","payload","arsenic","boxShadow","boxTransition","LoginForm","styled","section","_templateObject","props","height","Title","h1","_templateObject2","Label","span","_templateObject3","Submit","button","_templateObject4","Error","div","_templateObject5","Login","_React$useState","React","useState","_React$useState2","Object","slicedToArray","userName","setUserName","_React$useState3","_React$useState4","userEmail","setUserEmail","_React$useState5","_React$useState6","userPassword","setUserPassword","_React$useState7","_React$useState8","nameError","setNameError","_React$useState9","_React$useState10","emailError","setEmailError","_React$useState11","_React$useState12","passwordError","setPasswordError","checkEmail","mail","check","length","checkPassword","pass","handleInputChange","event","target","name","value","nameEnter","newUser","react_default","a","createElement","onChange","formHeight","title","inputErrors","message","LoginForm_Title","onSubmit","preventDefault","checkName","authObj","new","fields","email","password","login","id","HomeScreen","Home_templateObject","Home_templateObject2","SubTitle","h2","Home_templateObject3","Screenshot","Home_templateObject4","LogInButton","Home_templateObject5","Menu","Filter_templateObject","ButtonsWrapper","Filter_templateObject2","buttonTemplate","Filter_templateObject3","ButtonSource","Filter_templateObject4","accent","ButtonClear","Filter_templateObject5","connect","state","user","authNew","setAuthNew","showLogin","setShowLogin","loginMessage","setLoginMessage","cookies","existingCookies","get","token","cProps","action","res","data","authed","setUserToken","toggleAuth","cookiesCheck","Home_Title","onClick","components_Login","lProps","status","set","path","SET_POSTS","UPDATE_POST","SELECT_POST","SET_SOURCES","Title_templateObject","styles_Title","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","dateTime","dateFromDb","Date","keys","timeToDisplay","concat","getHours","getMinutes","getDay","getDate","getMonth","DateTimeTitle","h5","DateTime_templateObject","DateTime","date","Header","header","Header_templateObject","styles_Header","Header_Title","components_DateTime","SmartButton","SmartButton_templateObject","Button","styles_SmartButton","child","func","mode","handleClick","children","function","scaleUp","keyframes","_animations_templateObject","slideDown","_animations_templateObject2","_animations_templateObject3","_animations_templateObject4","_animations_templateObject5","SmartMenu","nav","SmartMenu_templateObject","buttonElement","components_SmartButton","element","homeButton","moduleToggle","sourcesButton","showReadButton","read","index_esm","toggleRead","refreshButton","filterButton","showFilter","toggleFilter","profileButton","styles_SmartMenu","Filter","buttonClear","choose","buttons","list","map","source","key","_id","data-test","toggle","Display","main","PostCardList_templateObject","PostListStyle","PostCardList_templateObject2","LoadingS","PostCardList_templateObject3","Loading","PostButton_templateObject","Off","PostButton_templateObject2","On","PostButton_templateObject3","PostButton","PostButton_Button","update","field","Card","article","PostCard_templateObject","h3","PostCard_templateObject2","Text","PostCard_templateObject3","Line","PostCard_templateObject4","Footer","footer","PostCard_templateObject5","Wrapper","_templateObject6","PostLine","wrapper","author","PostElements_PostButton","star","PostFooter","readTime","readingTime","timestamp","PostCard","replace","starButton","ti_index_esm","readButton","PostCard_Title","select","PostElements_PostLine","PostElements_PostFooter","published","PostCardList","posts","postCall","components_PostCard","postCardComponent","selectPost","filter","show","pSource","pRead","postCheck","showRead","sourceId","Show","PostShow_templateObject","PostShow_templateObject2","PostShow_templateObject3","PostShow","trashButton","PostShow_Title","url","trash","PostShow_Text","className","style","dangerouslySetInnerHTML","__html","SourceCard_templateObject","CardWrapper","SourceCard_templateObject2","NameWrapper","SourceCard_templateObject3","Name","SourceCard_templateObject4","Url","SourceCard_templateObject5","Edit","SourceCard_templateObject6","_templateObject7","_templateObject8","SourceEdit","currentSource","home","_useState","_useState2","setName","_useState3","_useState4","setUrl","_useState5","_useState6","setHome","errors","checkInput","regex","RegExp","test","newSource","submit","SourceCard_Error","SourceCard_Submit","SourceCard","editToggler","toggleProps","opened","setOpen","cardEdit","components_SourceEdit","SourceCard_Card","SourceCardList_templateObject","SourcesList","SourceCardList_templateObject2","SourceCardList","openEditId","setOpenEditId","sources","components_SourceCard","Content","Content_templateObject","Profile_templateObject","styles_Content","styles_Profile","currentUser","signOff","emptyPost","parsed","pages","loading","filterId","showPost","loadPosts","_this","setState","loadSources","fetchPostsSources","postQuery","sourceQuery","showModule","arguments","undefined","toggleShowRead","toggleShowFilter","chooseFilter","handleRefreshClick","selectPostToShow","updateStatePosts","oldPostState","newPosts","forEach","updatePostAction","oldState","updatePost","statusText","this","refresher","setInterval","window","scrollTo","clearInterval","postsList","smartMenu","components_SmartMenu","refresh","components_Filter","components_Loading","components_PostCardList","postShow","components_PostShow","sourcesList","components_SourceCardList","profile","components_Profile","components_Header_Header","Component","postId","withCookies","userToken","authStatus","setAuthStatus","containers_Content_Content","containers_Home_Home","emptyQuery","initialState","defaults","baseURL","process","headers","common","rootReducer","combineReducers","objectSpread","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","WebFont","load","google","families","store","middlewares","reduxPromise","logger","middleWareEnhancer","applyMiddleware","apply","createStore","composeWithDevTools","configureStore","ReactDOM","render","es6","es","containers_App_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c70523ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"PostTextStyle_text__1hs1R\",\"signature\":\"PostTextStyle_signature__1GYUC\",\"book-cta\":\"PostTextStyle_book-cta__2wsY4\",\"border-bottom\":\"PostTextStyle_border-bottom__3Orxm\"};","// Describing the shape of the system's slice of state\nexport interface User {\n  name: string;\n  password: string;\n  email: string;\n}\nexport interface CurrentUser {\n  email: string;\n  token: string;\n}\n\nexport interface UserSystemState {\n  user: User;\n  currentUser: CurrentUser;\n}\n\nexport interface UserQuery {\n  action: [string, string];\n  id: string;\n  fields?: { [index: string]: string };\n}\n\n// export interface UserToken {\n//   id: string;\n// }\n// Describing the different ACTION NAMES available\nexport const CHECK_USER = \"CHECK_USER\";\n// export const UPDATE_POST = \"UPDATE_POST\";\n// export const SELECT_POST = \"SELECT_POST\";\n\ninterface CheckUserAction {\n  type: typeof CHECK_USER;\n  payload: UserSystemState;\n}\n// interface UpdatePostAction {\n//   type: typeof UPDATE_POST;\n//   payload: UserQuery;\n// }\n\n// interface SelectPostAction {\n//   type: typeof SELECT_POST;\n//   payload: PostId;\n// }\n\nexport type SystemActionTypes = CheckUserAction;\n// | UpdatePostAction\n// | SelectPostAction;\n","import { CHECK_USER, UserQuery } from \"./types\";\nimport axios from \"axios\";\n\nexport function checkUser(query: UserQuery) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: CHECK_USER,\n    payload: promise\n  };\n}\n","const arsenic = \"#444444\";\nconst light = \"white\";\nconst lightTrans = \"rgba(255, 255, 255, 0.9)\";\nconst lightGrey = \"#d3d3d3\";\nconst silverSand = \"#c4c4c4\";\nconst dimGrey = \"#6b6b6b\";\nconst darkMediumGrey = \"#aaaaaa\";\nconst accent = \"#6d6bc4\";\nconst accentAlt = \"#914992\";\nconst arsenicTrans = \"rgba(68, 68, 68, 0.8)\";\nconst arsenicLightTrans = \"rgba(68, 68, 68, 0.3)\";\nconst arsenicSemiTrans = \"rgba(68, 68, 68, 0.5)\";\nconst baseFont = \"Alegreya\";\nconst statusFont = \"Open Sans\";\nconst boxShadow =\n  \"0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24)\";\nconst boxTransition = \"all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1)\";\nconst boxShadowHover =\n  \"0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22)\";\n\nexport {\n  arsenic,\n  light,\n  lightTrans,\n  lightGrey,\n  silverSand,\n  dimGrey,\n  darkMediumGrey,\n  accent,\n  accentAlt,\n  arsenicTrans,\n  arsenicLightTrans,\n  arsenicSemiTrans,\n  boxShadow,\n  boxTransition,\n  boxShadowHover,\n  statusFont,\n  baseFont\n};\n","import styled from \"styled-components\";\n\nimport {\n  arsenic,\n  accent,\n  darkMediumGrey,\n  lightGrey,\n  silverSand,\n  baseFont,\n  statusFont,\n  boxShadow,\n  boxTransition,\n  boxShadowHover\n} from \"./_definitions\";\n\ninterface props {\n  height: string;\n}\n\nconst LoginForm = styled.section<props>`\n  height: ${props => props.height};\n\n  @media (max-width: 499px) {\n    width: 80%;\n    margin-top: 25vh;\n  }\n  @media (min-width: 500px) {\n    width: 50%;\n    margin-top: 30vh;\n  }\n  margin: 0 auto;\n  padding: 1rem;\n  text-align: center;\n\n  border-radius: 2px;\n  background-color: ${silverSand};\n  box-shadow: ${boxShadow};\n  transition: ${boxTransition};\n  &:hover {\n    box-shadow: ${boxShadowHover};\n  }\n\n  label {\n    display: grid;\n    border: 1px solid ${darkMediumGrey};\n    border-radius: 2px;\n    padding: 10px 20px;\n    margin: 1rem 0;\n\n    input {\n      background-color: ${lightGrey};\n      font-family: ${statusFont};\n      font-weight: 300;\n      font-size: 1rem;\n      border: none;\n      margin: 0.5rem 0;\n      border-radius: 2px;\n      padding: 3px 2px;\n    }\n  }\n`;\nconst Title = styled.h1``;\n\nconst Label = styled.span`\n  margin-top: -1.4rem;\n  background-color: ${silverSand};\n  color: black;\n  display: inline-block;\n  max-width: 5rem;\n  margin-left: 1rem;\n  text-align: center;\n  font-weight: 300;\n  font-size: 1rem;\n`;\nconst Submit = styled.button`\n  input {\n    font-weight: 300;\n    background: none;\n    border: none;\n    background-color: ${arsenic};\n    color: ${lightGrey};\n    font-family: ${baseFont};\n    border-radius: 2px;\n    /* margin: 0.2rem auto; */\n    padding: 10px;\n    font-size: 1rem;\n    letter-spacing: 1px;\n    outline: none;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n\n    &:hover {\n      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\n        0 10px 10px rgba(0, 0, 0, 0.22);\n      background-color: ${darkMediumGrey};\n      color: ${arsenic};\n    }\n    &:active {\n      transform: scale(0.9);\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    }\n  }\n`;\n\nconst Error = styled.div`\n  padding: 5px;\n  margin-bottom: 5px;\n  color: ${accent};\n  list-style: none;\n  text-align: center;\n  li {\n    padding: 5px 0;\n  }\n`;\n\nexport { LoginForm, Title, Label, Submit, Error };\n","import React from \"react\";\n\nimport { LoginForm, Title, Label, Submit, Error } from \"../styles/LoginForm\";\n\nconst Login = (props: {\n  message: string;\n  cookies: any;\n  login: (arg0: any) => any;\n  newUser: boolean;\n}) => {\n  const [userName, setUserName] = React.useState(\"\");\n  const [userEmail, setUserEmail] = React.useState(\"\");\n  const [userPassword, setUserPassword] = React.useState(\"\");\n  const [nameError, setNameError] = React.useState(\"\");\n  const [emailError, setEmailError] = React.useState(\"\");\n  const [passwordError, setPasswordError] = React.useState(\"\");\n\n  const checkName = (name: string) => {\n    const check = name.length > 3 ? true : false;\n    if (check) {\n      setNameError(\"\");\n    } else {\n      setNameError(\"Name is too short\");\n    }\n    return check;\n  };\n\n  const checkEmail = (mail: string) => {\n    const check = mail.length > 0 ? true : false;\n    if (check) {\n      setEmailError(\"\");\n    } else {\n      setEmailError(\"Email is missing\");\n    }\n    return check;\n  };\n\n  const checkPassword = (pass: string) => {\n    const check = pass.length > 6 ? true : false;\n    if (check) {\n      setPasswordError(\"\");\n    } else {\n      setPasswordError(\"Password too short\");\n    }\n    return check;\n  };\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n\n    let check;\n    if (props.newUser) {\n      check =\n        checkName(userName) &&\n        checkEmail(userEmail) &&\n        checkPassword(userPassword);\n    } else {\n      check = checkEmail(userEmail) && checkPassword(userPassword);\n    }\n    if (check) {\n      const authObj = {\n        new: props.newUser,\n        fields: {\n          name: userName,\n          email: userEmail,\n          password: userPassword\n        }\n      };\n      props.login(authObj);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    switch (event.target.name) {\n      case \"uName\":\n        setUserName(event.target.value);\n        break;\n      case \"uPass\":\n        setUserPassword(event.target.value);\n        break;\n      default:\n        setUserEmail(event.target.value);\n        break;\n    }\n  };\n\n  const nameEnter = props.newUser ? (\n    <label>\n      <Label>Name</Label>\n      <input\n        type=\"text\"\n        name=\"uName\"\n        value={userName}\n        onChange={handleInputChange}\n      />\n    </label>\n  ) : null;\n  const formHeight = props.newUser ? \"350px\" : \"300px\";\n  const title = props.newUser ? \"Register new user\" : \"Login details\";\n\n  const inputErrors = (\n    <Error>\n      {nameError ? <li>{nameError}</li> : null}\n      {emailError ? <li>{emailError}</li> : null}\n      {passwordError ? <li>{passwordError}</li> : null}\n      {props.message ? <li>{props.message}</li> : null}\n    </Error>\n  );\n\n  return (\n    <LoginForm height={formHeight}>\n      <Title>{title}</Title>\n      <form onSubmit={handleSubmit}>\n        {nameEnter}\n        <label>\n          <Label>Email</Label>\n          <input\n            type=\"email\"\n            name=\"uMail\"\n            value={userEmail}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          <Label>Password</Label>\n          <input\n            type=\"password\"\n            name=\"uPass\"\n            value={userPassword}\n            onChange={handleInputChange}\n          />\n        </label>\n        {inputErrors}\n        <Submit>\n          <input\n            type=\"button\"\n            value={props.newUser ? \"Register\" : \"Login\"}\n            id=\"submit_button\"\n          />\n        </Submit>\n      </form>\n    </LoginForm>\n  );\n};\n\nexport default Login;\n","import styled from \"styled-components\";\n\nimport {\n  arsenic,\n  darkMediumGrey,\n  lightGrey,\n  baseFont,\n  boxTransition,\n  boxShadow\n} from \"./_definitions\";\n\nconst HomeScreen = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  font-family: ${baseFont};\n  background-color: ${lightGrey};\n  color: ${arsenic};\n`;\n\nconst Title = styled.h1`\n  position: absolute;\n  top: 20vh;\n  left: 10vw;\n  margin: 0;\n  padding: 0;\n  font-weight: 500;\n  @media (max-width: 399px) {\n    font-size: 2.5rem;\n  }\n  @media (min-width: 400px) {\n    font-size: 3.3rem;\n  }\n`;\nconst SubTitle = styled.h2`\n  position: absolute;\n  top: 30vh;\n  left: 10vw;\n  font-style: italic;\n  @media (max-width: 399px) {\n    font-size: 2rem;\n  }\n  @media (min-width: 400px) {\n    font-size: 2.2rem;\n  }\n  font-size: 2.2rem;\n`;\nconst Screenshot = styled.div`\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  @media (max-width: 499px) {\n    display: none;\n  }\n  @media (min-width: 800px) {\n    left: 50vw;\n    top: 20vh;\n    height: 50vh;\n    width: 45vw;\n    border-radius: 2px;\n    border: 1px solid ${darkMediumGrey};\n    background: rgba(0, 0, 0, 0)\n      url(\"https://res.cloudinary.com/diciu4xpu/image/upload/v1557432341/newsletter/homepage/screenshot_desktop.jpg\");\n  }\n  background-color: white;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover;\n  object-fit: cover;\n  box-shadow: ${boxShadow};\n  transition: ${boxTransition});\n`;\n\nconst LogInButton = styled.button`\n  position: absolute;\n  top: 44vh;\n  left: 10vw;\n  font-weight: 300;\n  background: none;\n  border: none;\n  background-color: ${arsenic};\n  color: ${lightGrey};\n  font-family: ${baseFont};\n  border-radius: 2px;\n  margin: 0.2rem auto;\n  padding: 10px;\n  font-size: 1rem;\n  letter-spacing: 1px;\n  outline: none;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  user-select: none;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n    background-color: ${darkMediumGrey};\n  }\n  &:active {\n    transform: scale(0.9);\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  }\n`;\n\nexport { HomeScreen, Title, SubTitle, Screenshot, LogInButton };\n","import styled from \"styled-components\";\n\nimport {\n  arsenicSemiTrans,\n  lightGrey,\n  arsenic,\n  dimGrey,\n  baseFont\n} from \"./_definitions\";\n\nconst Menu = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 100vh;\n  width: 100vw;\n  background: ${arsenicSemiTrans};\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n`;\nconst ButtonsWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n`;\n\nconst buttonTemplate = styled.button`\n  font-family: ${baseFont};\n  font-size: 1.1rem;\n  padding: 5px;\n  padding-top: 7px;\n  letter-spacing: 1px;\n  border-radius: 1px;\n  width: 180px;\n  margin: 3px auto;\n  text-align: center;\n`;\n\ninterface IProps {\n  accent: boolean;\n}\n\nconst ButtonSource = styled(buttonTemplate)<IProps>`\n  background-color: ${props => (props.accent ? dimGrey : lightGrey)};\n  color: ${props => (props.accent ? lightGrey : arsenic)};\n  border-bottom: 3px solid ${props => (props.accent ? dimGrey : lightGrey)};\n\n  &:hover {\n    border-bottom: 3px solid ${props => (props.accent ? lightGrey : dimGrey)};\n  }\n`;\n\nconst ButtonClear = styled(buttonTemplate)`\n  color: ${lightGrey};\n  background-color: ${arsenic};\n  border-bottom: 3px solid ${arsenic};\n\n  &:hover {\n    color: ${lightGrey};\n    border-bottom: 3px solid ${lightGrey};\n  }\n`;\n\nexport { Menu, ButtonsWrapper, ButtonClear, ButtonSource };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\n\nimport { checkUser } from \"../../store/user/actions\";\nimport Login from \"../../components/Login\";\n\nimport { AuthObj } from \"../../types\";\n\nimport {\n  HomeScreen,\n  Title,\n  SubTitle,\n  Screenshot,\n  LogInButton\n} from \"../../styles/Home\";\nimport { Menu } from \"../../styles/Filter\";\n\n// import Home from \"../../components/Home\";\n// import Content from \"../../styles/Content\";\n\ninterface props {\n  checkUser: (arg0?: any) => any;\n  toggleAuth: () => void;\n  setUserEmail: (arg0: string) => void;\n  setUserToken: (arg0: string) => void;\n  cookies: any;\n}\n\nconst Home = (props: props) => {\n  const [authNew, setAuthNew] = React.useState(false);\n  const [showLogin, setShowLogin] = React.useState(false);\n  const [loginMessage, setLoginMessage] = React.useState(\"\");\n  const { cookies } = props;\n\n  const cookiesCheck = (cProps: { email: string; token: string }) => {\n    const query = {\n      action: [\"user\", \"cookiesCheck\"],\n      fields: cProps\n    };\n    props.checkUser(query).then((res: any) => {\n      const response = res.payload.data;\n      if (response.authed) {\n        props.setUserEmail(cProps.email);\n        props.setUserToken(cProps.token);\n        props.toggleAuth();\n      }\n    });\n  };\n\n  const existingCookies = {\n    email: cookies.get(\"email\"),\n    token: cookies.get(\"token\")\n  };\n  if (cookies.get(\"email\") && cookies.get(\"token\")) {\n    cookiesCheck(existingCookies);\n  }\n\n  const login = (lProps: AuthObj) => {\n    const action = lProps.new ? \"create\" : \"login\";\n    const query = {\n      action: [\"user\", lProps.new ? \"create\" : action],\n      id: \"\",\n      fields: lProps.fields\n    };\n    props.checkUser(query).then((res: any) => {\n      const response = res.payload.data;\n      if (response.user === \"new\") {\n        setAuthNew(true);\n      } else if (response.status) {\n        setLoginMessage(\"\");\n\n        props.setUserEmail(response.user.email);\n        props.setUserToken(response.user.token);\n\n        cookies.set(\"email\", response.user.email, { path: \"/\" });\n        cookies.set(\"token\", response.user.token, { path: \"/\" });\n\n        props.toggleAuth();\n      } else {\n        setLoginMessage(response.data.message);\n      }\n    });\n  };\n\n  return (\n    <HomeScreen>\n      <Title>The Newsletter</Title>\n      <SubTitle>Just information.</SubTitle>\n      <Screenshot />\n      <LogInButton onClick={() => setShowLogin(!showLogin)}>\n        Login or register\n      </LogInButton>\n      {showLogin ? (\n        <Menu>\n          <Login\n            message={loginMessage}\n            cookies={props.cookies}\n            login={login}\n            newUser={authNew}\n          />\n        </Menu>\n      ) : null}\n    </HomeScreen>\n  );\n};\nconst mapStateToProps = (state: AppState) => ({\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  { checkUser }\n)(Home);\n","// Describing the shape of the system's slice of state\nexport interface Post {\n  _id: string;\n  source: string;\n  sourceId: string;\n  title: string;\n  url: string;\n  author: string;\n  published: Date;\n  parsed: Date;\n  text: string;\n  readTime: number;\n  pages: number;\n  read: boolean;\n  star: boolean;\n}\n\nexport interface SystemState {\n  posts: Post[];\n  token: \"\";\n  action: [];\n}\n\nexport interface Query {\n  action: [string, string];\n  id: string;\n  fields?: { [index: string]: string };\n}\nexport interface NewQuery {\n  token: string;\n  action: [string, string];\n  id?: string;\n  fields?: { [index: string]: string };\n}\n\nexport interface PostId {\n  id: string;\n}\n// Describing the different ACTION NAMES available\nexport const SET_POSTS = \"SET_POSTS\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const SELECT_POST = \"SELECT_POST\";\n\ninterface SetPostsAction {\n  type: typeof SET_POSTS;\n  payload: NewQuery;\n}\ninterface UpdatePostAction {\n  type: typeof UPDATE_POST;\n  payload: Query;\n}\n\ninterface SelectPostAction {\n  type: typeof SELECT_POST;\n  payload: PostId;\n}\n\nexport type SystemActionTypes =\n  | SetPostsAction\n  | UpdatePostAction\n  | SelectPostAction;\n","// Describing the shape of the system's slice of state\nimport { NewQuery } from \"../../types\";\n\nexport interface Source {\n  _id: string;\n  name: string;\n  url: string;\n  home: string;\n}\n\nexport interface SystemStateSource {\n  sources: Source[];\n}\n\n// export interface Query {\n//   action: [string, string];\n//   id: string;\n//   fields?: { [index: string]: string };\n// }\n\n// export interface PostId {\n//   id: string;\n// }\n// Describing the different ACTION NAMES available\nexport const SET_SOURCES = \"SET_SOURCES\";\n// export const UPDATE_POST = \"UPDATE_POST\";\n// export const SELECT_POST = \"SELECT_POST\";\n\ninterface SetSourcesAction {\n  type: typeof SET_SOURCES;\n  payload: NewQuery;\n}\n\n// interface UpdatePostAction {\n//   type: typeof UPDATE_POST;\n//   payload: Query;\n// }\n\n// interface SelectPostAction {\n//   type: typeof SELECT_POST;\n//   payload: PostId;\n// }\n\nexport type SystemActionTypes = SetSourcesAction;\n// | UpdatePostAction\n// | SelectPostAction;\n","import styled from \"styled-components\";\n\nimport { arsenic, baseFont } from \"./_definitions\";\n\nconst Title = styled.h1`\n  font-family: ${baseFont};\n  color: ${arsenic};\n\n  @media (max-width: 302px) {\n    font-size: 1.5rem;\n  }\n\n  @media (min-width: 303px) and (max-width: 340px) {\n    font-size: 2rem;\n  }\n\n  @media (min-width: 341px) {\n    font-size: 2.5rem;\n  }\n  font-weight: 700;\n  margin: 0;\n  height: 3rem;\n`;\n\nexport default Title;\n","import React from \"react\";\n\nimport Style from \"../../styles/Title\";\n\nconst Title = () => {\n  return <Style>The Newsletter</Style>;\n};\n\nexport default Title;\n","const months: { [index: number]: string } = {\n  1: \"Jan\",\n  2: \"Feb\",\n  3: \"Mar\",\n  4: \"Apr\",\n  5: \"May\",\n  6: \"Jun\",\n  7: \"Jul\",\n  8: \"Aug\",\n  9: \"Sep\",\n  10: \"Oct\",\n  11: \"Nov\",\n  12: \"Dec\"\n};\nconst daysOfWeek: { [index: number]: string } = {\n  1: \"Sun\",\n  2: \"Mon\",\n  3: \"Tue\",\n  4: \"Wed\",\n  5: \"Thu\",\n  6: \"Fri\",\n  7: \"Sat\"\n};\n\nconst dateTime = (props: Date) => {\n  let dateFromDb = new Date();\n  if (!Object.keys(props).length) {\n    dateFromDb = new Date(props);\n  }\n  let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n  if (dateFromDb.getHours() > 12) {\n    timeToDisplay = `${dateFromDb.getHours() -\n      12}:${dateFromDb.getMinutes()} pm`;\n  }\n  return `${daysOfWeek[dateFromDb.getDay() + 1]} ${dateFromDb.getDate()} ${\n    months[dateFromDb.getMonth() + 1]\n  } at ${timeToDisplay}`;\n};\n\nexport default dateTime;\n","import styled from \"styled-components\";\n\nimport { dimGrey } from \"./_definitions\";\n\nconst DateTimeTitle = styled.h5`\n  color: ${dimGrey};\n  font-size: 100%;\n  font-weight: normal;\n`;\n\nexport { DateTimeTitle };\n","import React from \"react\";\n\nimport dateTime from \"../modules/dateTime\";\n\nimport { DateTimeTitle } from \"../styles/DateTime\";\n\nconst DateTime = (props: { date: Date }) => {\n  return <DateTimeTitle>{dateTime(props.date)}</DateTimeTitle>;\n};\n\nexport default DateTime;\n","import styled from \"styled-components\";\n\nimport { darkMediumGrey } from \"./_definitions\";\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  flex-wrap: wrap;\n  padding: 0;\n\n  margin: -10px 20px 20px 20px;\n  border-bottom: 1px solid ${darkMediumGrey};\n  cursor: default;\n  user-select: none;\n`;\n\nexport default Header;\n","import React from \"react\";\n\nimport Title from \"./Title\";\nimport DateTime from '../DateTime'\nimport Style from \"../../styles/Header\";\n\nconst Header = () => {\n  return (\n    <Style>\n      <Title />\n      <DateTime date={new Date()} />\n    </Style>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nimport { arsenic, accent, baseFont } from \"./_definitions\";\n\ninterface IProps {\n  accent: boolean;\n}\n\nconst SmartButton = styled.button<IProps>`\n  color: ${props => (props.accent ? accent : arsenic)};\n  transition: 0.7s;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  outline: none;\n  margin: 0 5px;\n  padding: {\n    top: 3px;\n    left: 10px;\n    right: 10px;\n  }\n  font-family: ${baseFont};\n  font-size: 0.9rem;\n  letter-spacing: 1px;\n\n  &:hover {\n    color: ${accent};\n  }\n\n  &:active {\n    transform: scale(0.9);\n  }\n`;\n\nexport default SmartButton;\n","import React from \"react\";\n\nimport Style from \"../styles/SmartButton\";\n\nconst handleClick = (props: {\n  mode: string;\n  child: any;\n  func: (arg?: string) => void;\n}) => {\n  if (props.child === \"BACK\" || props.child === \"HOME\") {\n    props.func(\"posts\");\n  } else if (props.child === \"SOURCES\") {\n    props.func(\"sources\");\n  } else if (props.mode === \"profile\") {\n    props.func(\"profile\");\n  } else {\n    props.func();\n  }\n};\n\nconst Button = (props: {\n  children: any;\n  mode: string;\n  accent: boolean;\n  function: () => void;\n}) => {\n  return (\n    <Style\n      accent={props.accent}\n      onClick={() =>\n        handleClick({\n          mode: props.mode,\n          child: props.children,\n          func: props.function\n        })\n      }\n    >\n      {props.children}\n    </Style>\n  );\n};\n\nexport default Button;\n","import { keyframes } from \"styled-components\";\n\nconst scaleUp = keyframes`\n0% {transform:scale(0)} 100%{transform:scale(1)}\n`;\n\nconst slideInFromTop = keyframes`\n    0% {\n      transform: translateY(-100%);\n    }\n    100% {\n      transform: translateX(0);\n    }`;\n\nconst slideInFromLeft = keyframes`\n    0% {\n      transform: translateX(-100%);\n    }\n    100% {\n      transform: translateY(0);\n    }\n  `;\nconst growLarge = keyframes`\n    0% {\n      transform: scale(0);\n    }\n    100% {\n      transform: scale(1);\n    }\n    `;\nconst slideDown = keyframes`\n    0% {\n            transform: translateY(-30%);\n            filter:opacity(0)\n\n    }\n    100% {\n           transform: translateY(0);\n\n    }\n    `;\n\nexport { scaleUp, slideInFromTop, slideInFromLeft, growLarge, slideDown };\n","import styled from \"styled-components\";\n\nimport { baseFont } from \"./_definitions\";\nimport { slideDown } from \"./_animations\";\n\nconst SmartMenu = styled.nav`\n  animation: 0.7s ease-out 0s 1 ${slideDown};\n  position: absolute;\n  left: 10vw;\n  top: 3.2rem;\n  transition: 0.7s;\n  width: 80vw;\n  height: 2rem;\n  font-family: ${baseFont};\n  font-weight: 300;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-transform: uppercase;\n  user-select: none;\n\n  @media (max-width: 435px) {\n    top: 4.5rem;\n    width: 100vw;\n    left: 0;\n  }\n`;\n\nexport default SmartMenu;\n","import React from \"react\";\nimport { FaSyncAlt, FaEye, FaEyeSlash, FaFilter, FaUser } from \"react-icons/fa\";\n\nimport SmartButton from \"./SmartButton\";\nimport Style from \"../styles/SmartMenu\";\n\nconst buttonElement = (props: {\n  element: any;\n  mode: string;\n  accent: boolean;\n  function: (arg0?: string) => void;\n}) => {\n  return (\n    <SmartButton\n      accent={props.accent}\n      mode={props.mode}\n      function={props.function}\n    >\n      {props.element}\n    </SmartButton>\n  );\n};\n\nconst SmartMenu = (props: {\n  read: boolean;\n  toggleRead: () => void;\n  refresh: () => void;\n  moduleToggle: (arg0?: string) => void;\n  mode: string;\n  showFilter: boolean;\n  toggleFilter: () => void;\n}) => {\n  // homeButton\n  let homeButton = buttonElement({\n    element: props.mode === \"post\" ? \"BACK\" : \"HOME\",\n    mode: \"home\",\n    accent: false,\n    function: props.moduleToggle\n  });\n  // sourcesButton\n  let sourcesButton = buttonElement({\n    element: \"SOURCES\",\n    mode: \"sources\",\n    accent: false,\n    function: props.moduleToggle\n  });\n  // showReadButton;\n  let showReadButton = buttonElement({\n    element: props.read ? <FaEye /> : <FaEyeSlash />,\n    mode: \"showRead\",\n    accent: props.read,\n    function: props.toggleRead\n  });\n\n  // refreshButton;\n  let refreshButton = buttonElement({\n    element: <FaSyncAlt />,\n    mode: \"refresh\",\n    accent: false,\n    function: props.toggleRead\n  });\n  // filterButton;\n  // const filterAccent = props.showFilter ? false : true;\n  let filterButton = buttonElement({\n    element: <FaFilter />,\n    mode: \"filter\",\n    accent: props.showFilter,\n    function: props.toggleFilter\n  });\n\n  const profileButton = buttonElement({\n    element: <FaUser />,\n    mode: \"profile\",\n    accent: false,\n    function: props.moduleToggle\n  });\n\n  return (\n    <Style>\n      {homeButton}\n      {sourcesButton}\n      {showReadButton}\n      {filterButton}\n      {refreshButton}\n      {profileButton}\n    </Style>\n  );\n  // toggleModule = event => {\n  //   this.props.moduleToggle(event.target.innerText);\n  // };\n  // toggleFilter = () => {\n  //   this.props.toggleFilter();\n  // };\n  // render = () => {\n\n  // let homeBack = \"HOME\";\n\n  // let filter = this.props.showFilter ? (\n  //   <Filter\n  //     list={this.props.sources}\n  //     filterClick={this.props.filterClick}\n  //     toggleFilter={() => this.toggleFilter()}\n  //   />\n  // ) : null;\n  // let filterStyle = this.props.filter ? style.on : style.off;\n  // let filterButton = (\n  //   <button>\n  //     <FaFilter className={filterStyle} onClick={() => this.toggleFilter()} />\n  //   </button>\n  // );\n  // let showHide = (\n  //   <button>\n  //     {this.props.read ? (\n  //       <FaEye onClick={this.props.readToggle} />\n  //     ) : (\n  //       <FaEyeSlash onClick={this.props.readToggle} />\n  //     )}\n  //   </button>\n  // );\n\n  // if (this.props.mode === \"show\") {\n  //   filterButton = null;\n  //   showHide = null;\n  //   homeBack = \"BACK\";\n  // } else if (this.props.mode === \"SOURCES\") {\n  //   showHide = null;\n  //   filterButton = null;\n  // }\n\n  // const homeBackButton = (\n  //   <button className={style.text} onClick={this.toggleModule}>\n  //     {homeBack}\n  //   </button>\n  // );\n  // return (\n  //   <section className={style.smartMenu}>\n  //     {homeBackButton}\n  //     <button className={style.text} onClick={this.toggleModule}>\n  //       SOURCES\n  //     </button>\n  //     <button className={style.text}>PROFILE</button>\n  //     <button>\n  //       <FaSyncAlt onClick={this.props.refresh} className={style.refresh} />\n  //     </button>\n  //     {showHide}\n  //     {filterButton}\n  //     {filter}\n  //   </section>\n  // );\n  // };\n};\nexport default SmartMenu;\n","import React from \"react\";\n\nimport {\n  Menu,\n  ButtonsWrapper,\n  ButtonClear,\n  ButtonSource\n} from \"../styles/Filter\";\n\n// const handleClick = (props:{func:(arg0:string)=>void, id:string}) => {\n//   func(id)\n// };\n\nconst Filter = (props: {\n  toggle: () => void;\n  list: any[];\n  choose: (id: string) => void;\n  id: string;\n}) => {\n  const buttonClear =\n    props.id === \"\" ? null : (\n      <ButtonClear onClick={() => props.choose(\"clear\")}>\n        Clear Filter\n      </ButtonClear>\n    );\n  const buttons = props.list.map(source => {\n    return (\n      <ButtonSource\n        key={source._id}\n        accent={source._id === props.id}\n        onClick={() => props.choose(source._id)}\n        data-test=\"component-filter-item\"\n      >\n        {source.name}\n      </ButtonSource>\n    );\n  });\n  return (\n    <Menu data-test=\"container-filter\" onClick={() => props.toggle()}>\n      <ButtonsWrapper>\n        {buttonClear}\n        {buttons}\n      </ButtonsWrapper>\n    </Menu>\n  );\n};\n\nexport default Filter;\n","import styled from \"styled-components\";\n\nconst Display = styled.main`\n  padding: 0 20px;\n  margin: 0 auto;\n  margin-top: 2.3rem;\n`;\n\nconst PostListStyle = styled(Display)`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  transition: 0.7s;\n\n  @media (max-width: 599px) {\n  }\n\n  @media (min-width: 600px) and (max-width: 949px) {\n  }\n\n  @media (min-width: 950px) and (max-width: 1099px) {\n  }\n\n  @media (min-width: 1100px) {\n  }\n`;\n\nconst LoadingS = styled.div``;\n\nexport { PostListStyle, LoadingS };\n","import React from \"react\";\n\nimport { PostListStyle, LoadingS } from \"../styles/PostCardList\";\n\nconst Loading = () => {\n  return (\n    <PostListStyle>\n      <LoadingS>Loading...</LoadingS>\n    </PostListStyle>\n  );\n};\n\nexport default Loading;\n","import styled from \"styled-components\";\nimport {\n  arsenic,\n  // light,\n  // lightGrey,\n  // silverSand,\n  // dimGrey,\n  darkMediumGrey\n  // accent,\n  // accentAlt,\n  // arsenicTrans,\n  // arsenicLightTrans,\n  // arsenicSemiTrans,\n  // baseFont,\n  // statusFont\n} from \"./_definitions\";\n\nconst Button = styled.button`\n  cursor: pointer;\n  outline: none;\n  font-size: 1.2rem;\n  margin: 0;\n  transition: 0.3s;\n\n  @media (max-width: 599px) {\n    font-size: 1.2rem;\n  }\n`;\nconst Off = styled.span`\n  transition: 0.3s;\n\n  color: ${darkMediumGrey};\n  &:hover {\n    color: ${arsenic};\n  }\n`;\nconst On = styled.span`\n  transition: 0.3s;\n\n  color: ${arsenic};\n  &:hover {\n    color: ${darkMediumGrey};\n  }\n`;\n\n// .delete {\n//   @extend .button;\n//   font-size: 1rem;\n// }\n\nexport { Button, On, Off };\n","import React from \"react\";\n\nimport { Button, On, Off } from \"../../styles/PostButton\";\n\nconst PostButton = (props: {\n  update: (arg0: any) => void;\n  mode: string;\n  id: string;\n  children: any;\n  status: boolean;\n}) => {\n  const status = props.status ? <On>{props.children}</On> : <Off>{props.children}</Off>;\n  return (\n    <Button onClick={() => props.update({ field: props.mode, id: props.id })}>\n      {status}\n    </Button>\n  );\n};\n\nexport default PostButton;\n","import styled from \"styled-components\";\n\nimport { darkMediumGrey, statusFont } from \"./_definitions\";\nimport { scaleUp } from \"./_animations\";\n\nconst Card = styled.article`\n  animation: 0.3s ease-out 0s 1 ${scaleUp};\n\n  @media (min-width: 499px) {\n    .text {\n      max-height: 50rem;\n    }\n  }\n\n  margin: 0 auto;\n  margin-bottom: 1rem;\n  padding-bottom: 1rem;\n\n  border-bottom: 1px solid ${darkMediumGrey};\n  @media (max-width: 699px) {\n    width: 90%;\n  }\n\n  @media (min-width: 700px) and (max-width: 949px) {\n    width: 45%;\n  }\n\n  @media (min-width: 950px) and (max-width: 1199px) {\n    width: 30%;\n  }\n\n  @media (min-width: 1200px) and (max-width: 1599px) {\n    width: 23%;\n  }\n\n  @media (min-width: 1599px) and (max-width: 4000px) {\n    width: 18%;\n  }\n`;\nconst Title = styled.h3`\n  cursor: pointer;\n  font-weight: 500;\n  margin: 0;\n  line-height: 1.6rem;\n  font-size: 1.3rem;\n  @media (max-width: 499px) {\n    font-size: 1.5rem;\n    line-height: 1.8rem;\n  }\n`;\n\nconst Text = styled.main`\n  font-size: 1.1rem;\n  padding: 0 0 0.3rem 0;\n  cursor: pointer;\n  margin-bottom: 5px;\n  line-height: 1.4rem;\n\n  @media (max-width: 499px) {\n    font-size: 1.3rem;\n  }\n`;\nconst Line = styled.section`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-content: center;\n  font-weight: 300;\n  font-family: ${statusFont};\n  letter-spacing: 0.03rem;\n  font-size: 0.8rem;\n  padding-top: 0.6rem;\n`;\nconst Footer = styled.footer`\n  display: flex;\n  font-family: ${statusFont};\n  justify-content: space-between;\n  font-size: 80%;\n  font-weight: 300;\n  padding: 0 0.3rem;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport { Card, Title, Line, Wrapper, Text, Footer };\n","import React from \"react\";\n\nimport Button from \"./PostButton\";\nimport { Line, Wrapper } from \"../../styles/PostCard\";\n\nconst PostLine = (props: {\n  mode: string;\n  author: string;\n  source: string;\n  buttons: { star: any; read?: any; trash?: any };\n  update: (arg0: any) => void;\n  id: string;\n  read: boolean;\n  star: boolean;\n}) => {\n  const wrapper =\n    props.mode === \"show\"\n      ? `${props.author} @ ${props.source}`\n      : `@${props.source}`;\n  return (\n    <Line>\n      <Wrapper>{wrapper}</Wrapper>\n      <Wrapper>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"star\"\n          status={props.star}\n        >\n          {props.buttons.star}\n        </Button>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"read\"\n          status={props.read}\n        >\n          {props.buttons.read}\n        </Button>\n      </Wrapper>\n    </Line>\n  );\n};\n\nexport default PostLine;\n","import React from \"react\";\n\nimport dateTime from \"../../modules/dateTime\";\n\nimport { Footer, Wrapper } from \"../../styles/PostCard\";\n\nconst PostFooter = (props: { timestamp: Date; readingTime: number }) => {\n  const readTime = `~${props.readingTime} mins`;\n  return (\n    <Footer>\n      <Wrapper>{dateTime(props.timestamp)}</Wrapper>\n      <Wrapper>{readTime}</Wrapper>\n    </Footer>\n  );\n};\n\nexport default PostFooter;\n","import React from \"react\";\nimport { FaCheck, FaCheckDouble } from \"react-icons/fa\";\nimport { TiStarFullOutline, TiStarOutline } from \"react-icons/ti\";\n\nimport Line from \"./PostElements/PostLine\";\nimport Footer from \"./PostElements/PostFooter\";\nimport { Post } from \"../store/post/types\";\n\nimport { Card, Title, Text } from \"../styles/PostCard\";\n\nconst PostCard = (props: {\n  post: Post;\n  update: (arg0: any) => void;\n  select: (arg0: any) => void;\n}) => {\n  const text = `${props.post.text.replace(/<(?:.|\\n)*?>/gm, \" \")}...`;\n\n  const starButton = props.post.star ? (\n    <TiStarFullOutline />\n  ) : (\n    <TiStarOutline />\n  );\n  const readButton = props.post.read ? <FaCheckDouble /> : <FaCheck />;\n  return (\n    <Card>\n      <Title\n        onClick={() => {\n          props.select({ id: props.post._id });\n        }}\n      >\n        {props.post.title}\n      </Title>\n      <Line\n      mode='card'\n        source={props.post.source}\n        author={props.post.author}\n        buttons={{ star: starButton, read: readButton }}\n        read={props.post.read}\n        star={props.post.star}\n        update={props.update}\n        id={props.post._id}\n      />\n      <Text\n        onClick={() => {\n          props.select({ id: props.post._id });\n        }}\n      >\n        {text}\n      </Text>\n      <Footer\n        timestamp={props.post.published}\n        readingTime={props.post.readTime}\n      />\n    </Card>\n  );\n};\n\nexport default PostCard;\n","import React from \"react\";\n\nimport PostCard from \"./PostCard\";\nimport { Post } from \"../store/post/types\";\nimport { PostListStyle } from \"../styles/PostCardList\";\n\nconst postCardComponent = (props: {\n  post: Post;\n  update: (arg0: any) => void;\n  select: (arg0: any) => void;\n}) => {\n  return (\n    <PostCard\n      key={props.post._id}\n      post={props.post}\n      update={props.update}\n      select={props.select}\n    />\n  );\n};\n\nconst postCheck = (props: {\n  show: boolean;\n  filter: string;\n  pRead: boolean;\n  pSource: string;\n}) => {\n  if (props.filter) {\n    if (props.show) {\n      return props.pSource === props.filter;\n    } else {\n      return props.pRead === props.show && props.pSource === props.filter;\n    }\n  } else {\n    if (props.show) {\n      return true;\n    } else {\n      return props.pRead === props.show;\n    }\n  }\n};\n\nconst PostCardList = (props: {\n  showRead: boolean;\n  posts: any;\n  selectPost: (arg0: any) => void;\n  update: (arg0: any) => void;\n  filter: string;\n}) => {\n  return (\n    <PostListStyle>\n      {props.posts.map((post: Post) => {\n        const postCall = postCardComponent({\n          post: post,\n          update: props.update,\n          select: props.selectPost\n        });\n        return postCheck({\n          show: props.showRead,\n          filter: props.filter,\n          pRead: post.read,\n          pSource: post.sourceId\n        })\n          ? postCall\n          : null;\n      })}\n    </PostListStyle>\n  );\n};\n\nexport default PostCardList;\n","import styled from \"styled-components\";\n\nimport {\n  darkMediumGrey,\n  baseFont\n} from \"./_definitions\";\n\nconst Show = styled.article`\n  font-family: ${baseFont};\n  padding: 0 20px;\n  padding-bottom: 1rem;\n  margin: 0 auto;\n  margin-top: 3rem;\n  max-width: 1000px;\n  display: flex;\n  flex-direction: column;\n`;\nconst Title = styled.h3`\n  cursor: pointer;\n  font-weight: 500;\n  margin: 0;\n  line-height: 1.6rem;\n  font-size: 1.3rem;\n  @media (max-width: 499px) {\n    font-size: 1.5rem;\n    line-height: 1.8rem;\n  }\n`;\n\ninterface IProps {\n  className: any;\n}\n\nconst Text = styled.main<IProps>`\n  border-bottom: 1px solid ${darkMediumGrey};\n  padding-bottom: 1rem;\n  margin-bottom: 1rem;\n`;\n\nexport { Show, Title, Text }\n","import React from \"react\";\nimport { FaTrash } from \"react-icons/fa\";\nimport { TiStarFullOutline, TiStarOutline } from \"react-icons/ti\";\n\nimport { Post } from \"../store/post/types\";\nimport Line from \"./PostElements/PostLine\";\nimport Footer from \"./PostElements/PostFooter\";\n\nimport { Show, Title, Text } from \"../styles/PostShow\";\nimport style from \"../styles/PostTextStyle.module.scss\";\n\nconst handleTitleClick = (props: { link: string }) => {};\n\nconst PostShow = (props: { post: Post; update: (arg0: any) => void }) => {\n  const starButton = props.post.star ? (\n    <TiStarFullOutline />\n  ) : (\n    <TiStarOutline />\n  );\n  const trashButton = <FaTrash />;\n  return (\n    <Show>\n      <Title\n        onClick={() => {\n          handleTitleClick({ link: props.post.url });\n        }}\n      >\n        {props.post.title}\n      </Title>\n      <Line\n        mode=\"show\"\n        source={props.post.source}\n        author={props.post.author}\n        buttons={{ star: starButton, trash: trashButton }}\n        read={props.post.read}\n        star={props.post.star}\n        update={props.update}\n        id={props.post._id}\n      />\n      <Text\n        className={style.text}\n        dangerouslySetInnerHTML={{\n          __html: props.post.text\n        }}\n      />\n      <Footer\n        timestamp={props.post.published}\n        readingTime={props.post.readTime}\n      />\n    </Show>\n  );\n};\nexport default PostShow;\n","import styled from \"styled-components\";\n\nimport {\n  silverSand,\n  lightGrey,\n  arsenic,\n  darkMediumGrey,\n  statusFont,\n  baseFont\n} from \"./_definitions\";\n\nimport {\n  scaleUp,\n  slideDown\n} from \"./_animations\";\n\nconst Card = styled.section`\n  animation: 0.3s ease-out 0s 1 ${scaleUp};\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CardWrapper = styled.div`\n  z-index: 100;\n  border-radius: 1px;\n  display: flex;\n  border-radius: 1px;\n  width: 80%;\n  max-width: 800px;\n  margin: 0.2rem auto;\n  padding: 0.7rem;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  background-color: ${silverSand};\n  border-bottom: 3px solid ${silverSand};\n\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n\n  &:hover {\n    /* transform: scale(1.02); */\n    /* transform: scale(1.05); */\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n\n    border-bottom: 3px solid ${arsenic};\n  }\n  /* box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  } */\n`;\n\nconst NameWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  @media (max-width: 599px) {\n    margin-top: 0.7rem;\n    font-size: 1rem;\n  }\n\n  margin: 0;\n  font-weight: 700;\n  font-size: 1.2rem;\n  letter-spacing: 0.07rem;\n`;\n\nconst Url = styled.div`\n  @media (max-width: 599px) {\n    display: none;\n  }\n\n  margin: 0;\n  letter-spacing: 0.05rem;\n  font-family: \"Open Sans\";\n  white-space: pre-wrap;\n  font-weight: 400;\n  font-size: 0.7rem;\n`;\nconst Edit = styled.div`\n  animation: 0.3s ease-out 0s 1 ${slideDown};\n  border-radius: 0 0 2px 2px;\n\n  /* @media (max-width: 599px) {\n    padding: {\n      top: 20px;\n      left: 10px;\n      right: 10px;\n      bottom: 10px;\n    }\n\n    background-color: none;\n  } */\n\n  width: 75%;\n  max-width: 750px;\n  /* margin: 0.2rem auto; */\n  margin: 0 auto;\n  margin-top: -0.2rem;\n  margin-bottom: 1rem;\n  background-color: ${arsenic};\n  color: ${lightGrey};\n\n  padding: 1rem;\n\n  form {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n\n    label {\n      width: 100%;\n      display: grid;\n      grid-template-columns: 1fr 4fr;\n      grid-template-areas: \"title\" \"field\";\n      font-family: ${statusFont};\n\n      margin: 5px 0;\n\n      span {\n        font-size: 1rem;\n        padding-top: 5px;\n      }\n\n      input {\n        grid-area: \"field\";\n        border: none;\n        font-family: ${statusFont};\n        font-size: 1rem;\n        font-weight: 300;\n        background-color: ${lightGrey};\n        padding: 5px 3px;\n        border-radius: 1px;\n      }\n    }\n  }\n`;\nconst Submit = styled.button`\n  input {\n    font-weight: 300;\n    background: none;\n    border: none;\n    background-color: ${lightGrey};\n    font-family: ${baseFont};\n    border-radius: 2px;\n    margin: 0.2rem auto;\n    padding: 10px;\n    font-size: 1rem;\n    letter-spacing: 1px;\n    outline: none;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n\n    &:hover {\n      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\n        0 10px 10px rgba(0, 0, 0, 0.22);\n      background-color: ${darkMediumGrey};\n    }\n  }\n`;\n\nconst Error = styled.div`\n  color: red;\n  font-family: ${statusFont};\n  font-size: 0.8rem;\n  font-weight: 300;\n  /* background-color: ${lightGrey}; */\n`;\nexport {\n  Card,\n  CardWrapper,\n  NameWrapper,\n  Name,\n  Url,\n  Edit,\n  // FormLabel,\n  // Input,\n  Submit,\n  Error\n};\n","import React, { useState } from \"react\";\n\nimport { Source } from \"../store/source/types\";\n\nimport { Edit, Error, Submit } from \"../styles/SourceCard\";\nconst SourceEdit = (props: {\n  source?: Source;\n  submit: (arg0: Source) => any;\n}) => {\n  let currentSource = {\n    _id: \"\",\n    name: \"\",\n    url: \"\",\n    home: \"\"\n  };\n\n  if (props.source) {\n    currentSource = props.source;\n  }\n\n  const [name, setName] = useState(currentSource.name);\n  const [url, setUrl] = useState(currentSource.url);\n  const [home, setHome] = useState(currentSource.home);\n  let errors = {\n    name: \"\",\n    url: \"\",\n    home: \"\"\n  };\n\n  const checkInput = (props: {\n    value: string;\n    field: string;\n    type: string;\n  }) => {\n    const regex = new RegExp(\n      \"^(http://www.|https://www.|http://|https://)?[a-z0-9]+([-.]{1}[a-z0-9]+)*.[a-z]{2,5}(:[0-9]{1,5})?(/.*)?$\",\n      \"gm\"\n    );\n    switch (props.field) {\n      case \"name\":\n        if (props.value !== \"\") {\n          errors.name = \"\";\n          return true;\n        } else {\n          errors.name = \"Name is not provided\";\n          return false;\n        }\n      case \"url\":\n        if (props.value !== \"\") {\n          if (regex.test(props.value)) {\n            errors.url = \"\";\n            return true;\n          } else {\n            errors.url = \"The URL is wrong\";\n            return false;\n          }\n        } else {\n          errors.name = \"URL is not provided\";\n          return false;\n        }\n      default:\n        if (props.value !== \"\") {\n          if (regex.test(props.value)) {\n            errors.home = \"\";\n            return true;\n          } else {\n            errors.home = \"The homepage is wrong\";\n            return false;\n          }\n        } else {\n          errors.home = \"Homepage is not provided\";\n          return false;\n        }\n    }\n  };\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n\n    const checkName =\n      checkInput({ value: name, field: \"name\", type: \"text\" }) &&\n      checkInput({ value: url, field: \"url\", type: \"url\" }) &&\n      checkInput({ value: home, field: \"home\", type: \"url\" });\n    const newSource = {\n      _id: currentSource._id ? currentSource._id : \"\",\n      name,\n      url,\n      home\n    };\n    if (checkName && newSource !== currentSource) {\n      props.submit(newSource);\n    }\n  };\n\n  const handleInputChange = (event: any) => {\n    switch (event.target.name) {\n      case \"name\":\n        setName(event.target.value);\n        break;\n      case \"url\":\n        setUrl(event.target.value);\n        break;\n      default:\n        setHome(event.target.value);\n        break;\n    }\n  };\n\n  return (\n    <Edit>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <span>Source</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          <span>URL</span>\n          <input\n            type=\"url\"\n            name=\"url\"\n            value={url}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          <span>Homepage</span>\n          <input\n            type=\"url\"\n            name=\"home\"\n            value={home}\n            onChange={handleInputChange}\n          />\n        </label>\n        {errors.name ? <Error>- {errors.name}</Error> : null}\n        {errors.url ? <Error>- {errors.url}</Error> : null}\n        {errors.home ? <Error>- {errors.home}</Error> : null}\n        <Submit>\n          <input type=\"button\" value=\"Submit\" id=\"submit_button\" />\n        </Submit>\n      </form>\n    </Edit>\n  );\n};\n\nexport default SourceEdit;\n","import React from \"react\";\nimport { FaEdit, FaTrash } from \"react-icons/fa\";\n\nimport { Source } from \"../store/source/types\";\n\nimport Button from \"./PostElements/PostButton\";\nimport Edit from \"./SourceEdit\";\nimport {\n  Card,\n  CardWrapper,\n  NameWrapper,\n  Name,\n  Url\n} from \"../styles/SourceCard\";\nimport { Wrapper } from \"../styles/PostCard\";\n\nconst SourceCard = (props: {\n  source: Source;\n  opened: string;\n  setOpen: (arg0: any) => void;\n}) => {\n\n  const editToggler = (toggleProps: any) => {\n    props.opened === toggleProps.id\n      ? props.setOpen(\"\")\n      : props.setOpen(toggleProps.id);\n  };\n\n  const cardEdit =\n    props.opened === props.source._id ? (\n      <Edit source={props.source} submit={editToggler} />\n    ) : null;\n\n  return (\n    <Card>\n      <CardWrapper onClick={() => editToggler({ id: props.source._id })}>\n        <NameWrapper>\n          <Name> {props.source.name}</Name>\n          <Url>{props.source.url}</Url>\n        </NameWrapper>\n        <Wrapper>\n          <Button\n            update={editToggler}\n            mode=\"edit\"\n            id={props.source._id}\n            status={props.opened === props.source._id}\n          >\n            <FaEdit />\n          </Button>\n          <Button\n            update={editToggler}\n            mode=\"delete\"\n            id={props.source._id}\n            status={false}\n          >\n            <FaTrash />\n          </Button>\n        </Wrapper>\n      </CardWrapper>\n      {cardEdit}\n    </Card>\n  );\n};\n\nexport default SourceCard;\n","import styled from \"styled-components\";\n\nconst Display = styled.main`\n  padding: 0 20px;\n  margin: 0 auto;\n  margin-top: 2.3rem;\n`;\n\nconst SourcesList = styled(Display)`\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    transition: 0.3s;\n\n  @media (max-width: 599px) {\n  }\n\n  @media (min-width: 600px) and (max-width: 949px) {\n  }\n\n  @media (min-width: 950px) and (max-width: 1099px) {\n  }\n\n  @media (min-width: 1100px) {\n  }\n`;\n\nexport { SourcesList };\n","import React from \"react\";\n\nimport { Source } from \"../store/source/types\";\n\nimport SourceCard from \"./SourceCard\";\n\nimport { SourcesList } from \"../styles/SourceCardList\";\n\nconst SourceCardList = (props: { sources: Source[] }) => {\n  const [openEditId, setOpenEditId] = React.useState('');\n\n  return (\n    <SourcesList>\n      {props.sources.map((source: Source) => {\n        return (\n          <SourceCard\n            key={source._id}\n            source={source}\n            opened={openEditId}\n            setOpen={setOpenEditId}\n          />\n        );\n      })}\n    </SourcesList>\n  );\n};\n\nexport default SourceCardList;\n","import styled from \"styled-components\";\n\nimport { baseFont } from \"./_definitions\";\n\nconst Content = styled.div`\n  margin: 0 auto;\n  padding: 0;\n  width: 99vw;\n  /* height: 97vh; */\n  font-family: ${baseFont};\n  background-color: #d3d3d3 !important;\n  color: #444444;\n\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n\n  -ms-word-break: break-all;\n  /* This is the dangerous one in WebKit, as it breaks things wherever */\n  word-break: break-all;\n  /* Instead use this non-standard one: */\n  word-break: break-word;\n\n  /* Adds a hyphen where the word breaks, if supported (No Blink) */\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n`;\n\nexport default Content;\n","import styled from 'styled-components'\n\nconst Button = styled.button``\n\nexport default Button","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../store\";\n\nimport { checkUser } from \"../store/user/actions\";\nimport { CurrentUser } from \"../types\";\nimport Content from \"../styles/Content\";\nimport Button from \"../styles/Profile\";\n\nconst Profile = (props: {\n  checkUser: (arg0?: any) => any;\n  currentUser: CurrentUser;\n  signOff: () => void;\n}) => {\n  const signOff = () => {\n    const query = {\n      action: [\"user\", \"signOff\"],\n      fields: props.currentUser\n    };\n    props.checkUser(query).then((res: any) => {\n      const response = res.payload.data;\n      if (response.status) {\n        props.signOff();\n      }\n    });\n  };\n  return (\n    <Content>\n      <Button onClick={() => signOff()}>Profile</Button>\n    </Content>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({});\n\nexport default connect(\n  mapStateToProps,\n  { checkUser }\n)(Profile);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\n\nimport { Post } from \"../../store/post/types\";\nimport { CurrentUser } from \"../../store/user/types\";\nimport { loadPosts, updatePost, selectPost } from \"../../store/post/actions\";\nimport { loadSources } from \"../../store/source/actions\";\nimport { checkUser } from \"../../store/user/actions\";\n\nimport { NewQuery } from \"../../types\";\n\nimport Header from \"../../components/Header/Header\";\nimport SmartMenu from \"../../components/SmartMenu\";\nimport Filter from \"../../components/Filter\";\nimport Loading from \"../../components/Loading\";\nimport PostCardList from \"../../components/PostCardList\";\nimport PostShow from \"../../components/PostShow\";\nimport SourceCardList from \"../../components/SourceCardList\";\nimport Profile from \"../../components/Profile\";\nimport ContentS from \"../../styles/Content\";\n\ninterface props {\n  loadPosts: (arg0?: any) => any;\n  updatePost: (arg0?: any) => any;\n  selectPost: (arg0?: any) => any;\n  loadSources: (arg0?: any) => any;\n  checkUser: (arg0?: any) => any;\n  currentUser: CurrentUser;\n  signOff: () => void;\n}\n\ninterface Content {\n  refresher: any;\n}\n\ninterface IState {\n  module: string;\n  showRead: boolean;\n  showFilter: boolean;\n  filterId: string;\n  loading: boolean;\n  sources: any[];\n  posts: any[];\n  message: string;\n  showPost: Post;\n}\nconst emptyPost: Post = {\n  _id: \"\",\n  source: \"\",\n  sourceId: \"\",\n  title: \"\",\n  url: \"\",\n  author: \"\",\n  published: new Date(),\n  parsed: new Date(),\n  text: \"\",\n  readTime: 0,\n  pages: 0,\n  read: false,\n  star: false\n};\n\nclass Content extends React.Component<props> {\n  state = {\n    loading: true,\n    module: \"posts\",\n    showRead: false,\n    showFilter: false,\n    filterId: \"\",\n    sources: [],\n    posts: [],\n    message: \"\",\n    showPost: emptyPost\n  };\n\n  componentDidMount() {\n    this.fetchPostsSources();\n    this.refresher = setInterval(this.fetchPostsSources, 10000);\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  loadPosts = (query: NewQuery) => {\n    this.props.loadPosts(query).then((data: any) => {\n      if (data.payload.data.message) {\n        this.setState({\n          posts: [],\n          message: data.payload.data.message,\n          loading: false\n        });\n      } else {\n        this.setState({\n          posts: data.payload.data,\n          loading: false\n        });\n      }\n    });\n  };\n  loadSources = (query: NewQuery) => {\n    this.props.loadSources(query).then((data: any) => {\n      if (data.payload.data.message) {\n        this.setState({\n          sources: [],\n          message: data.payload.data.message,\n          loading: false\n        });\n      } else {\n        this.setState({\n          sources: data.payload.data,\n          loading: false\n        });\n      }\n    });\n  };\n\n  fetchPostsSources = () => {\n    // set queries\n    const postQuery = {\n      token: this.props.currentUser.token,\n      action: [\"post\", \"fetch\"]\n    };\n    const sourceQuery = {\n      token: this.props.currentUser.token,\n      action: [\"source\", \"fetch\"]\n    };\n    // run requests\n    this.loadPosts(postQuery);\n    this.loadSources(sourceQuery);\n  };\n\n  showModule = (module: string = \"posts\") => {\n    this.setState({ module: module });\n  };\n  toggleShowRead = () => {\n    this.setState({ showRead: !this.state.showRead });\n  };\n  toggleShowFilter = () => {\n    this.setState({ showFilter: !this.state.showFilter });\n  };\n\n  // update sources & posts\n  chooseFilter = (id: string) => {\n    this.toggleShowFilter();\n    if (id === \"clear\") {\n      this.setState({\n        filterId: \"\"\n      });\n    } else {\n      this.setState({ filterId: id });\n    }\n  };\n\n  handleRefreshClick = () => {};\n  selectPostToShow = (props: { id: string }) => {\n    // this.updatePostAction({\n    //   field: \"read\",\n    //   id: props.id\n    // });\n    this.props\n      .selectPost(props.id)\n      .then((data: { payload: { data: Post } }) => {\n        this.showModule(\"post\");\n        this.setState({ showPost: data.payload.data });\n      });\n  };\n\n  updateStatePosts = (props: { id: string; field: string }) => {\n    const newPosts = this.state.posts;\n    let oldPostState;\n    newPosts\n      .filter((post: Post) => post._id === props.id)\n      .forEach((post: Post) => {\n        if (props.field === \"read\") {\n          oldPostState = post.read;\n          post.read = !post.read;\n        } else {\n          oldPostState = post.star;\n          post.star = !post.star;\n        }\n      });\n    this.setState({ posts: newPosts });\n    return oldPostState;\n  };\n  updatePostAction = (props: { field: string; id: string }) => {\n    const oldState = this.updateStatePosts({\n      id: props.id,\n      field: props.field\n    });\n    let fields: { [index: string]: boolean } = {};\n    fields[`${props.field}`] = !oldState;\n\n    const query = {\n      action: [\"post\", \"update\"],\n      id: props.id,\n      fields\n    };\n\n    this.props\n      .updatePost(query)\n      .then((response: { [index: string]: string }) => {\n        this.setState({ message: response.statusText });\n      });\n  };\n\n  render() {\n    const smartMenu = (\n      <SmartMenu\n        read={this.state.showRead}\n        toggleRead={this.toggleShowRead}\n        refresh={this.handleRefreshClick}\n        moduleToggle={this.showModule}\n        mode={this.state.module}\n        showFilter={this.state.filterId !== \"\"}\n        toggleFilter={this.toggleShowFilter}\n      />\n    );\n\n    const filter =\n      this.state.showFilter && this.state.sources ? (\n        <Filter\n          toggle={this.toggleShowFilter}\n          list={this.state.sources}\n          choose={this.chooseFilter}\n          id={this.state.filterId}\n        />\n      ) : null;\n    let postsList;\n    if (this.state.message) {\n    } else if (this.state.loading) {\n      postsList = <Loading />;\n    } else {\n      postsList = (\n        <PostCardList\n          showRead={this.state.showRead}\n          posts={this.state.posts}\n          selectPost={this.selectPostToShow}\n          update={this.updatePostAction}\n          filter={this.state.filterId}\n        />\n      );\n    }\n    const postShow = (\n      <PostShow post={this.state.showPost} update={this.updatePostAction} />\n    );\n\n    const sourcesList = (\n      <SourceCardList\n        sources={this.state.sources}\n        //  addSource={this.props.addSource}\n        //  deleteSource={this.deleteSource}\n        //  updateSource={this.props.updateSource}\n      />\n    );\n    const profile = (\n      <Profile\n        currentUser={this.props.currentUser}\n        signOff={this.props.signOff}\n      />\n    );\n    return (\n      <ContentS data-test=\"app\">\n        <Header />\n        {smartMenu}\n        {filter}\n        {this.state.module === \"posts\" ? postsList : null}\n        {this.state.module === \"post\" ? postShow : null}\n        {this.state.module === \"sources\" ? sourcesList : null}\n        {this.state.module === \"profile\" ? profile : null}\n      </ContentS>\n    );\n  }\n}\nconst mapStateToProps = (state: AppState) => ({\n  // posts: state.posts,\n  // sources: state.sources,\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadPosts, updatePost, selectPost, loadSources, checkUser }\n)(Content);\n","import {\n  // SystemState,\n  SET_POSTS,\n  Query,\n  PostId,\n  UPDATE_POST,\n  SELECT_POST\n} from \"./types\";\nimport { NewQuery } from \"../../types\";\n\nimport axios from \"axios\";\n\n// const apiUrl = `${process.env.REACT_APP_SERVER}/api`;\n\nexport function loadPosts(query: NewQuery) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: SET_POSTS,\n    payload: promise\n  };\n}\n\nexport function updatePost(query: Query) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: UPDATE_POST,\n    payload: promise\n  };\n}\n\nexport function selectPost(postId: PostId) {\n  const promise = axios\n    .get(`/post/${postId}`)\n    .then(response => response)\n    .catch(error => error);\n  return {\n    type: SELECT_POST,\n    payload: promise\n  };\n}\n\n// export function updateSource(query) {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({ query })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"UPDATE_SOURCE\",\n//     payload: promise\n//   };\n// }\n// export function refreshPosts() {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({\n//       query: {\n//         action: [\"post\", \"refresh\"]\n//       }\n//     })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"REFRESH_POSTS\",\n//     payload: promise\n//   };\n// }\n// export function addSource(query) {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({ query })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"ADD_SOURCE\",\n//     payload: promise\n//   };\n// }\n// export function deleteSource(query) {\n//   if (query.action && query.id) {\n//     const promise = fetch(apiUrl, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify({ query })\n//     })\n//       .then(r => r)\n//       // r.json())\n//       .catch(e => {\n//         return e;\n//       });\n\n//     return {\n//       type: \"DELETE_SOURCE\",\n//       payload: promise\n//     };\n//   } else {\n//     return \"Missing action and/or id\";\n//   }\n// }\n\n// export function setSources() {\n//   const promise = fetch(`${apiUrl}/sources`).then(r => r.json());\n//   return {\n//     type: \"SET_SOURCES\",\n//     payload: promise\n//   };\n// }\n\n// export function selectPost(postId) {\n//   const promise = fetch(`${apiUrl}/post/${postId}`).then(r => r.json());\n//   return {\n//     type: \"SELECT_POST\",\n//     payload: promise\n//   };\n// }\n\n// export function sourceCreateModule(status) {\n//   return {\n//     type: \"SHOW_MODULE\",\n//     payload: status\n//   };\n// }\n","import {\n  SET_SOURCES\n  // Query,\n  // PostId,\n  // UPDATE_POST,\n  // SELECT_POST\n} from \"./types\";\nimport axios from \"axios\";\nimport { NewQuery } from \"../../types\";\n\n// const apiUrl = `${process.env.REACT_APP_SERVER}/api`;\n\nexport function loadSources(query: NewQuery) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n  return {\n    type: SET_SOURCES,\n    payload: promise\n  };\n}\n","import React from \"react\";\nimport { withCookies } from \"react-cookie\";\n\nimport Home from \"../Home/Home\";\nimport Content from \"../Content/Content\";\n\nconst App = (props?: any) => {\n  const [userEmail, setUserEmail] = React.useState(\"\");\n  const [userToken, setUserToken] = React.useState(\"\");\n  const [authStatus, setAuthStatus] = React.useState(false);\n  const { cookies } = props;\n\n  const toggleAuth = () => {\n    setAuthStatus(!authStatus);\n  };\n  const signOff = () => {\n    cookies.set(\"email\", \"\", {\n      path: \"/\"\n    });\n    cookies.set(\"token\", \"\", {\n      path: \"/\"\n    });\n    setUserEmail(\"\");\n    setUserToken(\"\");\n    setAuthStatus(false);\n  };\n  return authStatus ? (\n    <Content\n      currentUser={{ email: userEmail, token: userToken }}\n      signOff={signOff}\n    />\n  ) : (\n    <Home\n      cookies={props.cookies}\n      toggleAuth={toggleAuth}\n      setUserEmail={setUserEmail}\n      setUserToken={setUserToken}\n    />\n  );\n};\n\nexport default withCookies(App);\n","import {\n  SET_POSTS,\n  UPDATE_POST,\n  SELECT_POST,\n  // SystemState,\n  Query,\n  NewQuery,\n  PostId,\n  SystemActionTypes\n} from \"./types\";\n\nconst emptyQuery: NewQuery = {\n  token: \"\",\n  action: [\"\", \"\"]\n};\n\nexport function loadPosts(\n  state = emptyQuery,\n  action: SystemActionTypes\n): NewQuery {\n  switch (action.type) {\n    case SET_POSTS: {\n      return {\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nconst emptyState: Query = {\n  action: [\"\", \"\"],\n  id: \"\",\n  fields: { \"\": \"\" }\n};\n\nexport function updatePost(\n  state = emptyState,\n  action: SystemActionTypes\n): Query {\n  switch (action.type) {\n    case UPDATE_POST: {\n      return {\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nconst emptyPost: PostId = {\n  id: \"\"\n};\n\nexport function selectPost(\n  state = emptyPost,\n  action: SystemActionTypes\n): PostId {\n  switch (action.type) {\n    case SELECT_POST: {\n      return {\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { SET_SOURCES, SystemActionTypes } from \"./types\";\nimport { NewQuery } from \"../../types\";\n\nconst emptyQuery: NewQuery = {\n  token: \"\",\n  action: [\"\", \"\"]\n};\nexport function loadSources(\n  state = emptyQuery,\n  action: SystemActionTypes\n): NewQuery {\n  switch (action.type) {\n    case SET_SOURCES: {\n      return {\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n\n// export function loadPosts(\n//   state = emptyQuery,\n//   action: SystemActionTypes\n// ): NewQuery {\n//   switch (action.type) {\n//     case SET_POSTS: {\n//       return {\n//         ...action.payload\n//       };\n//     }\n//     default:\n//       return state;\n//   }\n// }\n\n// const emptyState: Query = {\n//   action: [\"\", \"\"],\n//   id: \"\",\n//   fields: { \"\": \"\" }\n// };\n\n// export function updatePost(\n//   state = emptyState,\n//   action: SystemActionTypes\n// ): Query {\n//   switch (action.type) {\n//     case UPDATE_POST: {\n//       return {\n//         ...action.payload\n//       };\n//     }\n//     default:\n//       return state;\n//   }\n// }\n\n// const emptyPost: PostId = {\n//   id: \"\"\n// };\n\n// export function selectPost(\n//   state = emptyPost,\n//   action: SystemActionTypes\n// ): PostId {\n//   switch (action.type) {\n//     case SELECT_POST: {\n//       return {\n//         ...action.payload\n//       };\n//     }\n//     default:\n//       return state;\n//   }\n// }\n","import {\n  CHECK_USER,\n  UserSystemState,\n  // UserQuery,\n  SystemActionTypes\n} from \"./types\";\n\nconst initialState: UserSystemState = {\n  user: { name: \"\", password: \"\", email: \"\" },\n  currentUser: { email: \"\", token: \"\" }\n};\n\nexport function checkUser(\n  state = initialState,\n  action: SystemActionTypes\n): UserSystemState {\n  switch (action.type) {\n    case CHECK_USER: {\n      return {\n        // ...state,\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n\n// const emptyState: Query = {\n//   action: [\"\", \"\"],\n//   id: \"\",\n//   fields: { \"\": \"\" }\n// };\n\n// export function updatePost(\n//   state = emptyState,\n//   action: SystemActionTypes\n// ): Query {\n//   switch (action.type) {\n//     case UPDATE_POST: {\n//       return {\n//         ...action.payload\n//       };\n//     }\n//     default:\n//       return state;\n//   }\n// }\n\n// const emptyPost: PostId = {\n//   id: \"\"\n// };\n\n// export function selectPost(\n//   state = emptyPost,\n//   action: SystemActionTypes\n// ): PostId {\n//   switch (action.type) {\n//     case SELECT_POST: {\n//       return {\n//         ...action.payload\n//       };\n//     }\n//     default:\n//       return state;\n//   }\n// }\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\n// import thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport axios from \"axios\";\n\n// import { Provider } from \"react-redux\";\n// import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { logger } from \"redux-logger\";\nimport reduxPromise from \"redux-promise\";\n\n// reducers\nimport { loadPosts } from \"./post/reducers\";\nimport { loadSources } from \"./source/reducers\";\nimport { checkUser } from \"./user/reducers\";\n// import sourcesReducer from \"./reducers/sources_reducer\";\n// import addSourceReducer from \"./reducers/add_source_reducer\";\n// import updatePostReducer from \"./reducers/update_post_reducer\";\n// import updateSourceReducer from \"./reducers/update_source_reducer\";\n// import refreshPostsReducer from \"./reducers/refresh_posts_reducer\";\n// import selectPostReducer from \"./reducers/select_post_reducer\";\n// import deleteSourceReducer from \"./reducers/delete_source_reducer\";\n\n// setup axios\naxios.defaults.baseURL = `${process.env.REACT_APP_SERVER}/api`;\naxios.defaults.headers.common[\"Authorization\"] = process.env.REACT_APP_TOKEN;\n\nconst rootReducer = combineReducers({\n  posts: loadPosts,\n  sources: loadSources,\n  user: checkUser\n  // addSource: addSourceReducer,\n  // selectPost: selectPostReducer,\n  // updatePost: updatePostReducer,\n  // updateSource: updateSourceReducer,\n  // deleteSource: deleteSourceReducer,\n  // refreshPostsReducer: refreshPostsReducer,\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default function configureStore() {\n  const middlewares = [reduxPromise, logger];\n  const middleWareEnhancer = applyMiddleware(...middlewares);\n\n  // const initialState = {\n  //   posts: [],\n  //   sources: [],\n  //   addSource: \"\",\n  //   updatePost: \"\",\n  //   selectPost: \"\",\n  //   sourceCreateModule: true,\n  //   deleteSource: \"\",\n  //   refreshPostsReducer: \"\"\n  // };\n\n  const store = createStore(\n    rootReducer,\n    composeWithDevTools(middleWareEnhancer)\n  );\n\n  return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WebFont from \"webfontloader\";\nimport { Provider } from \"react-redux\";\nimport { CookiesProvider } from \"react-cookie\";\n\n// load components\nimport App from \"./containers/App/App\";\nimport \"./index.css\";\nimport configureStore from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// loading fonts\nWebFont.load({\n  google: {\n    families: [\n      \"Alegreya:400,400i,500,500i,700,700i:cyrillic,cyrillic-ext,latin-ext\",\n      \"Open+Sans:300,300i,400\",\n      \"Roboto+Mono:300\"\n    ]\n  }\n});\n\nconst store = configureStore();\n\nReactDOM.render(\n  <CookiesProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </CookiesProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}