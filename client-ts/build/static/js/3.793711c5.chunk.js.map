{"version":3,"sources":["components/Header/Title.tsx","components/Timestamp.tsx","components/Header/Header.tsx","components/Navigation/SmartButton.tsx","components/Navigation/SmartMenu.tsx","components/Post/PostCard.tsx","components/Post/PostCardList.tsx","containers/Content/Content.tsx","store/post/actions.tsx","store/source/actions.tsx","styles/PostCard.module.scss","modules/dateTime.tsx","components/Post/PostLine.tsx","components/Post/PostButton.tsx","components/Post/PostFooter.tsx","styles/Title.module.scss","styles/Timestamp.module.scss","styles/Header.module.scss","styles/SmartButton.module.scss","styles/SmartMenu.module.scss","styles/PostButton.module.scss","styles/PostCardList.module.scss"],"names":["Title","react_default","a","createElement","className","style","header","Timestamp","props","title","dateTime","date","Header","Header_Title","components_Timestamp","Date","Button","styleClass","mode","smartRotate","accent","smartAccented","smart","onClick","child","func","handleClick","children","function","buttonElement","SmartButton","element","SmartMenu","homeButton","moduleToggle","sourcesButton","showReadButton","read","index_esm","toggleRead","refreshButton","refresh","filterButton","showFilter","toggleFilter","profileButton","menu","PostCard","text","concat","post","replace","starButton","star","ti_index_esm","readButton","card","select","id","_id","PostLine","source","author","buttons","update","PostFooter","timestamp","published","readingTime","readTime","PostCardList","list","posts","map","postCall","Post_PostCard","key","postCardComponent","selectPost","filter","show","pSource","pRead","postCheck","showRead","sourceId","Central","React","lazy","__webpack_require__","e","then","bind","Filter","PostShow","SourceCardList","Profile","SourceEdit","emptyPost","url","parsed","pages","Content","state","loading","module","filterId","sources","message","showPost","addSource","loadPosts","query","_this","data","setState","payload","loadSources","fetchPostsSources","postQuery","token","currentUser","action","sourceQuery","showModule","arguments","length","undefined","console","log","toggleShowRead","toggleShowFilter","chooseFilter","handleRefreshClick","apiRequest","res","selectPostToShow","response","authed","updateStatePosts","oldPostState","newPosts","forEach","field","updatePostAction","oldState","fields","updatePost","statusText","updateSourceInState","newSources","name","homepage","updateSourceAction","createSource","cSprops","newSource","newSourceToArray","newState","Object","toConsumableArray","toggleShowAddSource","checkIfSourcesEmpty","checkIfPostsSourcesEmpty","profile","react","fallback","Loading","signOff","submit","close","this","refresher","setInterval","window","scrollTo","clearInterval","postsList","sourcesList","postShow","smartMenu","Navigation_SmartMenu","toggle","choose","messageToShow","Post_PostCardList","data-test","components_Header_Header","Component","connect","user","promise","axios","catch","error","type","SET_POSTS","UPDATE_POST","postId","get","SELECT_POST","SET_SOURCES","exports","scaleUp","line","footer","wrapper","sub","slideInFromTop","slideInFromLeft","growLarge","slideDown","rotate","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","dateFromDb","keys","timeToDisplay","getHours","getMinutes","getDay","getDate","getMonth","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_PostButton__WEBPACK_IMPORTED_MODULE_1__","_styles_PostCard_module_scss__WEBPACK_IMPORTED_MODULE_2__","_styles_PostCard_module_scss__WEBPACK_IMPORTED_MODULE_2___default","status","_styles_PostButton_module_scss__WEBPACK_IMPORTED_MODULE_1__","_styles_PostButton_module_scss__WEBPACK_IMPORTED_MODULE_1___default","PostButton","onStatus","offStatus","_modules_dateTime__WEBPACK_IMPORTED_MODULE_1__","span","display"],"mappings":"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","file":"static/js/3.793711c5.chunk.js","sourcesContent":["import React from \"react\";\n\nimport style from \"../../styles/Title.module.scss\";\n\nconst Title = () => {\n  return <h1 className={style.header}>The Newsletter</h1>;\n};\n\nexport default Title;\n","import React from \"react\";\n\nimport dateTime from \"../modules/dateTime\";\n\nimport style from \"../styles/Timestamp.module.scss\";\n\nconst Timestamp = (props: { date: Date }) => {\n  return <h3 className={style.title}>{dateTime(props.date)}</h3>;\n};\n\nexport default Timestamp;\n","import React from \"react\";\n\nimport Title from \"./Title\";\nimport DateTime from '../Timestamp'\nimport style from \"../../styles/Header.module.scss\";\n\nconst Header = () => {\n  return (\n    <header className={style.header}>\n      <Title />\n      <DateTime date={new Date()} />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport style from \"../../styles/SmartButton.module.scss\";\n\nconst handleClick = (props: {\n  mode: string;\n  child: any;\n  func: (arg?: string) => void;\n}) => {\n  if (props.child === \"BACK\" || props.child === \"HOME\") {\n    props.func(\"posts\");\n  } else if (props.child === \"SOURCES\") {\n    props.func(\"sources\");\n  } else if (props.mode === \"profile\") {\n    props.func(\"profile\");\n  } else {\n    props.func();\n  }\n};\n\nconst Button = (props: {\n  children: any;\n  mode: string;\n  accent: boolean;\n  function: () => void;\n}) => {\n  let styleClass;\n  if (props.mode === \"refresh\") {\n    styleClass = style.smartRotate;\n  } else if (props.accent) {\n    styleClass = style.smartAccented;\n  } else {\n    styleClass = style.smart;\n  }\n  return (\n    <button\n      className={styleClass}\n      onClick={() =>\n        handleClick({\n          mode: props.mode,\n          child: props.children,\n          func: props.function\n        })\n      }\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { FaSyncAlt, FaEye, FaEyeSlash, FaFilter, FaUser } from \"react-icons/fa\";\n\nimport SmartButton from \"./SmartButton\";\nimport style from \"../../styles/SmartMenu.module.scss\";\n\nconst buttonElement = (props: {\n  element: any;\n  mode: string;\n  accent: boolean;\n  function: (arg0?: string) => void;\n}) => {\n  return (\n    <SmartButton\n      accent={props.accent}\n      mode={props.mode}\n      function={props.function}\n    >\n      {props.element}\n    </SmartButton>\n  );\n};\n\nconst SmartMenu = (props: {\n  read: boolean;\n  toggleRead: () => void;\n  refresh: () => void;\n  moduleToggle: (arg0?: string) => void;\n  mode: string;\n  showFilter: boolean;\n  toggleFilter: () => void;\n}) => {\n  // homeButton\n  let homeButton = buttonElement({\n    element: props.mode === \"post\" ? \"BACK\" : \"HOME\",\n    mode: \"home\",\n    accent: false,\n    function: props.moduleToggle\n  });\n  // sourcesButton\n  let sourcesButton = buttonElement({\n    element: \"SOURCES\",\n    mode: \"sources\",\n    accent: false,\n    function: props.moduleToggle\n  });\n  // showReadButton;\n  let showReadButton =\n    props.mode === \"posts\"\n      ? buttonElement({\n          element: props.read ? <FaEye /> : <FaEyeSlash />,\n          mode: \"showRead\",\n          accent: props.read,\n          function: props.toggleRead\n        })\n      : null;\n\n  // refreshButton;\n  let refreshButton =\n    props.mode === \"posts\"\n      ? buttonElement({\n          element: <FaSyncAlt />,\n          mode: \"refresh\",\n          accent: false,\n          function: props.refresh\n        })\n      : null;\n  // filterButton;\n  let filterButton =\n    props.mode === \"posts\"\n      ? buttonElement({\n          element: <FaFilter />,\n          mode: \"filter\",\n          accent: props.showFilter,\n          function: props.toggleFilter\n        })\n      : null;\n\n  const profileButton = buttonElement({\n    element: <FaUser />,\n    mode: \"profile\",\n    accent: false,\n    function: props.moduleToggle\n  });\n\n  return (\n    <nav className={style.menu}>\n      {homeButton}\n      {sourcesButton}\n      {showReadButton}\n      {filterButton}\n      {refreshButton}\n      {profileButton}\n    </nav>\n  );\n  // toggleModule = event => {\n  //   this.props.moduleToggle(event.target.innerText);\n  // };\n  // toggleFilter = () => {\n  //   this.props.toggleFilter();\n  // };\n  // render = () => {\n\n  // let homeBack = \"HOME\";\n\n  // let filter = this.props.showFilter ? (\n  //   <Filter\n  //     list={this.props.sources}\n  //     filterClick={this.props.filterClick}\n  //     toggleFilter={() => this.toggleFilter()}\n  //   />\n  // ) : null;\n  // let filterStyle = this.props.filter ? style.on : style.off;\n  // let filterButton = (\n  //   <button>\n  //     <FaFilter className={filterStyle} onClick={() => this.toggleFilter()} />\n  //   </button>\n  // );\n  // let showHide = (\n  //   <button>\n  //     {this.props.read ? (\n  //       <FaEye onClick={this.props.readToggle} />\n  //     ) : (\n  //       <FaEyeSlash onClick={this.props.readToggle} />\n  //     )}\n  //   </button>\n  // );\n\n  // if (this.props.mode === \"show\") {\n  //   filterButton = null;\n  //   showHide = null;\n  //   homeBack = \"BACK\";\n  // } else if (this.props.mode === \"SOURCES\") {\n  //   showHide = null;\n  //   filterButton = null;\n  // }\n\n  // const homeBackButton = (\n  //   <button className={style.text} onClick={this.toggleModule}>\n  //     {homeBack}\n  //   </button>\n  // );\n  // return (\n  //   <section className={style.smartMenu}>\n  //     {homeBackButton}\n  //     <button className={style.text} onClick={this.toggleModule}>\n  //       SOURCES\n  //     </button>\n  //     <button className={style.text}>PROFILE</button>\n  //     <button>\n  //       <FaSyncAlt onClick={this.props.refresh} className={style.refresh} />\n  //     </button>\n  //     {showHide}\n  //     {filterButton}\n  //     {filter}\n  //   </section>\n  // );\n  // };\n};\nexport default SmartMenu;\n","import React from \"react\";\nimport { FaCheck, FaCheckDouble } from \"react-icons/fa\";\nimport { TiStarFullOutline, TiStarOutline } from \"react-icons/ti\";\n\nimport Line from \"./PostLine\";\nimport Footer from \"./PostFooter\";\nimport { Post } from \"../../store/post/types\";\n\nimport style from '../../styles/PostCard.module.scss'\n\nconst PostCard = (props: {\n  post: Post;\n  update: (arg0: any) => void;\n  select: (arg0: any) => void;\n}) => {\n  const text = `${props.post.text.replace(/<(?:.|\\n)*?>/gm, \" \")}...`;\n\n  const starButton = props.post.star ? (\n    <TiStarFullOutline />\n  ) : (\n    <TiStarOutline />\n  );\n  const readButton = props.post.read ? <FaCheckDouble /> : <FaCheck />;\n  return (\n    <article className={style.card}>\n      <h3 className={style.title}\n        onClick={() => {\n          props.select({ id: props.post._id });\n        }}\n      >\n        {props.post.title}\n      </h3>\n      <Line\n        mode=\"card\"\n        source={props.post.source}\n        author={props.post.author}\n        buttons={{ star: starButton, read: readButton }}\n        read={props.post.read}\n        star={props.post.star}\n        update={props.update}\n        id={props.post._id}\n      />\n      <main className={style.text}\n        onClick={() => {\n          props.select({ id: props.post._id });\n        }}\n      >\n        {text}\n      </main>\n      <Footer\n        timestamp={props.post.published}\n        readingTime={props.post.readTime}\n      />\n    </article>\n  );\n};\n\nexport default PostCard;\n","import React from \"react\";\n\nimport PostCard from \"./PostCard\";\nimport { Post } from \"../../store/post/types\";\nimport style from \"../../styles/PostCardList.module.scss\";\n\nconst postCardComponent = (props: {\n  post: Post;\n  update: (arg0: any) => void;\n  select: (arg0: any) => void;\n}) => {\n  return (\n    <PostCard\n      key={props.post._id}\n      post={props.post}\n      update={props.update}\n      select={props.select}\n    />\n  );\n};\n\nconst postCheck = (props: {\n  show: boolean;\n  filter: string;\n  pRead: boolean;\n  pSource: string;\n}) => {\n  if (props.filter) {\n    if (props.show) {\n      return props.pSource === props.filter;\n    } else {\n      return props.pRead === props.show && props.pSource === props.filter;\n    }\n  } else {\n    if (props.show) {\n      return true;\n    } else {\n      return props.pRead === props.show;\n    }\n  }\n};\n\nconst PostCardList = (props: {\n  showRead: boolean;\n  posts: any;\n  selectPost: (arg0: any) => void;\n  update: (arg0: any) => void;\n  filter: string;\n}) => {\n  return (\n    <div className={style.list}>\n      {props.posts.map((post: Post) => {\n        const postCall = postCardComponent({\n          post: post,\n          update: props.update,\n          select: props.selectPost\n        });\n        return postCheck({\n          show: props.showRead,\n          filter: props.filter,\n          pRead: post.read,\n          pSource: post.sourceId\n        })\n          ? postCall\n          : null;\n      })}\n    </div>\n  );\n};\n\nexport default PostCardList;\n","import React, { Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\n\nimport { Post } from \"../../store/post/types\";\nimport { CurrentUser } from \"../../store/user/types\";\nimport { loadPosts, updatePost, selectPost } from \"../../store/post/actions\";\nimport { loadSources } from \"../../store/source/actions\";\nimport { apiRequest } from \"../../store/user/actions\";\n\nimport { NewQuery } from \"../../types\";\n\nimport Header from \"../../components/Header/Header\";\nimport SmartMenu from \"../../components/Navigation/SmartMenu\";\nimport Loading from \"../../components/Loading\";\nimport PostCardList from \"../../components/Post/PostCardList\";\n// import ContentS from \"../../styles/Content\";\n// import { Button } from \"../../styles/_uiElements\";\nimport \"../../styles/_ui.scss\";\n// import '../../styles/\n\n// lazy loading\nconst Central = React.lazy(() => import(\"../../components/Central\"));\nconst Filter = React.lazy(() => import(\"../../components/Filter\"));\nconst PostShow = React.lazy(() => import(\"../../components/Post/PostShow\"));\nconst SourceCardList = React.lazy(() =>\n  import(\"../../components/Source/SourceCardList\")\n);\nconst Profile = React.lazy(() => import(\"../../components/Profile\"));\nconst SourceEdit = React.lazy(() =>\n  import(\"../../components/Source/SourceEdit\")\n);\n\ninterface props {\n  loadPosts: (arg0?: any) => any;\n  updatePost: (arg0?: any) => any;\n  selectPost: (arg0?: any) => any;\n  loadSources: (arg0?: any) => any;\n  apiRequest: (arg0?: any) => any;\n  currentUser: CurrentUser;\n  signOff: () => void;\n}\n\ninterface Content {\n  refresher: any;\n}\nconst emptyPost: Post = {\n  _id: \"\",\n  source: \"\",\n  sourceId: \"\",\n  title: \"\",\n  url: \"\",\n  author: \"\",\n  published: new Date(),\n  parsed: new Date(),\n  text: \"\",\n  readTime: 0,\n  pages: 0,\n  read: false,\n  star: false\n};\n\nclass Content extends React.Component<props> {\n  state = {\n    loading: true,\n    module: \"posts\",\n    showRead: false,\n    showFilter: false,\n    filterId: \"\",\n    sources: [],\n    posts: [],\n    message: \"\",\n    showPost: emptyPost,\n    addSource: false\n  };\n\n  componentDidMount() {\n    this.fetchPostsSources();\n    this.refresher = setInterval(this.fetchPostsSources, 10000);\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  loadPosts = (query: NewQuery) => {\n    this.props.loadPosts(query).then((data: any) => {\n      this.setState({\n        posts: data.payload.data,\n        loading: false\n      });\n      // }\n    });\n  };\n  loadSources = (query: NewQuery) => {\n    this.props.loadSources(query).then((data: any) => {\n      this.setState({\n        sources: data.payload.data,\n        loading: false\n      });\n      // }\n    });\n  };\n\n  fetchPostsSources = () => {\n    // set queries\n    const postQuery = {\n      token: this.props.currentUser.token,\n      action: [\"post\", \"fetch\"]\n    };\n    const sourceQuery = {\n      token: this.props.currentUser.token,\n      action: [\"source\", \"fetch\"]\n    };\n    // run requests\n    this.loadPosts(postQuery);\n    this.loadSources(sourceQuery);\n  };\n\n  showModule = (module: string = \"posts\") => {\n    console.log(\"show module - \" + module);\n    this.setState({ module: module });\n  };\n  toggleShowRead = () => {\n    this.setState({ showRead: !this.state.showRead });\n  };\n  toggleShowFilter = () => {\n    this.setState({ showFilter: !this.state.showFilter });\n  };\n\n  // update sources & posts\n  chooseFilter = (id: string) => {\n    this.toggleShowFilter();\n    if (id === \"clear\") {\n      this.setState({\n        filterId: \"\"\n      });\n    } else {\n      this.setState({ filterId: id });\n    }\n  };\n\n  handleRefreshClick = () => {\n    // set query object\n    const query = {\n      token: this.props.currentUser.token,\n      action: [\"post\", \"refresh\"]\n    };\n    // request redux action to query API\n    this.props.apiRequest(query).then((res: any) => {\n      // const response = res.payload.data;\n    });\n  };\n  selectPostToShow = (props: { id: string }) => {\n    // set query object\n    const query = {\n      token: this.props.currentUser.token,\n      action: [\"post\", \"show\"],\n      id: props.id\n    };\n    // request redux action to query API\n    this.props.apiRequest(query).then((res: any) => {\n      const response = res.payload.data;\n      if (response.authed) {\n        this.showModule(\"post\");\n        this.setState({\n          showPost: response.post\n        });\n      }\n    });\n  };\n\n  updateStatePosts = (props: { id: string; field: string }) => {\n    const newPosts = this.state.posts;\n    let oldPostState;\n    newPosts\n      .filter((post: Post) => post._id === props.id)\n      .forEach((post: Post) => {\n        if (props.field === \"read\") {\n          oldPostState = post.read;\n          post.read = !post.read;\n        } else {\n          oldPostState = post.star;\n          post.star = !post.star;\n        }\n      });\n    this.setState({ posts: newPosts });\n    return oldPostState;\n  };\n  updatePostAction = (props: { field: string; id: string }) => {\n    const oldState = this.updateStatePosts({\n      id: props.id,\n      field: props.field\n    });\n    let fields: { [index: string]: boolean } = {};\n    fields[`${props.field}`] = !oldState;\n\n    const query = {\n      token: this.props.currentUser.token,\n      action: [\"post\", \"update\"],\n      id: props.id,\n      fields\n    };\n\n    this.props\n      .updatePost(query)\n      .then((response: { [index: string]: string }) => {\n        this.setState({ message: response.statusText });\n      });\n  };\n  updateSourceInState = (props: { [index: string]: string }) => {\n    const newSources = this.state.sources;\n    // let oldSourceElement;\n    newSources\n      .filter((source: any) => source._id === props._id)\n      .forEach((source: any) => {\n        source.name = props.name;\n        source.url = props.url;\n        source.homepage = props.homepage;\n      });\n    this.setState({ source: newSources });\n  };\n\n  updateSourceAction = (props: { [index: string]: string }) => {\n    console.log(props);\n    const query = {\n      token: this.props.currentUser.token,\n      action: [\"source\", \"update\"],\n      fields: props\n    };\n\n    this.props.apiRequest(query).then((response: any) => {\n      console.log(response);\n      const message = response.payload.data.message;\n      // if (response.payload){\n      console.log(message);\n      this.setState({ message: message });\n      this.updateSourceInState(props);\n    });\n  };\n\n  createSource = (cSprops: any) => {\n    console.log(\"- create source:\");\n    console.log(cSprops);\n    // set query object\n    const query = {\n      token: this.props.currentUser.token,\n      action: [\"source\", \"create\"],\n      fields: cSprops\n    };\n    let newSource = cSprops;\n    newSource._id = \"012345\";\n    const newSourceToArray = [newSource];\n    const newState = [...this.state.sources, ...newSourceToArray];\n    // request redux action to query API\n    this.props.apiRequest(query).then((res: any) => {\n      const response = res.payload.data;\n      console.log(response);\n      this.setState({\n        message: response.message,\n        addSource: false,\n        sources: newState\n      });\n    });\n  };\n\n  toggleShowAddSource = () => {\n    this.setState({ addSource: !this.state.addSource });\n  };\n  checkIfSourcesEmpty = () => {\n    const check =\n      this.state.sources === [] || this.state.sources.length === 0\n        ? true\n        : false;\n    return check;\n  };\n  checkIfPostsSourcesEmpty = () => {\n    let message;\n    if (\n      this.checkIfSourcesEmpty() &&\n      (this.state.posts === [] || this.state.posts.length === 0)\n    ) {\n      message = \"There are no sources configured.\";\n    } else if (this.state.posts === [] || this.state.posts.length === 0) {\n      message = \"The are no posts for now.\";\n    }\n    return message;\n  };\n  // ui elements\n  profile = (\n    <Suspense fallback={<Loading />}>\n      <Profile\n        currentUser={this.props.currentUser}\n        signOff={this.props.signOff}\n      />\n    </Suspense>\n  );\n  addSource = (\n    <Suspense fallback={<Loading />}>\n      <SourceEdit submit={this.createSource} close={this.toggleShowAddSource} />\n    </Suspense>\n  );\n  render() {\n    // postToShow\n    const postShow = (\n      <Suspense fallback={<Loading />}>\n        <PostShow post={this.state.showPost} update={this.updatePostAction} />\n      </Suspense>\n    );\n    // smartmenu\n    const smartMenu = (\n      <SmartMenu\n        read={this.state.showRead}\n        toggleRead={this.toggleShowRead}\n        refresh={this.handleRefreshClick}\n        moduleToggle={this.showModule}\n        mode={this.state.module}\n        showFilter={this.state.filterId !== \"\"}\n        toggleFilter={this.toggleShowFilter}\n      />\n    );\n    // filter\n    const filter =\n      this.state.showFilter && this.state.sources ? (\n        <Suspense fallback={<Loading />}>\n          <Filter\n            toggle={this.toggleShowFilter}\n            list={this.state.sources}\n            choose={this.chooseFilter}\n            id={this.state.filterId}\n          />\n        </Suspense>\n      ) : null;\n\n    // list of posts\n    let postsList;\n    const messageToShow = this.checkIfPostsSourcesEmpty();\n    // console.log(messageToShow);\n    // if (this.state.message) {\n    //   console.log(\"smth wrong with state message\");\n    //   console.log(this.state.message)\n    // } else\n    if (this.state.loading) {\n      postsList = <Loading />;\n    } else if (messageToShow) {\n      postsList = (\n        <Suspense fallback={<Loading />}>\n          <Central message={messageToShow} />\n        </Suspense>\n      );\n    } else {\n      postsList = (\n        <PostCardList\n          showRead={this.state.showRead}\n          posts={this.state.posts}\n          selectPost={this.selectPostToShow}\n          update={this.updatePostAction}\n          filter={this.state.filterId}\n        />\n      );\n    }\n\n    let sourcesList;\n    if (this.checkIfSourcesEmpty()) {\n      sourcesList = (\n        <Suspense fallback={<Loading />}>\n          <Central\n            message=\"The are no sources for now.\"\n            function={this.toggleShowAddSource}\n          >\n            <button className=\"button\">Add source</button>\n          </Central>\n        </Suspense>\n      );\n    } else {\n      sourcesList = (\n        <Suspense fallback={<Loading />}>\n          <SourceCardList\n            sources={this.state.sources}\n            submit={this.createSource}\n            //  addSource={this.props.addSource}\n            //  deleteSource={this.deleteSource}\n            update={this.updateSourceAction}\n          />\n        </Suspense>\n      );\n    }\n    return (\n      <main data-test=\"app\">\n        <Header />\n        {smartMenu}\n        {filter}\n        {this.state.module === \"posts\" ? postsList : null}\n        {this.state.module === \"post\" ? postShow : null}\n        {this.state.module === \"sources\" ? sourcesList : null}\n        {this.state.addSource ? this.addSource : null}\n        {this.state.module === \"profile\" ? this.profile : null}\n      </main>\n    );\n  }\n}\nconst mapStateToProps = (state: AppState) => ({\n  // posts: state.posts,\n  // sources: state.sources,\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadPosts, updatePost, selectPost, loadSources, apiRequest }\n)(Content);\n","import {\n  // SystemState,\n  SET_POSTS,\n  Query,\n  PostId,\n  UPDATE_POST,\n  SELECT_POST\n} from \"./types\";\nimport { NewQuery } from \"../../types\";\n\nimport axios from \"axios\";\n\n// const apiUrl = `${process.env.REACT_APP_SERVER}/api`;\n\nexport function loadPosts(query: NewQuery) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: SET_POSTS,\n    payload: promise\n  };\n}\n\nexport function updatePost(query: Query) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: UPDATE_POST,\n    payload: promise\n  };\n}\n\nexport function selectPost(postId: PostId) {\n  const promise = axios\n    .get(`/post/${postId}`)\n    .then(response => response)\n    .catch(error => error);\n  return {\n    type: SELECT_POST,\n    payload: promise\n  };\n}\n\n// export function updateSource(query) {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({ query })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"UPDATE_SOURCE\",\n//     payload: promise\n//   };\n// }\n// export function refreshPosts() {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({\n//       query: {\n//         action: [\"post\", \"refresh\"]\n//       }\n//     })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"REFRESH_POSTS\",\n//     payload: promise\n//   };\n// }\n// export function addSource(query) {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({ query })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"ADD_SOURCE\",\n//     payload: promise\n//   };\n// }\n// export function deleteSource(query) {\n//   if (query.action && query.id) {\n//     const promise = fetch(apiUrl, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify({ query })\n//     })\n//       .then(r => r)\n//       // r.json())\n//       .catch(e => {\n//         return e;\n//       });\n\n//     return {\n//       type: \"DELETE_SOURCE\",\n//       payload: promise\n//     };\n//   } else {\n//     return \"Missing action and/or id\";\n//   }\n// }\n\n// export function setSources() {\n//   const promise = fetch(`${apiUrl}/sources`).then(r => r.json());\n//   return {\n//     type: \"SET_SOURCES\",\n//     payload: promise\n//   };\n// }\n\n// export function selectPost(postId) {\n//   const promise = fetch(`${apiUrl}/post/${postId}`).then(r => r.json());\n//   return {\n//     type: \"SELECT_POST\",\n//     payload: promise\n//   };\n// }\n\n// export function sourceCreateModule(status) {\n//   return {\n//     type: \"SHOW_MODULE\",\n//     payload: status\n//   };\n// }\n","import {\n  SET_SOURCES\n  // Query,\n  // PostId,\n  // UPDATE_POST,\n  // SELECT_POST\n} from \"./types\";\nimport axios from \"axios\";\nimport { NewQuery } from \"../../types\";\n\n// const apiUrl = `${process.env.REACT_APP_SERVER}/api`;\n\nexport function loadSources(query: NewQuery) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n  return {\n    type: SET_SOURCES,\n    payload: promise\n  };\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PostCard_card__2J-H1\",\"scaleUp\":\"PostCard_scaleUp__3oKww\",\"text\":\"PostCard_text__1jLmP\",\"title\":\"PostCard_title__3Vi12\",\"line\":\"PostCard_line__1mgL2\",\"footer\":\"PostCard_footer__1aTwF\",\"wrapper\":\"PostCard_wrapper__2E9fT\",\"sub\":\"PostCard_sub__2hKdg\",\"slideInFromTop\":\"PostCard_slideInFromTop__2REAI\",\"slideInFromLeft\":\"PostCard_slideInFromLeft__FabEc\",\"growLarge\":\"PostCard_growLarge__g5rIF\",\"slideDown\":\"PostCard_slideDown__XTYyj\",\"rotate\":\"PostCard_rotate__2m0Yg\"};","const months: { [index: number]: string } = {\n  1: \"Jan\",\n  2: \"Feb\",\n  3: \"Mar\",\n  4: \"Apr\",\n  5: \"May\",\n  6: \"Jun\",\n  7: \"Jul\",\n  8: \"Aug\",\n  9: \"Sep\",\n  10: \"Oct\",\n  11: \"Nov\",\n  12: \"Dec\"\n};\nconst daysOfWeek: { [index: number]: string } = {\n  1: \"Sun\",\n  2: \"Mon\",\n  3: \"Tue\",\n  4: \"Wed\",\n  5: \"Thu\",\n  6: \"Fri\",\n  7: \"Sat\"\n};\n\nconst dateTime = (props: Date) => {\n  let dateFromDb = new Date();\n  if (!Object.keys(props).length) {\n    dateFromDb = new Date(props);\n  }\n  let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n  if (dateFromDb.getHours() > 12) {\n    timeToDisplay = `${dateFromDb.getHours() -\n      12}:${dateFromDb.getMinutes()} pm`;\n  }\n  return `${daysOfWeek[dateFromDb.getDay() + 1]} ${dateFromDb.getDate()} ${\n    months[dateFromDb.getMonth() + 1]\n  } at ${timeToDisplay}`;\n};\n\nexport default dateTime;\n","import React from \"react\";\n\nimport Button from \"./PostButton\";\n\nimport style from \"../../styles/PostCard.module.scss\";\n\nconst PostLine = (props: {\n  mode: string;\n  author: string;\n  source: string;\n  buttons: { star: any; read?: any; trash?: any };\n  update: (arg0: any) => void;\n  id: string;\n  read: boolean;\n  star: boolean;\n}) => {\n  const wrapper =\n    props.mode === \"show\"\n      ? `${props.author} @ ${props.source}`\n      : `@${props.source}`;\n  return (\n    <section className={style.line}>\n      <div className={style.wrapper}>{wrapper}</div>\n      <div className={style.wrapper}>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"star\"\n          status={props.star}\n        >\n          {props.buttons.star}\n        </Button>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"read\"\n          status={props.read}\n        >\n          {props.buttons.read}\n        </Button>\n      </div>\n    </section>\n  );\n};\n\nexport default PostLine;\n","import React from \"react\";\n\nimport style from \"../../styles/PostButton.module.scss\";\n\nconst PostButton = (props: {\n  update: (arg0: any) => void;\n  mode: string;\n  id: string;\n  children: any;\n  status: boolean;\n}) => {\n  const status = props.status ? (\n    <span className={style.onStatus}>{props.children}</span>\n  ) : (\n    <span className={style.offStatus}>{props.children}</span>\n  );\n  return (\n    <button\n      className={style.post}\n      onClick={() => props.update({ field: props.mode, id: props.id })}\n    >\n      {status}\n    </button>\n  );\n};\n\nexport default PostButton;\n","import React from \"react\";\n\nimport dateTime from \"../../modules/dateTime\";\n\nimport style from \"../../styles/PostCard.module.scss\";\n\nconst PostFooter = (props: {\n  timestamp: Date;\n  parsed?: Date;\n  readingTime: number;\n}) => {\n  const readTime = `~${props.readingTime} mins`;\n  const parsed = props.parsed ? (\n    <div className={style.wrapper}>\n      <span className={style.span}>parsed: </span>\n      {dateTime(props.parsed)}\n    </div>\n  ) : null;\n\n  return (\n    <footer className={style.footer}>\n      <div className={style.wrapper}>\n        <span className={style.span}>posted: </span>\n        {dateTime(props.timestamp)}\n      </div>\n      {parsed}\n      <div className={style.wrapper}>{readTime}</div>\n    </footer>\n  );\n};\n\nexport default PostFooter;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Title_header__a8239\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Timestamp_title__1oVzj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__4gWOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smart\":\"SmartButton_smart__2LjGI\",\"smartAccented\":\"SmartButton_smartAccented__3QZCJ\",\"smartRotate\":\"SmartButton_smartRotate__2lr2t\",\"rotate\":\"SmartButton_rotate__2cqkO\",\"scaleUp\":\"SmartButton_scaleUp__26vHE\",\"slideInFromTop\":\"SmartButton_slideInFromTop__1MliQ\",\"slideInFromLeft\":\"SmartButton_slideInFromLeft__3Xj3w\",\"growLarge\":\"SmartButton_growLarge__3AZ2_\",\"slideDown\":\"SmartButton_slideDown__37h5C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"SmartMenu_menu__2dsRy\",\"slideDown\":\"SmartMenu_slideDown__2HD0v\",\"scaleUp\":\"SmartMenu_scaleUp__2ghSY\",\"slideInFromTop\":\"SmartMenu_slideInFromTop__1iIxf\",\"slideInFromLeft\":\"SmartMenu_slideInFromLeft__3WgAG\",\"growLarge\":\"SmartMenu_growLarge__3i7pH\",\"rotate\":\"SmartMenu_rotate__caE1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"PostButton_post__3eHpg\",\"status\":\"PostButton_status__3B7IS\",\"onStatus\":\"PostButton_onStatus__3XZOD\",\"offStatus\":\"PostButton_offStatus__3nzNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"PostCardList_display__3V18P\",\"list\":\"PostCardList_list__2tmb4\"};"],"sourceRoot":""}