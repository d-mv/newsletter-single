{"version":3,"sources":["styles/Filter.tsx","components/Filter.tsx"],"names":["Menu","styled","div","_templateObject","arsenicSemiTrans","ButtonsWrapper","section","_templateObject2","buttonTemplate","button","_templateObject3","baseFont","ButtonSource","_templateObject4","props","accent","dimGrey","lightGrey","arsenic","ButtonClear","_templateObject5","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_Filter__WEBPACK_IMPORTED_MODULE_1__","Filter","buttonClear","id","a","createElement","onClick","choose","buttons","list","map","source","key","_id","data-test","name","toggle"],"mappings":"+1CAUA,IAAMA,EAAOC,IAAOC,IAAVC,IAQMC,KAMVC,EAAiBJ,IAAOK,QAAVC,KAOdC,EAAiBP,IAAOQ,OAAVC,IACHC,KAeXC,EAAeX,YAAOO,EAAPP,CAAHY,IACI,SAAAC,GAAK,OAAKA,EAAMC,OAASC,IAAUC,KAC9C,SAAAH,GAAK,OAAKA,EAAMC,OAASE,IAAYC,KACnB,SAAAJ,GAAK,OAAKA,EAAMC,OAASC,IAAUC,KAGjC,SAAAH,GAAK,OAAKA,EAAMC,OAASE,IAAYD,MAI9DG,EAAclB,YAAOO,EAAPP,CAAHmB,IACNH,IACWC,IACOA,IAGhBD,IACkBA,sCChE/BI,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IA+CeO,UAlCA,SAACd,GAMd,IAAMe,EACS,KAAbf,EAAMgB,GAAY,KAChBL,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAaM,QAAS,kBAAMnB,EAAMoB,OAAO,WAAzC,gBAIEC,EAAUrB,EAAMsB,KAAKC,IAAI,SAAAC,GAC7B,OACEb,EAAAM,EAAAC,cAACL,EAAA,EAAD,CACEY,IAAKD,EAAOE,IACZzB,OAAQuB,EAAOE,MAAQ1B,EAAMgB,GAC7BG,QAAS,kBAAMnB,EAAMoB,OAAOI,EAAOE,MACnCC,YAAU,yBAETH,EAAOI,QAId,OACEjB,EAAAM,EAAAC,cAACL,EAAA,EAAD,CAAMc,YAAU,mBAAmBR,QAAS,kBAAMnB,EAAM6B,WACtDlB,EAAAM,EAAAC,cAACL,EAAA,EAAD,KACGE,EACAM","file":"static/js/8.a49cad90.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nimport {\n  arsenicSemiTrans,\n  lightGrey,\n  arsenic,\n  dimGrey,\n  baseFont\n} from \"./_definitions\";\n\nconst Menu = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 100vh;\n  width: 100vw;\n  background: ${arsenicSemiTrans};\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n`;\nconst ButtonsWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n`;\n\nconst buttonTemplate = styled.button`\n  font-family: ${baseFont};\n  font-size: 1.1rem;\n  padding: 5px;\n  padding-top: 7px;\n  letter-spacing: 1px;\n  border-radius: 1px;\n  width: 180px;\n  margin: 3px auto;\n  text-align: center;\n`;\n\ninterface IProps {\n  accent: boolean;\n}\n\nconst ButtonSource = styled(buttonTemplate)<IProps>`\n  background-color: ${props => (props.accent ? dimGrey : lightGrey)};\n  color: ${props => (props.accent ? lightGrey : arsenic)};\n  border-bottom: 3px solid ${props => (props.accent ? dimGrey : lightGrey)};\n\n  &:hover {\n    border-bottom: 3px solid ${props => (props.accent ? lightGrey : dimGrey)};\n  }\n`;\n\nconst ButtonClear = styled(buttonTemplate)`\n  color: ${lightGrey};\n  background-color: ${arsenic};\n  border-bottom: 3px solid ${arsenic};\n\n  &:hover {\n    color: ${lightGrey};\n    border-bottom: 3px solid ${lightGrey};\n  }\n`;\n\nexport { Menu, ButtonsWrapper, ButtonClear, ButtonSource };\n","import React from \"react\";\n\nimport {\n  Menu,\n  ButtonsWrapper,\n  ButtonClear,\n  ButtonSource\n} from \"../styles/Filter\";\n\n// const handleClick = (props:{func:(arg0:string)=>void, id:string}) => {\n//   func(id)\n// };\n\nconst Filter = (props: {\n  toggle: () => void;\n  list: any[];\n  choose: (id: string) => void;\n  id: string;\n}) => {\n  const buttonClear =\n    props.id === \"\" ? null : (\n      <ButtonClear onClick={() => props.choose(\"clear\")}>\n        Clear Filter\n      </ButtonClear>\n    );\n  const buttons = props.list.map(source => {\n    return (\n      <ButtonSource\n        key={source._id}\n        accent={source._id === props.id}\n        onClick={() => props.choose(source._id)}\n        data-test=\"component-filter-item\"\n      >\n        {source.name}\n      </ButtonSource>\n    );\n  });\n  return (\n    <Menu data-test=\"container-filter\" onClick={() => props.toggle()}>\n      <ButtonsWrapper>\n        {buttonClear}\n        {buttons}\n      </ButtonsWrapper>\n    </Menu>\n  );\n};\n\nexport default Filter;\n"],"sourceRoot":""}