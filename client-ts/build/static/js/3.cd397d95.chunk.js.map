{"version":3,"sources":["components/Header/Title.tsx","components/Timestamp.tsx","components/Header/Header.tsx","components/Navigation/SmartButton.tsx","components/Navigation/SmartMenu.tsx","components/Post/PostCard.tsx","components/Post/PostCardList.tsx","containers/Content/Content.tsx","store/post/actions.tsx","store/source/actions.tsx","styles/PostCard.module.scss","modules/dateTime.ts","components/Post/PostLine.tsx","components/Post/PostButton.tsx","components/Post/PostFooter.tsx","styles/Title.module.scss","styles/Timestamp.module.scss","styles/Header.module.scss","styles/SmartButton.module.scss","styles/SmartMenu.module.scss","styles/PostButton.module.scss","styles/PostCardList.module.scss"],"names":["Title","react_default","a","createElement","className","style","header","Timestamp","props","title","dateTime","date","Header","Header_Title","components_Timestamp","Date","Button","styleClass","mode","smartRotate","accent","smartAccented","smart","aria-label","onClick","child","func","handleClick","children","function","buttonElement","SmartButton","element","SmartMenu","homeButton","moduleToggle","sourcesButton","showReadButton","read","index_esm","toggleRead","refreshButton","refresh","filterButton","showFilter","toggleFilter","profileButton","menu","PostCard","text","concat","post","replace","starButton","star","ti_index_esm","readButton","card","select","id","_id","PostLine","source","author","buttons","update","PostFooter","timestamp","published","readingTime","readTime","PostCardList","list","posts","map","postCall","Post_PostCard","key","postCardComponent","selectPost","filter","show","pSource","pRead","postCheck","showRead","sourceId","Central","React","lazy","__webpack_require__","e","then","bind","Filter","PostShow","SourceCardList","Profile","SourceEdit","emptyPost","url","parsed","pages","Content","state","loading","module","filterId","sources","message","showPost","addSource","loadPosts","query","_this","data","setPosts","payload","setState","loadSources","fetchPostsSources","postQuery","token","thisUser","action","sourceQuery","showModule","arguments","length","undefined","console","log","toggleShowRead","changeMessage","toggleShowFilter","setTimeout","chooseFilter","handleRefreshClick","apiRequest","response","selectPostToShow","res","authed","updateStatePosts","oldPostState","newPosts","forEach","field","updatePostAction","oldState","fields","updatePost","updateSourceInState","newSources","name","homepage","updateSourceAction","deleteAction","createSource","cSprops","newSource","newSourceToArray","newState","Object","toConsumableArray","toggleShowAddSource","checkIfSourcesEmpty","checkIfPostsSourcesEmpty","profile","react","fallback","Loading","submit","close","this","refresher","setInterval","window","scrollTo","clearInterval","postsList","sourcesList","postShow","smartMenu","Navigation_SmartMenu","toggle","choose","messageToShow","Post_PostCardList","messageDisplay","data-test","components_Header_Header","Component","connect","user","currentUser","promise","axios","catch","error","type","LOAD_POSTS","SET_POSTS","UPDATE_POST","postId","get","SELECT_POST","SET_SOURCES","exports","scaleUp","line","footer","wrapper","sub","slideInFromTop","slideInFromLeft","growLarge","slideDown","rotate","disappear","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","dateFromDb","keys","timeToDisplay","getHours","getMinutes","getDay","getDate","getMonth","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_PostButton__WEBPACK_IMPORTED_MODULE_1__","_styles_PostCard_module_scss__WEBPACK_IMPORTED_MODULE_2__","_styles_PostCard_module_scss__WEBPACK_IMPORTED_MODULE_2___default","status","_styles_PostButton_module_scss__WEBPACK_IMPORTED_MODULE_1__","_styles_PostButton_module_scss__WEBPACK_IMPORTED_MODULE_1___default","PostButton","onStatus","offStatus","_modules_dateTime__WEBPACK_IMPORTED_MODULE_1__","span","button","modal","central","display"],"mappings":"6OAQeA,EAJD,WACZ,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAMC,QAArB,4CCKMC,EAJG,SAACC,GACjB,OAAOP,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAMI,OAAQC,YAASF,EAAMG,yBCQtCC,EATA,WACb,OACEX,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAMC,QACvBL,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAACW,EAAD,CAAUH,KAAM,IAAII,kCCyCXC,EA/BA,SAACR,GAMd,IAAIS,EAQJ,OANEA,EADiB,YAAfT,EAAMU,KACKb,IAAMc,YACVX,EAAMY,OACFf,IAAMgB,cAENhB,IAAMiB,MAGnBrB,EAAAC,EAAAC,cAAA,UACEC,UAAWa,EACXM,aAAYf,EAAMU,KAClBM,QAAS,kBAlCK,SAAChB,GAKC,SAAhBA,EAAMiB,OAAoC,SAAhBjB,EAAMiB,MAClCjB,EAAMkB,KAAK,SACc,YAAhBlB,EAAMiB,MACfjB,EAAMkB,KAAK,WACa,YAAflB,EAAMU,KACfV,EAAMkB,KAAK,WAEXlB,EAAMkB,OAuBFC,CAAY,CACVT,KAAMV,EAAMU,KACZO,MAAOjB,EAAMoB,SACbF,KAAMlB,EAAMqB,aAIfrB,EAAMoB,4BCxCPE,EAAgB,SAACtB,GAMrB,OACEP,EAAAC,EAAAC,cAAC4B,EAAD,CACEX,OAAQZ,EAAMY,OACdF,KAAMV,EAAMU,KACZW,SAAUrB,EAAMqB,UAEfrB,EAAMwB,UA6IEC,EAxIG,SAACzB,GAUjB,IAAI0B,EAAaJ,EAAc,CAC7BE,QAAwB,SAAfxB,EAAMU,KAAkB,OAAS,OAC1CA,KAAM,OACNE,QAAQ,EACRS,SAAUrB,EAAM2B,eAGdC,EAAgBN,EAAc,CAChCE,QAAS,UACTd,KAAM,UACNE,QAAQ,EACRS,SAAUrB,EAAM2B,eAGdE,EACa,UAAf7B,EAAMU,KACFY,EAAc,CACZE,QAASxB,EAAM8B,KAAOrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,MAAYtC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,MAClCrB,KAAM,WACNE,OAAQZ,EAAM8B,KACdT,SAAUrB,EAAMgC,aAElB,KAGFC,EACa,UAAfjC,EAAMU,KACFY,EAAc,CACZE,QAAS/B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,MACTrB,KAAM,UACNE,QAAQ,EACRS,SAAUrB,EAAMkC,UAElB,KAEFC,EACa,UAAfnC,EAAMU,KACFY,EAAc,CACZE,QAAS/B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,MACTrB,KAAM,SACNE,OAAQZ,EAAMoC,WACdf,SAAUrB,EAAMqC,eAElB,KAEAC,EAAgBhB,EAAc,CAClCE,QAAS/B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,MACTrB,KAAM,UACNE,QAAQ,EACRS,SAAUrB,EAAM2B,eAGlB,OACElC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAM0C,MACnBb,EACAE,EACAC,EACAM,EACAF,EACAK,qDCnCQE,EA/CE,SAACxC,GAKhB,IAAMyC,EAAI,GAAAC,OAAM1C,EAAM2C,KAAKF,KAAKG,QAAQ,iBAAkB,KAAhD,OAEJC,EAAa7C,EAAM2C,KAAKG,KAC5BrD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,MAEAtD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,MAEIC,EAAahD,EAAM2C,KAAKb,KAAOrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,MAAoBtC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,MACzD,OACEtC,EAAAC,EAAAC,cAAA,WAASC,UAAWC,IAAMoD,MACxBxD,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAMI,MACnBe,QAAS,WACPhB,EAAMkD,OAAO,CAAEC,GAAInD,EAAM2C,KAAKS,QAG/BpD,EAAM2C,KAAK1C,OAEdR,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACE3C,KAAK,OACL4C,OAAQtD,EAAM2C,KAAKW,OACnBC,OAAQvD,EAAM2C,KAAKY,OACnBC,QAAS,CAAEV,KAAMD,EAAYf,KAAMkB,GACnClB,KAAM9B,EAAM2C,KAAKb,KACjBgB,KAAM9C,EAAM2C,KAAKG,KACjBW,OAAQzD,EAAMyD,OACdN,GAAInD,EAAM2C,KAAKS,MAEjB3D,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAM4C,KACrBzB,QAAS,WACPhB,EAAMkD,OAAO,CAAEC,GAAInD,EAAM2C,KAAKS,QAG/BX,GAEHhD,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CACEC,UAAW3D,EAAM2C,KAAKiB,UACtBC,YAAa7D,EAAM2C,KAAKmB,8BC4BjBC,EA5BM,SAAC/D,GAOpB,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMmE,MACnBhE,EAAMiE,MAAMC,IAAI,SAACvB,GAChB,IAAMwB,EA9CY,SAACnE,GAKzB,OACEP,EAAAC,EAAAC,cAACyE,EAAD,CACEC,IAAKrE,EAAM2C,KAAKS,IAChBT,KAAM3C,EAAM2C,KACZc,OAAQzD,EAAMyD,OACdP,OAAQlD,EAAMkD,SAoCKoB,CAAkB,CACjC3B,KAAMA,EACNc,OAAQzD,EAAMyD,OACdP,OAAQlD,EAAMuE,aAEhB,OApCU,SAACvE,GAMjB,OAAIA,EAAMwE,OACJxE,EAAMyE,KACDzE,EAAM0E,UAAY1E,EAAMwE,OAExBxE,EAAM2E,QAAU3E,EAAMyE,MAAQzE,EAAM0E,UAAY1E,EAAMwE,SAG3DxE,EAAMyE,MAGDzE,EAAM2E,QAAU3E,EAAMyE,KAoBpBG,CAAU,CACfH,KAAMzE,EAAM6E,SACZL,OAAQxE,EAAMwE,OACdG,MAAOhC,EAAKb,KACZ4C,QAAS/B,EAAKmC,WAEZX,EACA,SCjDNY,SAAUC,IAAMC,KAAK,kBAAMC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,aAC3BC,EAASN,IAAMC,KAAK,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,YAC1BE,EAAWP,IAAMC,KAAK,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,aAC5BG,EAAiBR,IAAMC,KAAK,kBAChCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,aAEII,EAAUT,IAAMC,KAAK,kBAAMC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,aAC3BK,EAAaV,IAAMC,KAAK,kBAC5BC,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,YAkBIM,EAAkB,CACtBvC,IAAK,GACLE,OAAQ,GACRwB,SAAU,GACV7E,MAAO,GACP2F,IAAK,GACLrC,OAAQ,GACRK,UAAW,IAAIrD,KACfsF,OAAQ,IAAItF,KACZkC,KAAM,GACNqB,SAAU,EACVgC,MAAO,EACPhE,MAAM,EACNgB,MAAM,GAGFiD,6MACJC,MAAQ,CACNC,SAAS,EACTC,OAAQ,QACRrB,UAAU,EACVzC,YAAY,EACZ+D,SAAU,GACVC,QAAS,GACTnC,MAAO,GACPoC,QAAS,GACTC,SAAUX,EACVY,WAAW,KAabC,UAAY,SAACC,GACXC,EAAK1G,MAAMwG,UAAUC,GAAOrB,KAAK,SAACuB,GAChCD,EAAK1G,MAAM4G,SAASD,EAAKE,QAAQF,MACjCD,EAAKI,SAAS,CAEZb,SAAS,SAKfc,YAAc,SAACN,GACbC,EAAK1G,MAAM+G,YAAYN,GAAOrB,KAAK,SAACuB,GAClCD,EAAKI,SAAS,CACZV,QAASO,EAAKE,QAAQF,KACtBV,SAAS,SAMfe,kBAAoB,WAElB,IAAMC,EAAY,CAChBC,MAAOR,EAAK1G,MAAMmH,SAASD,MAC3BE,OAAQ,CAAC,OAAQ,UAEbC,EAAc,CAClBH,MAAOR,EAAK1G,MAAMmH,SAASD,MAC3BE,OAAQ,CAAC,SAAU,UAGrBV,EAAKF,UAAUS,GACfP,EAAKK,YAAYM,MAGnBC,WAAa,WAA8B,IAA7BpB,EAA6BqB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,QAC7BG,QAAQC,IAAI,iBAAmBzB,GAC/BQ,EAAKI,SAAS,CAAEZ,OAAQA,OAE1B0B,eAAiB,WACflB,EAAKI,SAAS,CAAEjC,UAAW6B,EAAKV,MAAMnB,WACtC6B,EAAKmB,cAAL,cAAAnF,QAAkCgE,EAAKV,MAAMnB,cAE/CiD,iBAAmB,WACjBpB,EAAKI,SAAS,CAAE1E,YAAasE,EAAKV,MAAM5D,gBAG1CyF,cAAgB,SAACxB,GACfK,EAAKI,SAAS,CAAET,QAASA,IACzB0B,WAAW,kBAAMrB,EAAKI,SAAS,CAAET,QAAS,MAAO,QAGnD2B,aAAe,SAAC7E,GACduD,EAAKoB,mBACM,UAAP3E,EACFuD,EAAKI,SAAS,CACZX,SAAU,KAGZO,EAAKI,SAAS,CAAEX,SAAUhD,OAI9B8E,mBAAqB,WAEnB,IAAMxB,EAAQ,CACZS,MAAOR,EAAK1G,MAAMmH,SAASD,MAC3BE,OAAQ,CAAC,OAAQ,YAGnBV,EAAK1G,MAAMkI,WAAWzB,GAAOrB,KAAK,SAAC+C,GACjC,IAAM9B,EAAU8B,EAAStB,QAAQF,KAAKN,QACtCK,EAAKmB,cAAcxB,QAGvB+B,iBAAmB,SAACpI,GAElB,IAAMyG,EAAQ,CACZS,MAAOR,EAAK1G,MAAMmH,SAASD,MAC3BE,OAAQ,CAAC,OAAQ,QACjBjE,GAAInD,EAAMmD,IAGZuD,EAAK1G,MAAMkI,WAAWzB,GAAOrB,KAAK,SAACiD,GACjC,IAAMF,EAAWE,EAAIxB,QAAQF,KACzBwB,EAASG,SACX5B,EAAKY,WAAW,QAChBZ,EAAKI,SAAS,CACZR,SAAU6B,EAASxF,aAM3B4F,iBAAmB,SAACvI,GAClB,IACIwI,EADEC,EAAW/B,EAAKV,MAAM/B,MAc5B,OAZAwE,EACGjE,OAAO,SAAC7B,GAAD,OAAgBA,EAAKS,MAAQpD,EAAMmD,KAC1CuF,QAAQ,SAAC/F,GACY,SAAhB3C,EAAM2I,OACRH,EAAe7F,EAAKb,KACpBa,EAAKb,MAAQa,EAAKb,OAElB0G,EAAe7F,EAAKG,KACpBH,EAAKG,MAAQH,EAAKG,QAGxB4D,EAAKI,SAAS,CAAE7C,MAAOwE,IAChBD,KAETI,iBAAmB,SAAC5I,GAClB,IAAM6I,EAAWnC,EAAK6B,iBAAiB,CACrCpF,GAAInD,EAAMmD,GACVwF,MAAO3I,EAAM2I,QAEXG,EAAuC,GAC3CA,EAAM,GAAApG,OAAI1C,EAAM2I,SAAYE,EAE5B,IAAMpC,EAAQ,CACZS,MAAOR,EAAK1G,MAAMmH,SAASD,MAC3BE,OAAQ,CAAC,OAAQ,UACjBjE,GAAInD,EAAMmD,GACV2F,UAGFpC,EAAK1G,MAAM+I,WAAWtC,GAAOrB,KAAK,SAAC+C,GACjC,IAAM9B,EAAU8B,EAAStB,QAAQF,KAAKN,QACtCK,EAAKmB,cAAcxB,QAGvB2C,oBAAsB,SAAChJ,GACrB,IAAMiJ,EAAavC,EAAKV,MAAMI,QAE9B6C,EACGzE,OAAO,SAAClB,GAAD,OAAiBA,EAAOF,MAAQpD,EAAMoD,MAC7CsF,QAAQ,SAACpF,GACRA,EAAO4F,KAAOlJ,EAAMkJ,KACpB5F,EAAOsC,IAAM5F,EAAM4F,IACnBtC,EAAO6F,SAAWnJ,EAAMmJ,WAE5BzC,EAAKI,SAAS,CAAExD,OAAQ2F,OAG1BG,mBAAqB,SAACpJ,GACpB0H,QAAQC,IAAI3H,GACZ,IAAMyG,EAAQ,CACZS,MAAOR,EAAK1G,MAAMmH,SAASD,MAC3BE,OAAQ,CAAC,SAAU,UACnB0B,OAAQ9I,GAGV0G,EAAK1G,MAAMkI,WAAWzB,GAAOrB,KAAK,SAAC+C,GACjCT,QAAQC,IAAIQ,GACZ,IAAM9B,EAAU8B,EAAStB,QAAQF,KAAKN,QACtCK,EAAKmB,cAAcxB,GACnBK,EAAKsC,oBAAoBhJ,QAI7BqJ,aAAe,SAACrJ,GACd0H,QAAQC,IAAI3H,MAmBdsJ,aAAe,SAACC,GACd7B,QAAQC,IAAI,oBACZD,QAAQC,IAAI4B,GAEZ,IAAM9C,EAAQ,CACZS,MAAOR,EAAK1G,MAAMmH,SAASD,MAC3BE,OAAQ,CAAC,SAAU,UACnB0B,OAAQS,GAENC,EAAYD,EAChBC,EAAUpG,IAAM,SAChB,IAAMqG,EAAmB,CAACD,GACpBE,EAAQ,GAAAhH,OAAAiH,OAAAC,EAAA,EAAAD,CAAOjD,EAAKV,MAAMI,SAAYqD,GAE5C/C,EAAK1G,MAAMkI,WAAWzB,GAAOrB,KAAK,SAACiD,GACjC,IAAMF,EAAWE,EAAIxB,QAAQF,KAC7Be,QAAQC,IAAIQ,GACZzB,EAAKmB,cAAcM,EAAS9B,SAC5BK,EAAKI,SAAS,CAEZP,WAAW,EACXH,QAASsD,SAKfG,oBAAsB,WACpBnD,EAAKI,SAAS,CAAEP,WAAYG,EAAKV,MAAMO,eAEzCuD,oBAAsB,WAKpB,OAHEpD,EAAKV,MAAMI,UAAY,IAAoC,IAA9BM,EAAKV,MAAMI,QAAQoB,UAKpDuC,yBAA2B,WACzB,IAAI1D,EASJ,OAPEK,EAAKoD,uBACJpD,EAAK1G,MAAMiE,QAAU,IAAkC,IAA5ByC,EAAK1G,MAAMiE,MAAMuD,OAGpCd,EAAK1G,MAAMiE,QAAU,IAAkC,IAA5ByC,EAAK1G,MAAMiE,MAAMuD,SACrDnB,EAAU,6BAFVA,EAAU,mCAILA,KAGT2D,QACEvK,EAAAC,EAAAC,cAACsK,EAAA,SAAD,CAAUC,SAAUzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,OAClB1K,EAAAC,EAAAC,cAAC8F,EAAD,SAGJc,UACE9G,EAAAC,EAAAC,cAACsK,EAAA,SAAD,CAAUC,SAAUzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,OAClB1K,EAAAC,EAAAC,cAAC+F,EAAD,CAAY0E,OAAQ1D,EAAK4C,aAAce,MAAO3D,EAAKmD,0GArPrDS,KAAKtD,oBACLsD,KAAKC,UAAYC,YAAYF,KAAKtD,kBAAmB,KACrDyD,OAAOC,SAAS,EAAG,kDAInBC,cAAcL,KAAKC,4CAmPnB7C,QAAQC,IAAI2C,KAAKtK,OAEjB,IA+BI4K,EA2BAC,EA1DEC,EACJrL,EAAAC,EAAAC,cAACsK,EAAA,SAAD,CAAUC,SAAUzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,OAClB1K,EAAAC,EAAAC,cAAC4F,EAAD,CAAU5C,KAAM2H,KAAKtE,MAAMM,SAAU7C,OAAQ6G,KAAK1B,oBAIhDmC,EACJtL,EAAAC,EAAAC,cAACqL,EAAD,CACElJ,KAAMwI,KAAKtE,MAAMnB,SACjB7C,WAAYsI,KAAK1C,eACjB1F,QAASoI,KAAKrC,mBACdtG,aAAc2I,KAAKhD,WACnB5G,KAAM4J,KAAKtE,MAAME,OACjB9D,WAAoC,KAAxBkI,KAAKtE,MAAMG,SACvB9D,aAAciI,KAAKxC,mBAIjBtD,EACJ8F,KAAKtE,MAAM5D,YAAckI,KAAKtE,MAAMI,QAClC3G,EAAAC,EAAAC,cAACsK,EAAA,SAAD,CAAUC,SAAUzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,OAClB1K,EAAAC,EAAAC,cAAC2F,EAAD,CACE2F,OAAQX,KAAKxC,iBACb9D,KAAMsG,KAAKtE,MAAMI,QACjB8E,OAAQZ,KAAKtC,aACb7E,GAAImH,KAAKtE,MAAMG,YAGjB,KAIAgF,EAAgBb,KAAKP,2BAOzBa,EADEN,KAAKtE,MAAMC,QACDxG,EAAAC,EAAAC,cAACwK,EAAA,EAAD,MACHgB,EAEP1L,EAAAC,EAAAC,cAACsK,EAAA,SAAD,CAAUC,SAAUzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,OAClB1K,EAAAC,EAAAC,cAACoF,EAAD,CAASsB,QAAS8E,KAKpB1L,EAAAC,EAAAC,cAACyL,EAAD,CACEvG,SAAUyF,KAAKtE,MAAMnB,SACrBZ,MAAOqG,KAAKtK,MAAMiE,MAClBM,WAAY+F,KAAKlC,iBACjB3E,OAAQ6G,KAAK1B,iBACbpE,OAAQ8F,KAAKtE,MAAMG,WAOvB0E,EADEP,KAAKR,sBAELrK,EAAAC,EAAAC,cAACsK,EAAA,SAAD,CAAUC,SAAUzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,OAClB1K,EAAAC,EAAAC,cAACoF,EAAD,CACEsB,QAAQ,8BACRhF,SAAUiJ,KAAKT,qBAEfpK,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASmB,aAAW,cAAtC,gBAQJtB,EAAAC,EAAAC,cAACsK,EAAA,SAAD,CAAUC,SAAUzK,EAAAC,EAAAC,cAACwK,EAAA,EAAD,OAClB1K,EAAAC,EAAAC,cAAC6F,EAAD,CACEY,QAASkE,KAAKtE,MAAMI,QACpBgE,OAAQE,KAAKhB,aACb7F,OAAQ6G,KAAKlB,sBAKrB,IAAMiC,EAAiBf,KAAKtE,MAAMK,QAChC5G,EAAAC,EAAAC,cAAA,WAASC,UAAU,WAAW0K,KAAKtE,MAAMK,SACvC,KACJ,OACE5G,EAAAC,EAAAC,cAAA,QAAM2L,YAAU,OACd7L,EAAAC,EAAAC,cAAC4L,EAAD,MACCR,EACAvG,EACA6G,EACsB,UAAtBf,KAAKtE,MAAME,OAAqB0E,EAAY,KACtB,SAAtBN,KAAKtE,MAAME,OAAoB4E,EAAW,KACpB,YAAtBR,KAAKtE,MAAME,OAAuB2E,EAAc,KAChDP,KAAKtE,MAAMO,UAAY+D,KAAK/D,UAAY,KAClB,YAAtB+D,KAAKtE,MAAME,OAAuBoE,KAAKN,QAAU,aA1WpChF,IAAMwG,WAsXbC,sBAPS,SAACzF,GAAD,MAAsB,CAC5C/B,MAAO+B,EAAM/B,MACbmC,QAASJ,EAAMI,QACfsF,KAAM1F,EAAM0F,KACZvE,SAAUnB,EAAM2F,cAKhB,CAAEnF,UC5aG,SAAmBC,GACxB,IAAMmF,EAAUC,IACblJ,KAAK,IAAK,CACT8D,UAEDrB,KAAK,SAAA+C,GAAQ,OAAIA,IACjB2D,MAAM,SAAAC,GAAK,OAAIA,IAElB,MAAO,CACLC,KAAMC,IACNpF,QAAS+E,IDkaEhF,SC9ZR,SAAkB3C,GACvB,MAAO,CACL+H,KAAME,IACNrF,QAAS5C,ID2ZY8E,WCvZlB,SAAoBtC,GACzB,IAAMmF,EAAUC,IACblJ,KAAK,IAAK,CACT8D,UAEDrB,KAAK,SAAA+C,GAAQ,OAAIA,IACjB2D,MAAM,SAAAC,GAAK,OAAIA,IAElB,MAAO,CACLC,KAAMG,IACNtF,QAAS+E,ID6YwBrH,WCzY9B,SAAoB6H,GACzB,IAAMR,EAAUC,IACbQ,IADa,SAAA3J,OACA0J,IACbhH,KAAK,SAAA+C,GAAQ,OAAIA,IACjB2D,MAAM,SAAAC,GAAK,OAAIA,IAClB,MAAO,CACLC,KAAMM,IACNzF,QAAS+E,IDkYoC7E,YE9a1C,SAAqBN,GAC1B,IAAMmF,EAAUC,IACblJ,KAAK,IAAK,CACT8D,UAEDrB,KAAK,SAAA+C,GAAQ,OAAIA,IACjB2D,MAAM,SAAAC,GAAK,OAAIA,IAClB,MAAO,CACLC,KAAMO,IACN1F,QAAS+E,IFqaiD1D,gBAF/CuD,CAGb1F,uBG1bFG,EAAAsG,QAAA,CAAkBvJ,KAAA,uBAAAwJ,QAAA,0BAAAhK,KAAA,uBAAAxC,MAAA,wBAAAyM,KAAA,uBAAAC,OAAA,yBAAAC,QAAA,0BAAAC,IAAA,sBAAAC,eAAA,iCAAAC,gBAAA,kCAAAC,UAAA,4BAAAC,UAAA,4BAAAC,OAAA,yBAAAC,UAAA,8DCDlB,IAAMC,EAAsC,CAC1CC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,GAAI,MACJC,GAAI,MACJC,GAAI,OAEAC,EAA0C,CAC9CZ,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,OAkBUzN,IAfE,SAACF,GAChB,IAAIkO,EAAa,IAAI3N,KAChBoJ,OAAOwE,KAAKnO,GAAOwH,SACtB0G,EAAa,IAAI3N,KAAKP,IAExB,IAAIoO,EAAa,GAAA1L,OAAMwL,EAAWG,WAAjB,KAAA3L,OAA+BwL,EAAWI,aAA1C,OAKjB,OAJIJ,EAAWG,WAAa,KAC1BD,EAAa,GAAA1L,OAAMwL,EAAWG,WAC5B,GADW,KAAA3L,OACLwL,EAAWI,aADN,QAGf,GAAA5L,OAAUuL,EAAWC,EAAWK,SAAW,GAA3C,KAAA7L,OAAiDwL,EAAWM,UAA5D,KAAA9L,OACE0K,EAAOc,EAAWO,WAAa,GADjC,QAAA/L,OAEO0L,qCCpCT,IAAAM,EAAAxJ,EAAA,GAAAyJ,EAAAzJ,EAAA0J,EAAAF,GAAAG,EAAA3J,EAAA,IAAA4J,EAAA5J,EAAA,IAAA6J,EAAA7J,EAAA0J,EAAAE,GA+CezL,IAzCE,SAACrD,GAUhB,IAAM4M,EACW,SAAf5M,EAAMU,KAAN,GAAAgC,OACO1C,EAAMuD,OADb,OAAAb,OACyB1C,EAAMsD,QAD/B,IAAAZ,OAEQ1C,EAAMsD,QAChB,OACEqL,EAAAjP,EAAAC,cAAA,WAASC,UAAWC,IAAM6M,KAAMpB,YAAU,wBACxCqD,EAAAjP,EAAAC,cAAA,OAAKC,UAAWC,IAAM+M,SAAUA,GAChC+B,EAAAjP,EAAAC,cAAA,OAAKC,UAAWC,IAAM+M,SACpB+B,EAAAjP,EAAAC,cAACkP,EAAA,EAAD,CACEpL,OAAQzD,EAAMyD,OACdN,GAAInD,EAAMmD,GACVzC,KAAK,OACLsO,OAAQhP,EAAM8C,KACdwI,YAAU,gCAETtL,EAAMwD,QAAQV,MAEjB6L,EAAAjP,EAAAC,cAACkP,EAAA,EAAD,CACEpL,OAAQzD,EAAMyD,OACdN,GAAInD,EAAMmD,GACVzC,KAAK,OACLsO,OAAQhP,EAAM8B,KACdwJ,YAAU,gCAETtL,EAAMwD,QAAQ1B,0CCxCzB,IAAA4M,EAAAxJ,EAAA,GAAAyJ,EAAAzJ,EAAA0J,EAAAF,GAAAO,EAAA/J,EAAA,IAAAgK,EAAAhK,EAAA0J,EAAAK,GA2BeE,IAvBI,SAACnP,GAOlB,IAAMgP,EAAShP,EAAMgP,OACnBL,EAAAjP,EAAAC,cAAA,QAAMC,UAAWC,IAAMuP,UAAWpP,EAAMoB,UAExCuN,EAAAjP,EAAAC,cAAA,QAAMC,UAAWC,IAAMwP,WAAYrP,EAAMoB,UAE3C,OACEuN,EAAAjP,EAAAC,cAAA,UACEC,UAAWC,IAAM8C,KACjB5B,aAAYf,EAAMU,KAClBM,QAAS,kBAAMhB,EAAMyD,OAAO,CAAEkF,MAAO3I,EAAMU,KAAMyC,GAAInD,EAAMmD,OAE1D6L,qCCtBP,IAAAN,EAAAxJ,EAAA,GAAAyJ,EAAAzJ,EAAA0J,EAAAF,GAAAY,EAAApK,EAAA,IAAA4J,EAAA5J,EAAA,IAAA6J,EAAA7J,EAAA0J,EAAAE,GA+BepL,IAzBI,SAAC1D,GAKlB,IAAM8D,EAAQ,IAAApB,OAAO1C,EAAM6D,YAAb,SACRgC,EAAS7F,EAAM6F,OACnB8I,EAAAjP,EAAAC,cAAA,OAAKC,UAAWC,IAAM+M,SACpB+B,EAAAjP,EAAAC,cAAA,QAAMC,UAAWC,IAAM0P,MAAvB,YACCrP,YAASF,EAAM6F,SAEhB,KAEJ,OACE8I,EAAAjP,EAAAC,cAAA,UAAQC,UAAWC,IAAM8M,QACvBgC,EAAAjP,EAAAC,cAAA,OAAKC,UAAWC,IAAM+M,SACpB+B,EAAAjP,EAAAC,cAAA,QAAMC,UAAWC,IAAM0P,MAAvB,YACCrP,YAASF,EAAM2D,YAEjBkC,EACD8I,EAAAjP,EAAAC,cAAA,OAAKC,UAAWC,IAAM+M,SAAU9I,yBCzBtCoC,EAAAsG,QAAA,CAAkB1M,OAAA,2CCAlBoG,EAAAsG,QAAA,CAAkBvM,MAAA,8CCAlBiG,EAAAsG,QAAA,CAAkB1M,OAAA,4CCAlBoG,EAAAsG,QAAA,CAAkB1L,MAAA,2BAAAD,cAAA,mCAAAF,YAAA,iCAAAuM,OAAA,4BAAAT,QAAA,6BAAAK,eAAA,oCAAAC,gBAAA,qCAAAC,UAAA,+BAAAC,UAAA,+BAAAE,UAAA,oDCAlBjH,EAAAsG,QAAA,CAAkBjK,KAAA,wBAAA0K,UAAA,6BAAAR,QAAA,2BAAAK,eAAA,kCAAAC,gBAAA,mCAAAC,UAAA,6BAAAE,OAAA,0BAAAC,UAAA,kDCAlBjH,EAAAsG,QAAA,CAAkB7J,KAAA,yBAAAqM,OAAA,2BAAAI,SAAA,6BAAAC,UAAA,mDCAlBnJ,EAAAsG,QAAA,CAAkBgD,OAAA,6BAAAC,MAAA,4BAAAC,QAAA,8BAAAC,QAAA,8BAAA3L,KAAA,2BAAAqC,QAAA","file":"static/js/3.cd397d95.chunk.js","sourcesContent":["import React from \"react\";\n\nimport style from \"../../styles/Title.module.scss\";\n\nconst Title = () => {\n  return <h1 className={style.header}>The Newsletter</h1>;\n};\n\nexport default Title;\n","import React from \"react\";\n\nimport dateTime from \"../modules/dateTime\";\n\nimport style from \"../styles/Timestamp.module.scss\";\n\nconst Timestamp = (props: { date: Date }) => {\n  return <h3 className={style.title}>{dateTime(props.date)}</h3>;\n};\n\nexport default Timestamp;\n","import React from \"react\";\n\nimport Title from \"./Title\";\nimport DateTime from '../Timestamp'\nimport style from \"../../styles/Header.module.scss\";\n\nconst Header = () => {\n  return (\n    <header className={style.header}>\n      <Title />\n      <DateTime date={new Date()} />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport style from \"../../styles/SmartButton.module.scss\";\n\nconst handleClick = (props: {\n  mode: string;\n  child: any;\n  func: (arg?: string) => void;\n}) => {\n  if (props.child === \"BACK\" || props.child === \"HOME\") {\n    props.func(\"posts\");\n  } else if (props.child === \"SOURCES\") {\n    props.func(\"sources\");\n  } else if (props.mode === \"profile\") {\n    props.func(\"profile\");\n  } else {\n    props.func();\n  }\n};\n\nconst Button = (props: {\n  children: any;\n  mode: string;\n  accent: boolean;\n  function: () => void;\n}) => {\n  let styleClass;\n  if (props.mode === \"refresh\") {\n    styleClass = style.smartRotate;\n  } else if (props.accent) {\n    styleClass = style.smartAccented;\n  } else {\n    styleClass = style.smart;\n  }\n  return (\n    <button\n      className={styleClass}\n      aria-label={props.mode}\n      onClick={() =>\n        handleClick({\n          mode: props.mode,\n          child: props.children,\n          func: props.function\n        })\n      }\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { FaSyncAlt, FaEye, FaEyeSlash, FaFilter, FaUser } from \"react-icons/fa\";\n\nimport SmartButton from \"./SmartButton\";\nimport style from \"../../styles/SmartMenu.module.scss\";\n\nconst buttonElement = (props: {\n  element: any;\n  mode: string;\n  accent: boolean;\n  function: (arg0?: string) => void;\n}) => {\n  return (\n    <SmartButton\n      accent={props.accent}\n      mode={props.mode}\n      function={props.function}\n    >\n      {props.element}\n    </SmartButton>\n  );\n};\n\nconst SmartMenu = (props: {\n  read: boolean;\n  toggleRead: () => void;\n  refresh: () => void;\n  moduleToggle: (arg0?: string) => void;\n  mode: string;\n  showFilter: boolean;\n  toggleFilter: () => void;\n}) => {\n  // homeButton\n  let homeButton = buttonElement({\n    element: props.mode === \"post\" ? \"BACK\" : \"HOME\",\n    mode: \"home\",\n    accent: false,\n    function: props.moduleToggle\n  });\n  // sourcesButton\n  let sourcesButton = buttonElement({\n    element: \"SOURCES\",\n    mode: \"sources\",\n    accent: false,\n    function: props.moduleToggle\n  });\n  // showReadButton;\n  let showReadButton =\n    props.mode === \"posts\"\n      ? buttonElement({\n          element: props.read ? <FaEye /> : <FaEyeSlash />,\n          mode: \"showRead\",\n          accent: props.read,\n          function: props.toggleRead\n        })\n      : null;\n\n  // refreshButton;\n  let refreshButton =\n    props.mode === \"posts\"\n      ? buttonElement({\n          element: <FaSyncAlt />,\n          mode: \"refresh\",\n          accent: false,\n          function: props.refresh\n        })\n      : null;\n  // filterButton;\n  let filterButton =\n    props.mode === \"posts\"\n      ? buttonElement({\n          element: <FaFilter />,\n          mode: \"filter\",\n          accent: props.showFilter,\n          function: props.toggleFilter\n        })\n      : null;\n\n  const profileButton = buttonElement({\n    element: <FaUser />,\n    mode: \"profile\",\n    accent: false,\n    function: props.moduleToggle\n  });\n\n  return (\n    <nav className={style.menu}>\n      {homeButton}\n      {sourcesButton}\n      {showReadButton}\n      {filterButton}\n      {refreshButton}\n      {profileButton}\n    </nav>\n  );\n  // toggleModule = event => {\n  //   this.props.moduleToggle(event.target.innerText);\n  // };\n  // toggleFilter = () => {\n  //   this.props.toggleFilter();\n  // };\n  // render = () => {\n\n  // let homeBack = \"HOME\";\n\n  // let filter = this.props.showFilter ? (\n  //   <Filter\n  //     list={this.props.sources}\n  //     filterClick={this.props.filterClick}\n  //     toggleFilter={() => this.toggleFilter()}\n  //   />\n  // ) : null;\n  // let filterStyle = this.props.filter ? style.on : style.off;\n  // let filterButton = (\n  //   <button>\n  //     <FaFilter className={filterStyle} onClick={() => this.toggleFilter()} />\n  //   </button>\n  // );\n  // let showHide = (\n  //   <button>\n  //     {this.props.read ? (\n  //       <FaEye onClick={this.props.readToggle} />\n  //     ) : (\n  //       <FaEyeSlash onClick={this.props.readToggle} />\n  //     )}\n  //   </button>\n  // );\n\n  // if (this.props.mode === \"show\") {\n  //   filterButton = null;\n  //   showHide = null;\n  //   homeBack = \"BACK\";\n  // } else if (this.props.mode === \"SOURCES\") {\n  //   showHide = null;\n  //   filterButton = null;\n  // }\n\n  // const homeBackButton = (\n  //   <button className={style.text} onClick={this.toggleModule}>\n  //     {homeBack}\n  //   </button>\n  // );\n  // return (\n  //   <section className={style.smartMenu}>\n  //     {homeBackButton}\n  //     <button className={style.text} onClick={this.toggleModule}>\n  //       SOURCES\n  //     </button>\n  //     <button className={style.text}>PROFILE</button>\n  //     <button>\n  //       <FaSyncAlt onClick={this.props.refresh} className={style.refresh} />\n  //     </button>\n  //     {showHide}\n  //     {filterButton}\n  //     {filter}\n  //   </section>\n  // );\n  // };\n};\nexport default SmartMenu;\n","import React from \"react\";\nimport { FaCheck, FaCheckDouble } from \"react-icons/fa\";\nimport { TiStarFullOutline, TiStarOutline } from \"react-icons/ti\";\n\nimport Line from \"./PostLine\";\nimport Footer from \"./PostFooter\";\nimport { Post } from \"../../store/post/types\";\n\nimport style from '../../styles/PostCard.module.scss'\n\nconst PostCard = (props: {\n  post: Post;\n  update: (arg0: any) => void;\n  select: (arg0: any) => void;\n}) => {\n  const text = `${props.post.text.replace(/<(?:.|\\n)*?>/gm, \" \")}...`;\n\n  const starButton = props.post.star ? (\n    <TiStarFullOutline />\n  ) : (\n    <TiStarOutline />\n  );\n  const readButton = props.post.read ? <FaCheckDouble /> : <FaCheck />;\n  return (\n    <article className={style.card}>\n      <h3 className={style.title}\n        onClick={() => {\n          props.select({ id: props.post._id });\n        }}\n      >\n        {props.post.title}\n      </h3>\n      <Line\n        mode=\"card\"\n        source={props.post.source}\n        author={props.post.author}\n        buttons={{ star: starButton, read: readButton }}\n        read={props.post.read}\n        star={props.post.star}\n        update={props.update}\n        id={props.post._id}\n      />\n      <main className={style.text}\n        onClick={() => {\n          props.select({ id: props.post._id });\n        }}\n      >\n        {text}\n      </main>\n      <Footer\n        timestamp={props.post.published}\n        readingTime={props.post.readTime}\n      />\n    </article>\n  );\n};\n\nexport default PostCard;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\n\nimport {\n  loadPosts,\n  setPosts,\n  updatePost,\n  selectPost\n} from \"../../store/post/actions\";\n\nimport PostCard from \"./PostCard\";\nimport { Post } from \"../../store/post/types\";\nimport style from \"../../styles/PostCardList.module.scss\";\n\nconst postCardComponent = (props: {\n  post: Post;\n  update: (arg0: any) => void;\n  select: (arg0: any) => void;\n}) => {\n  return (\n    <PostCard\n      key={props.post._id}\n      post={props.post}\n      update={props.update}\n      select={props.select}\n    />\n  );\n};\n\nconst postCheck = (props: {\n  show: boolean;\n  filter: string;\n  pRead: boolean;\n  pSource: string;\n}) => {\n  if (props.filter) {\n    if (props.show) {\n      return props.pSource === props.filter;\n    } else {\n      return props.pRead === props.show && props.pSource === props.filter;\n    }\n  } else {\n    if (props.show) {\n      return true;\n    } else {\n      return props.pRead === props.show;\n    }\n  }\n};\n\nconst PostCardList = (props: {\n  showRead: boolean;\n  posts: any;\n  selectPost: (arg0: any) => void;\n  update: (arg0: any) => void;\n  filter: string;\n}) => {\n  return (\n    <div className={style.list}>\n      {props.posts.map((post: Post) => {\n        const postCall = postCardComponent({\n          post: post,\n          update: props.update,\n          select: props.selectPost\n        });\n        return postCheck({\n          show: props.showRead,\n          filter: props.filter,\n          pRead: post.read,\n          pSource: post.sourceId\n        })\n          ? postCall\n          : null;\n      })}\n    </div>\n  );\n};\n\nexport default PostCardList;\n\n// const mapStateToProps = (state: AppState) => ({\n//   // posts: state.posts\n//   // sources: state.sources,\n//   // user: state.user,\n//   // thisUser: state.currentUser\n// });\n\n// export default connect(\n//   mapStateToProps,\n//   { loadPosts, updatePost, selectPost }\n// )(PostCardList);\n","import React, { Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\n\nimport { Post } from \"../../store/post/types\";\nimport {\n  loadPosts,\n  setPosts,\n  updatePost,\n  selectPost\n} from \"../../store/post/actions\";\nimport { loadSources } from \"../../store/source/actions\";\nimport { apiRequest } from \"../../store/user/actions\";\n\nimport { NewQuery } from \"../../types\";\n\nimport Header from \"../../components/Header/Header\";\nimport SmartMenu from \"../../components/Navigation/SmartMenu\";\nimport Loading from \"../../components/Loading\";\nimport PostCardList from \"../../components/Post/PostCardList\";\nimport \"../../styles/_ui.scss\";\n// import '../../styles/\n\n// lazy loading\nconst Central = React.lazy(() => import(\"../../components/Central\"));\nconst Filter = React.lazy(() => import(\"../../components/Filter\"));\nconst PostShow = React.lazy(() => import(\"../../components/Post/PostShow\"));\nconst SourceCardList = React.lazy(() =>\n  import(\"../../components/Source/SourceCardList\")\n);\nconst Profile = React.lazy(() => import(\"../../components/Profile\"));\nconst SourceEdit = React.lazy(() =>\n  import(\"../../components/Source/SourceEdit\")\n);\n\ninterface props {\n  loadPosts: (arg0?: any) => any;\n  updatePost: (arg0?: any) => any;\n  selectPost: (arg0?: any) => any;\n  loadSources: (arg0?: any) => any;\n  apiRequest: (arg0?: any) => any;\n  thisUser: any;\n  setPosts: (arg0: any) => any;\n  posts: any[];\n  // signOff: () => void;\n}\n\ninterface Content {\n  refresher: any;\n}\nconst emptyPost: Post = {\n  _id: \"\",\n  source: \"\",\n  sourceId: \"\",\n  title: \"\",\n  url: \"\",\n  author: \"\",\n  published: new Date(),\n  parsed: new Date(),\n  text: \"\",\n  readTime: 0,\n  pages: 0,\n  read: false,\n  star: false\n};\n\nclass Content extends React.Component<props> {\n  state = {\n    loading: true,\n    module: \"posts\",\n    showRead: false,\n    showFilter: false,\n    filterId: \"\",\n    sources: [],\n    posts: [],\n    message: \"\",\n    showPost: emptyPost,\n    addSource: false\n  };\n\n  componentDidMount() {\n    this.fetchPostsSources();\n    this.refresher = setInterval(this.fetchPostsSources, 10000);\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  loadPosts = (query: NewQuery) => {\n    this.props.loadPosts(query).then((data: any) => {\n      this.props.setPosts(data.payload.data);\n      this.setState({\n        // posts: data.payload.data,\n        loading: false\n      });\n      // }\n    });\n  };\n  loadSources = (query: NewQuery) => {\n    this.props.loadSources(query).then((data: any) => {\n      this.setState({\n        sources: data.payload.data,\n        loading: false\n      });\n      // }\n    });\n  };\n\n  fetchPostsSources = () => {\n    // set queries\n    const postQuery = {\n      token: this.props.thisUser.token,\n      action: [\"post\", \"fetch\"]\n    };\n    const sourceQuery = {\n      token: this.props.thisUser.token,\n      action: [\"source\", \"fetch\"]\n    };\n    // run requests\n    this.loadPosts(postQuery);\n    this.loadSources(sourceQuery);\n  };\n\n  showModule = (module: string = \"posts\") => {\n    console.log(\"show module - \" + module);\n    this.setState({ module: module });\n  };\n  toggleShowRead = () => {\n    this.setState({ showRead: !this.state.showRead });\n    this.changeMessage(`Show read: ${!this.state.showRead}`);\n  };\n  toggleShowFilter = () => {\n    this.setState({ showFilter: !this.state.showFilter });\n  };\n\n  changeMessage = (message: string) => {\n    this.setState({ message: message });\n    setTimeout(() => this.setState({ message: \"\" }), 3000);\n  };\n  // update sources & posts\n  chooseFilter = (id: string) => {\n    this.toggleShowFilter();\n    if (id === \"clear\") {\n      this.setState({\n        filterId: \"\"\n      });\n    } else {\n      this.setState({ filterId: id });\n    }\n  };\n\n  handleRefreshClick = () => {\n    // set query object\n    const query = {\n      token: this.props.thisUser.token,\n      action: [\"post\", \"refresh\"]\n    };\n    // request redux action to query API\n    this.props.apiRequest(query).then((response: any) => {\n      const message = response.payload.data.message;\n      this.changeMessage(message);\n    });\n  };\n  selectPostToShow = (props: { id: string }) => {\n    // set query object\n    const query = {\n      token: this.props.thisUser.token,\n      action: [\"post\", \"show\"],\n      id: props.id\n    };\n    // request redux action to query API\n    this.props.apiRequest(query).then((res: any) => {\n      const response = res.payload.data;\n      if (response.authed) {\n        this.showModule(\"post\");\n        this.setState({\n          showPost: response.post\n        });\n      }\n    });\n  };\n\n  updateStatePosts = (props: { id: string; field: string }) => {\n    const newPosts = this.state.posts;\n    let oldPostState;\n    newPosts\n      .filter((post: Post) => post._id === props.id)\n      .forEach((post: Post) => {\n        if (props.field === \"read\") {\n          oldPostState = post.read;\n          post.read = !post.read;\n        } else {\n          oldPostState = post.star;\n          post.star = !post.star;\n        }\n      });\n    this.setState({ posts: newPosts });\n    return oldPostState;\n  };\n  updatePostAction = (props: { field: string; id: string }) => {\n    const oldState = this.updateStatePosts({\n      id: props.id,\n      field: props.field\n    });\n    let fields: { [index: string]: boolean } = {};\n    fields[`${props.field}`] = !oldState;\n\n    const query = {\n      token: this.props.thisUser.token,\n      action: [\"post\", \"update\"],\n      id: props.id,\n      fields\n    };\n\n    this.props.updatePost(query).then((response: any) => {\n      const message = response.payload.data.message;\n      this.changeMessage(message);\n    });\n  };\n  updateSourceInState = (props: { [index: string]: string }) => {\n    const newSources = this.state.sources;\n    // let oldSourceElement;\n    newSources\n      .filter((source: any) => source._id === props._id)\n      .forEach((source: any) => {\n        source.name = props.name;\n        source.url = props.url;\n        source.homepage = props.homepage;\n      });\n    this.setState({ source: newSources });\n  };\n\n  updateSourceAction = (props: { [index: string]: string }) => {\n    console.log(props);\n    const query = {\n      token: this.props.thisUser.token,\n      action: [\"source\", \"update\"],\n      fields: props\n    };\n\n    this.props.apiRequest(query).then((response: any) => {\n      console.log(response);\n      const message = response.payload.data.message;\n      this.changeMessage(message);\n      this.updateSourceInState(props);\n    });\n  };\n  // delete source/post\n  deleteAction = (props: { [index: string]: string }) => {\n    console.log(props);\n    // {\n    // id: '', mode:''\n    // }\n    // const query = {\n    //   token: this.props.currentUser.token,\n    //   action: [props.mode, \"delete\"],\n    //   id: props.id\n    // };\n\n    // this.props.apiRequest(query).then((response: any) => {\n    //   console.log(response);\n    //   const message = response.payload.data.message;\n    //   // this.setState({ message: message });\n    //   this.changeMessage(message);\n    //   this.updateSourceInState(props);\n    // });\n  };\n\n  createSource = (cSprops: any) => {\n    console.log(\"- create source:\");\n    console.log(cSprops);\n    // set query object\n    const query = {\n      token: this.props.thisUser.token,\n      action: [\"source\", \"create\"],\n      fields: cSprops\n    };\n    let newSource = cSprops;\n    newSource._id = \"012345\";\n    const newSourceToArray = [newSource];\n    const newState = [...this.state.sources, ...newSourceToArray];\n    // request redux action to query API\n    this.props.apiRequest(query).then((res: any) => {\n      const response = res.payload.data;\n      console.log(response);\n      this.changeMessage(response.message);\n      this.setState({\n        // message: response.message,\n        addSource: false,\n        sources: newState\n      });\n    });\n  };\n\n  toggleShowAddSource = () => {\n    this.setState({ addSource: !this.state.addSource });\n  };\n  checkIfSourcesEmpty = () => {\n    const check =\n      this.state.sources === [] || this.state.sources.length === 0\n        ? true\n        : false;\n    return check;\n  };\n  checkIfPostsSourcesEmpty = () => {\n    let message;\n    if (\n      this.checkIfSourcesEmpty() &&\n      (this.props.posts === [] || this.props.posts.length === 0)\n    ) {\n      message = \"There are no sources configured.\";\n    } else if (this.props.posts === [] || this.props.posts.length === 0) {\n      message = \"The are no posts for now.\";\n    }\n    return message;\n  };\n  // ui elements\n  profile = (\n    <Suspense fallback={<Loading />}>\n      <Profile />\n    </Suspense>\n  );\n  addSource = (\n    <Suspense fallback={<Loading />}>\n      <SourceEdit submit={this.createSource} close={this.toggleShowAddSource} />\n    </Suspense>\n  );\n  render() {\n    console.log(this.props);\n    // postToShow\n    const postShow = (\n      <Suspense fallback={<Loading />}>\n        <PostShow post={this.state.showPost} update={this.updatePostAction} />\n      </Suspense>\n    );\n    // smartmenu\n    const smartMenu = (\n      <SmartMenu\n        read={this.state.showRead}\n        toggleRead={this.toggleShowRead}\n        refresh={this.handleRefreshClick}\n        moduleToggle={this.showModule}\n        mode={this.state.module}\n        showFilter={this.state.filterId !== \"\"}\n        toggleFilter={this.toggleShowFilter}\n      />\n    );\n    // filter\n    const filter =\n      this.state.showFilter && this.state.sources ? (\n        <Suspense fallback={<Loading />}>\n          <Filter\n            toggle={this.toggleShowFilter}\n            list={this.state.sources}\n            choose={this.chooseFilter}\n            id={this.state.filterId}\n          />\n        </Suspense>\n      ) : null;\n\n    // list of posts\n    let postsList;\n    const messageToShow = this.checkIfPostsSourcesEmpty();\n    // console.log(messageToShow);\n    // if (this.state.message) {\n    //   console.log(\"smth wrong with state message\");\n    //   console.log(this.state.message)\n    // } else\n    if (this.state.loading) {\n      postsList = <Loading />;\n    } else if (messageToShow) {\n      postsList = (\n        <Suspense fallback={<Loading />}>\n          <Central message={messageToShow} />\n        </Suspense>\n      );\n    } else {\n      postsList = (\n        <PostCardList\n          showRead={this.state.showRead}\n          posts={this.props.posts}\n          selectPost={this.selectPostToShow}\n          update={this.updatePostAction}\n          filter={this.state.filterId}\n        />\n      );\n    }\n\n    let sourcesList;\n    if (this.checkIfSourcesEmpty()) {\n      sourcesList = (\n        <Suspense fallback={<Loading />}>\n          <Central\n            message=\"The are no sources for now.\"\n            function={this.toggleShowAddSource}\n          >\n            <button className=\"button\" aria-label=\"Add source\">\n              Add source\n            </button>\n          </Central>\n        </Suspense>\n      );\n    } else {\n      sourcesList = (\n        <Suspense fallback={<Loading />}>\n          <SourceCardList\n            sources={this.state.sources}\n            submit={this.createSource}\n            update={this.updateSourceAction}\n          />\n        </Suspense>\n      );\n    }\n    const messageDisplay = this.state.message ? (\n      <section className=\"message\">{this.state.message}</section>\n    ) : null;\n    return (\n      <main data-test=\"app\">\n        <Header />\n        {smartMenu}\n        {filter}\n        {messageDisplay}\n        {this.state.module === \"posts\" ? postsList : null}\n        {this.state.module === \"post\" ? postShow : null}\n        {this.state.module === \"sources\" ? sourcesList : null}\n        {this.state.addSource ? this.addSource : null}\n        {this.state.module === \"profile\" ? this.profile : null}\n      </main>\n    );\n  }\n}\nconst mapStateToProps = (state: AppState) => ({\n  posts: state.posts,\n  sources: state.sources,\n  user: state.user,\n  thisUser: state.currentUser\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadPosts, setPosts, updatePost, selectPost, loadSources, apiRequest }\n)(Content);\n","import {\n  // SystemState,\n  SET_POSTS,LOAD_POSTS,\n  Query,\n  PostId,\n  UPDATE_POST,\n  SELECT_POST\n} from \"./types\";\nimport { NewQuery } from \"../../types\";\n\nimport axios from \"axios\";\n\n// const apiUrl = `${process.env.REACT_APP_SERVER}/api`;\n\nexport function loadPosts(query: NewQuery) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: LOAD_POSTS,\n    payload: promise\n  };\n}\n\nexport function setPosts(posts:any) {\n  return {\n    type: SET_POSTS,\n    payload: posts\n  };\n}\n\nexport function updatePost(query: Query) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: UPDATE_POST,\n    payload: promise\n  };\n}\n\nexport function selectPost(postId: PostId) {\n  const promise = axios\n    .get(`/post/${postId}`)\n    .then(response => response)\n    .catch(error => error);\n  return {\n    type: SELECT_POST,\n    payload: promise\n  };\n}\n\n// export function updateSource(query) {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({ query })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"UPDATE_SOURCE\",\n//     payload: promise\n//   };\n// }\n// export function refreshPosts() {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({\n//       query: {\n//         action: [\"post\", \"refresh\"]\n//       }\n//     })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"REFRESH_POSTS\",\n//     payload: promise\n//   };\n// }\n// export function addSource(query) {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({ query })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"ADD_SOURCE\",\n//     payload: promise\n//   };\n// }\n// export function deleteSource(query) {\n//   if (query.action && query.id) {\n//     const promise = fetch(apiUrl, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify({ query })\n//     })\n//       .then(r => r)\n//       // r.json())\n//       .catch(e => {\n//         return e;\n//       });\n\n//     return {\n//       type: \"DELETE_SOURCE\",\n//       payload: promise\n//     };\n//   } else {\n//     return \"Missing action and/or id\";\n//   }\n// }\n\n// export function setSources() {\n//   const promise = fetch(`${apiUrl}/sources`).then(r => r.json());\n//   return {\n//     type: \"SET_SOURCES\",\n//     payload: promise\n//   };\n// }\n\n// export function selectPost(postId) {\n//   const promise = fetch(`${apiUrl}/post/${postId}`).then(r => r.json());\n//   return {\n//     type: \"SELECT_POST\",\n//     payload: promise\n//   };\n// }\n\n// export function sourceCreateModule(status) {\n//   return {\n//     type: \"SHOW_MODULE\",\n//     payload: status\n//   };\n// }\n","import {\n  SET_SOURCES\n  // Query,\n  // PostId,\n  // UPDATE_POST,\n  // SELECT_POST\n} from \"./types\";\nimport axios from \"axios\";\nimport { NewQuery } from \"../../types\";\n\n// const apiUrl = `${process.env.REACT_APP_SERVER}/api`;\n\nexport function loadSources(query: NewQuery) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n  return {\n    type: SET_SOURCES,\n    payload: promise\n  };\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PostCard_card__2J-H1\",\"scaleUp\":\"PostCard_scaleUp__3oKww\",\"text\":\"PostCard_text__1jLmP\",\"title\":\"PostCard_title__3Vi12\",\"line\":\"PostCard_line__1mgL2\",\"footer\":\"PostCard_footer__1aTwF\",\"wrapper\":\"PostCard_wrapper__2E9fT\",\"sub\":\"PostCard_sub__2hKdg\",\"slideInFromTop\":\"PostCard_slideInFromTop__2REAI\",\"slideInFromLeft\":\"PostCard_slideInFromLeft__FabEc\",\"growLarge\":\"PostCard_growLarge__g5rIF\",\"slideDown\":\"PostCard_slideDown__XTYyj\",\"rotate\":\"PostCard_rotate__2m0Yg\",\"disappear\":\"PostCard_disappear__37Is8\"};","const months: { [index: number]: string } = {\n  1: \"Jan\",\n  2: \"Feb\",\n  3: \"Mar\",\n  4: \"Apr\",\n  5: \"May\",\n  6: \"Jun\",\n  7: \"Jul\",\n  8: \"Aug\",\n  9: \"Sep\",\n  10: \"Oct\",\n  11: \"Nov\",\n  12: \"Dec\"\n};\nconst daysOfWeek: { [index: number]: string } = {\n  1: \"Sun\",\n  2: \"Mon\",\n  3: \"Tue\",\n  4: \"Wed\",\n  5: \"Thu\",\n  6: \"Fri\",\n  7: \"Sat\"\n};\n\nconst dateTime = (props: Date) => {\n  let dateFromDb = new Date();\n  if (!Object.keys(props).length) {\n    dateFromDb = new Date(props);\n  }\n  let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n  if (dateFromDb.getHours() > 12) {\n    timeToDisplay = `${dateFromDb.getHours() -\n      12}:${dateFromDb.getMinutes()} pm`;\n  }\n  return `${daysOfWeek[dateFromDb.getDay() + 1]} ${dateFromDb.getDate()} ${\n    months[dateFromDb.getMonth() + 1]\n  } at ${timeToDisplay}`;\n};\n\nexport default dateTime;\n","import React from \"react\";\n\nimport Button from \"./PostButton\";\n\nimport style from \"../../styles/PostCard.module.scss\";\n\nconst PostLine = (props: {\n  mode: string;\n  author: string;\n  source: string;\n  buttons: { star: any; read?: any; trash?: any };\n  update: (arg0: any) => void;\n  id: string;\n  read: boolean;\n  star: boolean;\n}) => {\n  const wrapper =\n    props.mode === \"show\"\n      ? `${props.author} @ ${props.source}`\n      : `@${props.source}`;\n  return (\n    <section className={style.line} data-test=\"component__post-line\">\n      <div className={style.wrapper}>{wrapper}</div>\n      <div className={style.wrapper}>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"star\"\n          status={props.star}\n          data-test=\"component__post-line--button\"\n        >\n          {props.buttons.star}\n        </Button>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"read\"\n          status={props.read}\n          data-test=\"component__post-line--button\"\n        >\n          {props.buttons.read}\n        </Button>\n      </div>\n    </section>\n  );\n};\n\nexport default PostLine;\n","import React from \"react\";\n\nimport style from \"../../styles/PostButton.module.scss\";\n\nconst PostButton = (props: {\n  update: (arg0: any) => void;\n  mode: string;\n  id: string;\n  children: any;\n  status: boolean;\n}) => {\n  const status = props.status ? (\n    <span className={style.onStatus}>{props.children}</span>\n  ) : (\n    <span className={style.offStatus}>{props.children}</span>\n  );\n  return (\n    <button\n      className={style.post}\n      aria-label={props.mode}\n      onClick={() => props.update({ field: props.mode, id: props.id })}\n    >\n      {status}\n    </button>\n  );\n};\n\nexport default PostButton;\n","import React from \"react\";\n\nimport dateTime from \"../../modules/dateTime\";\n\nimport style from \"../../styles/PostCard.module.scss\";\n\nconst PostFooter = (props: {\n  timestamp: Date;\n  parsed?: Date;\n  readingTime: number;\n}) => {\n  const readTime = `~${props.readingTime} mins`;\n  const parsed = props.parsed ? (\n    <div className={style.wrapper}>\n      <span className={style.span}>parsed: </span>\n      {dateTime(props.parsed)}\n    </div>\n  ) : null;\n\n  return (\n    <footer className={style.footer}>\n      <div className={style.wrapper}>\n        <span className={style.span}>posted: </span>\n        {dateTime(props.timestamp)}\n      </div>\n      {parsed}\n      <div className={style.wrapper}>{readTime}</div>\n    </footer>\n  );\n};\n\nexport default PostFooter;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Title_header__a8239\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Timestamp_title__1oVzj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__4gWOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smart\":\"SmartButton_smart__2LjGI\",\"smartAccented\":\"SmartButton_smartAccented__3QZCJ\",\"smartRotate\":\"SmartButton_smartRotate__2lr2t\",\"rotate\":\"SmartButton_rotate__2cqkO\",\"scaleUp\":\"SmartButton_scaleUp__26vHE\",\"slideInFromTop\":\"SmartButton_slideInFromTop__1MliQ\",\"slideInFromLeft\":\"SmartButton_slideInFromLeft__3Xj3w\",\"growLarge\":\"SmartButton_growLarge__3AZ2_\",\"slideDown\":\"SmartButton_slideDown__37h5C\",\"disappear\":\"SmartButton_disappear__3verO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"SmartMenu_menu__2dsRy\",\"slideDown\":\"SmartMenu_slideDown__2HD0v\",\"scaleUp\":\"SmartMenu_scaleUp__2ghSY\",\"slideInFromTop\":\"SmartMenu_slideInFromTop__1iIxf\",\"slideInFromLeft\":\"SmartMenu_slideInFromLeft__3WgAG\",\"growLarge\":\"SmartMenu_growLarge__3i7pH\",\"rotate\":\"SmartMenu_rotate__caE1e\",\"disappear\":\"SmartMenu_disappear__3UryS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"PostButton_post__3eHpg\",\"status\":\"PostButton_status__3B7IS\",\"onStatus\":\"PostButton_onStatus__3XZOD\",\"offStatus\":\"PostButton_offStatus__3nzNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PostCardList_button__1iLb_\",\"modal\":\"PostCardList_modal__2ji0D\",\"central\":\"PostCardList_central__2rVGP\",\"display\":\"PostCardList_display__3V18P\",\"list\":\"PostCardList_list__2tmb4\",\"message\":\"PostCardList_message__2tQPO\"};"],"sourceRoot":""}