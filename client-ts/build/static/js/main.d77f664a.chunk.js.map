{"version":3,"sources":["components/Loading.tsx","store/app/types.ts","store/source/types.ts","store/user/actions.ts","store/user/types.ts","styles/Loading.module.scss","containers/App/App.tsx","store/post/reducers.ts","store/source/reducers.ts","store/user/reducers.ts","store/index.ts","store/app/reducers.ts","serviceWorker.ts","index.tsx","store/post/types.ts"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styles_Loading_module_scss__WEBPACK_IMPORTED_MODULE_1__","_styles_Loading_module_scss__WEBPACK_IMPORTED_MODULE_1___default","Loading","a","createElement","className","style","loading","width","height","viewBox","fill","d","attributeName","type","values","calcMode","dur","repeatCount","__webpack_exports__","SHOW_MODULE","SET_MESSAGE","TOGGLE_SHOW_FILTER","LOAD_SOURCES","SET_SOURCES","SET_FILTER","currentUser","setAuthStatus","checkUser","apiRequest","_types__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_1___default","user","CURRENT_USER","payload","status","SET_AUTH_STATUS","query","promise","axios","post","then","response","catch","error","CHECK_USER","API_REQUEST","module","exports","scaleUp","slideInFromTop","slideInFromLeft","growLarge","slideDown","rotate","disappear","Home","React","lazy","e","bind","Content","Promise","all","connect","state","posts","sources","thisUser","authStatus","withCookies","props","_React$useState","useState","_React$useState2","Object","slicedToArray","_React$useState3","_React$useState4","counter","setCounter","_React$useState5","_React$useState6","setLoading","cookies","existingCookies","email","get","token","cProps","action","fields","res","data","authed","set","path","verifyCookies","react_default","react","fallback","emptyQuery","initialState","name","password","defaults","baseURL","concat","process","headers","common","rootReducer","combineReducers","loadPosts","arguments","length","undefined","LOAD_POSTS","objectSpread","SET_POSTS","message","showRead","TOGGLE_SHOW_READ","showPost","SELECT_POST","showFilter","filterSourceId","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","store","middlewares","reduxPromise","logger","middleWareEnhancer","applyMiddleware","apply","createStore","composeWithDevTools","configureStore","ReactDOM","render","es6","es","containers_App_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","UPDATE_POST","Date"],"mappings":"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","file":"static/js/main.d77f664a.chunk.js","sourcesContent":["import React from \"react\";\n\nimport style from \"../styles/Loading.module.scss\";\n\nconst Loading = () => {\n  return (\n    <div className={style.loading}>\n      <svg\n      width=\"80px\"\n      height=\"10px\"\n      viewBox=\"0 0 128 16\"\n      >\n      <path fill=\"#b1b1b1\" d=\"M6.4,4.8A3.2,3.2,0,1,1,3.2,8,3.2,3.2,0,0,1,6.4,4.8Zm12.8,0A3.2,3.2,0,1,1,16,8,3.2,3.2,0,0,1,19.2,4.8ZM32,4.8A3.2,3.2,0,1,1,28.8,8,3.2,3.2,0,0,1,32,4.8Zm12.8,0A3.2,3.2,0,1,1,41.6,8,3.2,3.2,0,0,1,44.8,4.8Zm12.8,0A3.2,3.2,0,1,1,54.4,8,3.2,3.2,0,0,1,57.6,4.8Zm12.8,0A3.2,3.2,0,1,1,67.2,8,3.2,3.2,0,0,1,70.4,4.8Zm12.8,0A3.2,3.2,0,1,1,80,8,3.2,3.2,0,0,1,83.2,4.8ZM96,4.8A3.2,3.2,0,1,1,92.8,8,3.2,3.2,0,0,1,96,4.8Zm12.8,0A3.2,3.2,0,1,1,105.6,8,3.2,3.2,0,0,1,108.8,4.8Zm12.8,0A3.2,3.2,0,1,1,118.4,8,3.2,3.2,0,0,1,121.6,4.8Z\"/>\n      <g>\n        <path fill=\"#444444\" d=\"M-42.7,3.84A4.16,4.16,0,0,1-38.54,8a4.16,4.16,0,0,1-4.16,4.16A4.16,4.16,0,0,1-46.86,8,4.16,4.16,0,0,1-42.7,3.84Zm12.8-.64A4.8,4.8,0,0,1-25.1,8a4.8,4.8,0,0,1-4.8,4.8A4.8,4.8,0,0,1-34.7,8,4.8,4.8,0,0,1-29.9,3.2Zm12.8-.64A5.44,5.44,0,0,1-11.66,8a5.44,5.44,0,0,1-5.44,5.44A5.44,5.44,0,0,1-22.54,8,5.44,5.44,0,0,1-17.1,2.56Z\"/>\n        <animateTransform attributeName=\"transform\" type=\"translate\" values=\"23 0;36 0;49 0;62 0;74.5 0;87.5 0;100 0;113 0;125.5 0;138.5 0;151.5 0;164.5 0;178 0\" calcMode=\"discrete\" dur=\"1000ms\" repeatCount=\"indefinite\"/>\n        </g>\n        </svg>\n    </div>\n  );\n};\n\nexport default Loading;\n","// Describing the different ACTION NAMES available\nexport const SHOW_MODULE = \"SHOW_MODULE\";\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const TOGGLE_SHOW_FILTER = \"TOGGLE_SHOW_FILTER\";\n\n\ninterface ShowModuleAction {\n  type: typeof SHOW_MODULE;\n  payload: string;\n}\ninterface SetMessageAction {\n  type: typeof SET_MESSAGE;\n  payload: string;\n}\ninterface ToggleShowFilterAction {\n  type: typeof TOGGLE_SHOW_FILTER;\n  payload: boolean;\n}\n\nexport type SystemActionTypes = ShowModuleAction | SetMessageAction | ToggleShowFilterAction\n","// Describing the shape of the system's slice of state\nimport { NewQuery } from \"../../types\";\n\nexport interface Source {\n  _id: string;\n  name: string;\n  url: string;\n  home: string;\n}\n\nexport interface SystemStateSource {\n  sources: Source[];\n}\n\n// Describing the different ACTION NAMES available\nexport const LOAD_SOURCES = \"LOAD_SOURCES\";\nexport const SET_SOURCES = \"SET_SOURCES\";\nexport const SET_FILTER = \"SET_FILTER\";\n\ninterface LoadSourcesAction {\n  type: typeof LOAD_SOURCES;\n  payload: NewQuery;\n}\ninterface SetSourcesAction {\n  type: typeof SET_SOURCES;\n  payload: any;\n}\n\ninterface SetFilterAction {\n  type: typeof SET_FILTER;\n  payload: string;\n}\n\nexport type SystemActionTypes =\n  | LoadSourcesAction|SetSourcesAction\n  | SetFilterAction;\n","import {\n  CHECK_USER,\n  UserQuery,\n  CURRENT_USER,\n  SET_AUTH_STATUS,\n  CurrentUser\n} from \"./types\";\nimport axios from \"axios\";\n\nexport function currentUser(user: CurrentUser) {\n  return {\n    type: CURRENT_USER,\n    payload: user\n  };\n}\nexport function setAuthStatus(status: boolean) {\n  return {\n    type: SET_AUTH_STATUS,\n    payload: status\n  };\n}\n\nexport function checkUser(query: UserQuery) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: CHECK_USER,\n    payload: promise\n  };\n}\nexport function apiRequest(query: UserQuery) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: CHECK_USER,\n    payload: promise\n  };\n}\n","// Describing the shape of the system's slice of state\nexport interface User {\n  name: string;\n  password: string;\n  email: string;\n}\nexport interface CurrentUser {\n  email: string;\n  token: string;\n}\n\nexport interface UserSystemState {\n  user: User;\n  currentUser: CurrentUser;\n}\n\nexport interface UserQuery {\n  action: [string, string];\n  id: string;\n  fields?: { [index: string]: string };\n}\n// Describing the different ACTION NAMES available\nexport const CHECK_USER = \"CHECK_USER\";\nexport const API_REQUEST = \"API_REQUEST\";\nexport const CURRENT_USER = \"CURRENT_USER\";\nexport const SET_AUTH_STATUS = \"SET_AUTH_STATUS\";\n\ninterface CheckUserAction {\n  type: typeof CHECK_USER;\n  payload: UserSystemState;\n}\ninterface ApiRequestAction {\n  type: typeof API_REQUEST;\n  payload: UserSystemState;\n}\ninterface CurrentUserAction {\n  type: typeof CURRENT_USER;\n  payload: UserSystemState;\n}\ninterface SetAuthStatusAction {\n  type: typeof SET_AUTH_STATUS;\n  payload: UserSystemState;\n}\n\nexport type SystemActionTypes =\n  | CheckUserAction\n  | ApiRequestAction\n  | CurrentUserAction\n  | SetAuthStatusAction;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__2MQcX\",\"scaleUp\":\"Loading_scaleUp__2JHlv\",\"slideInFromTop\":\"Loading_slideInFromTop__3nTZD\",\"slideInFromLeft\":\"Loading_slideInFromLeft__1sagQ\",\"growLarge\":\"Loading_growLarge__10CMO\",\"slideDown\":\"Loading_slideDown__1QwsB\",\"rotate\":\"Loading_rotate__3v7P5\",\"disappear\":\"Loading_disappear__2g683\"};","import React, { Suspense } from \"react\";\nimport { withCookies } from \"react-cookie\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../../store\";\nimport { checkUser, currentUser } from \"../../store/user/actions\";\n\nimport Loading from \"../../components/Loading\";\n\nimport \"../../styles/_ui.scss\";\n\n// lazy loading\nconst Home = React.lazy(() => import(\"../../components/Home\"));\nconst Content = React.lazy(() => import(\"../Content/Content\"));\n\nconst App = (props?: any) => {\n  const [authStatus, setAuthStatus] = React.useState(false);\n  const [counter, setCounter] = React.useState(0);\n  const [loading, setLoading] = React.useState(true);\n  const { cookies } = props;\n\n  /**\n   * Function to toggle authentication status\n   * @function toggleAuth\n   * @returns {void}\n   */\n  const toggleAuth = () => {\n    setAuthStatus(!authStatus);\n  };\n\n  /**\n   * Function to verify cookies\n   * @function verifyCookies\n   * @param {object} cProps - Email/token pair\n   * @returns {void}\n   */\n  const verifyCookies = (cProps: { email: string; token: string }) => {\n    // set query object\n    const query = {\n      token: cProps.token,\n      action: [\"user\", \"verifyCookies\"],\n      fields: { email: cProps.email }\n    };\n    // request redux action to query API\n    props.checkUser(query).then((res: any) => {\n      const response = res.payload.data;\n      if (response.authed) {\n        props.currentUser({\n          token: cProps.token,\n          email: cProps.email\n        });\n        toggleAuth();\n      } else {\n        cookies.set(\"email\", \"\", { path: \"/\" });\n        cookies.set(\"token\", \"\", { path: \"/\" });\n      }\n      setLoading(false);\n    });\n  };\n  // get local cookies\n  const existingCookies = {\n    email: cookies.get(\"email\"),\n    token: cookies.get(\"token\")\n  };\n\n  // if cookies exist > verify or show Home\n  if (cookies.get(\"email\") && cookies.get(\"token\") && counter === 0) {\n    verifyCookies(existingCookies);\n    setCounter(1);\n  } else if (counter === 0) {\n    setLoading(false);\n    setCounter(1);\n  }\n\n  /**\n   * Function to log off\n   * @function logOff\n   * @returns {void}\n   */\n  // const logOff = () => {\n  //   cookies.set(\"email\", \"\", {\n  //     path: \"/\"\n  //   });\n  //   cookies.set(\"token\", \"\", {\n  //     path: \"/\"\n  //   });\n  //   setAuthStatus(false);\n  // };\n\n  if (loading) {\n    // on load\n    return <Loading />;\n  } else if (props.authStatus) {\n    return (\n      <Suspense fallback={<Loading />}>\n        <Content />\n      </Suspense>\n    );\n  } else {\n    // if not authenticated\n    return (\n      <Suspense fallback={<Loading />}>\n        <Home />\n      </Suspense>\n    );\n  }\n};\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    posts: state.posts,\n    sources: state.sources,\n    user: state.user,\n    thisUser: state.currentUser,\n    authStatus: state.authStatus\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { checkUser, currentUser }\n)(withCookies(App));\n","import {\n  SET_POSTS,\n  LOAD_POSTS,\n  UPDATE_POST,\n  SELECT_POST, TOGGLE_SHOW_READ,\n  Query,\n  NewQuery,\n  SystemActionTypes\n} from \"./types\";\n\nconst emptyQuery: NewQuery = {\n  token: \"\",\n  action: [\"\", \"\"]\n};\nexport function loadPosts(\n  state = emptyQuery,\n  action: SystemActionTypes\n): NewQuery {\n  switch (action.type) {\n    case LOAD_POSTS: {\n      return {\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\nexport function setPosts(state = [], action: SystemActionTypes) {\n  switch (action.type) {\n    case SET_POSTS: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\nexport function toggleShowRead(state = false, action: SystemActionTypes) {\n  switch (action.type) {\n    case TOGGLE_SHOW_READ: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\n\nconst emptyState: Query = {\n  action: [\"\", \"\"],\n  id: \"\",\n  fields: { \"\": \"\" }\n};\n\nexport function updatePost(\n  state = emptyState,\n  action: SystemActionTypes\n): Query {\n  switch (action.type) {\n    case UPDATE_POST: {\n      return {\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport function selectPost(\n  state = {},\n  action: SystemActionTypes\n) {\n  switch (action.type) {\n    case SELECT_POST: {\n      return {\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}","import {\n  LOAD_SOURCES,\n  SET_SOURCES,\n  SET_FILTER,\n  SystemActionTypes\n} from \"./types\";\nimport { NewQuery } from \"../../types\";\n\nconst emptyQuery: NewQuery = {\n  token: \"\",\n  action: [\"\", \"\"]\n};\n\nexport function loadSources(\n  state = emptyQuery,\n  action: SystemActionTypes\n): NewQuery {\n  switch (action.type) {\n    case LOAD_SOURCES: {\n      return {\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport function setSources(state = [], action: SystemActionTypes) {\n  switch (action.type) {\n    case SET_SOURCES: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\n\nexport function setFilter(state = \"\", action: { type: any; payload: string }) {\n  switch (action.type) {\n    case SET_FILTER: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\n","import {\n  CHECK_USER,\n  API_REQUEST,\n  UserSystemState,\n  CURRENT_USER,\n  SET_AUTH_STATUS,\n  SystemActionTypes\n} from \"./types\";\n\nconst initialState: UserSystemState = {\n  user: { name: \"\", password: \"\", email: \"\" },\n  currentUser: { email: \"\", token: \"\" }\n};\nexport function setAuthStatus(\n  state = initialState,\n  action: SystemActionTypes\n): UserSystemState {\n  switch (action.type) {\n    case SET_AUTH_STATUS: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\nexport function currentUser(\n  state = initialState,\n  action: SystemActionTypes\n): UserSystemState {\n  switch (action.type) {\n    case CURRENT_USER: {\n      return {\n        ...state,\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport function checkUser(\n  state = initialState,\n  action: SystemActionTypes\n): UserSystemState {\n  switch (action.type) {\n    case CHECK_USER: {\n      return {\n        // ...state,\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\nexport function apiRequest(\n  state = initialState,\n  action: SystemActionTypes\n): UserSystemState {\n  switch (action.type) {\n    case API_REQUEST: {\n      return {\n        ...action.payload\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport axios from \"axios\";\n\nimport { logger } from \"redux-logger\";\nimport reduxPromise from \"redux-promise\";\n\n// reducers\nimport { showModule, setMessage, toggleShowFilter } from \"./app/reducers\";\nimport { loadPosts, setPosts, toggleShowRead, selectPost } from \"./post/reducers\";\nimport { loadSources, setFilter } from \"./source/reducers\";\nimport { checkUser, currentUser, setAuthStatus } from \"./user/reducers\";\n// setup axios\naxios.defaults.baseURL = `${process.env.REACT_APP_SERVER}/api`;\naxios.defaults.headers.common[\"Authorization\"] = process.env.REACT_APP_TOKEN;\n\nconst rootReducer = combineReducers({\n  loadPosts: loadPosts,\n  posts: setPosts,\n  sources: loadSources,\n  user: checkUser,\n  currentUser: currentUser,\n  authStatus: setAuthStatus,\n  module: showModule,\n  message: setMessage,\n  showRead: toggleShowRead,\n  showPost: selectPost,\n  showFilter: toggleShowFilter,\n  filterSourceId: setFilter\n});\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default function configureStore() {\n  const middlewares = [reduxPromise, logger];\n  const middleWareEnhancer = applyMiddleware(...middlewares);\n\n  interface state { }\n\n  const initialState: state = {\n    posts: [],\n    sources: [],\n    currentUser: {},\n    authStatus: false,\n    showRead: false,\n    module: 'posts',\n    message: '',\n    showPost: {},\n    showFilter: false,\n    filterSourceId: '',\n  };\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(middleWareEnhancer)\n  );\n\n  return store;\n}\n","import { SHOW_MODULE, SET_MESSAGE, TOGGLE_SHOW_FILTER,SystemActionTypes } from \"./types\";\n\n\nexport function showModule(\n  state = '',\n  action: SystemActionTypes\n) {\n  switch (action.type) {\n    case SHOW_MODULE: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\nexport function setMessage(\n  state = '',\n  action: SystemActionTypes\n) {\n  switch (action.type) {\n    case SET_MESSAGE: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}\nexport function toggleShowFilter(\n  state = false,\n  action: SystemActionTypes\n) {\n  switch (action.type) {\n    case TOGGLE_SHOW_FILTER: {\n      return action.payload;\n    }\n    default:\n      return state;\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import WebFont from \"webfontloader\";\nimport { Provider } from \"react-redux\";\nimport { CookiesProvider } from \"react-cookie\";\n\n// load components\nimport App from \"./containers/App/App\";\nimport \"./index.scss\";\nimport configureStore from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <CookiesProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </CookiesProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// Describing the shape of the system's slice of state\nexport interface Post {\n  _id: string;\n  source: string;\n  sourceId: string;\n  title: string;\n  url: string;\n  author: string;\n  published: Date;\n  parsed: Date;\n  text: string;\n  readTime: number;\n  pages: number;\n  read: boolean;\n  star: boolean;\n}\n\nexport const emptyPost: Post = {\n  _id: \"\",\n  source: \"\",\n  sourceId: \"\",\n  title: \"\",\n  url: \"\",\n  author: \"\",\n  published: new Date(),\n  parsed: new Date(),\n  text: \"\",\n  readTime: 0,\n  pages: 0,\n  read: false,\n  star: false\n};\n\n\nexport interface SystemState {\n  posts: Post[];\n  token: \"\";\n  action: [];\n}\n\nexport interface Query {\n  action: [string, string];\n  id: string;\n  fields?: { [index: string]: string };\n}\nexport interface NewQuery {\n  token: string;\n  action: [string, string];\n  id?: string;\n  fields?: { [index: string]: string };\n}\n\nexport interface PostId {\n  id: string;\n}\n// Describing the different ACTION NAMES available\nexport const LOAD_POSTS = \"LOAD_POSTS\";\nexport const SET_POSTS = \"SET_POSTS\";\nexport const UPDATE_POST = \"UPDATE_POST\";\nexport const SELECT_POST = \"SELECT_POST\";\n\nexport const TOGGLE_SHOW_READ = \"TOGGLE_SHOW_READ\";\n\ninterface LoadPostsAction {\n  type: typeof LOAD_POSTS;\n  payload: NewQuery;\n}\ninterface SetPostsAction {\n  type: typeof SET_POSTS;\n  payload: any;\n}\ninterface UpdatePostAction {\n  type: typeof UPDATE_POST;\n  payload: Query;\n}\n\ninterface SelectPostAction {\n  type: typeof SELECT_POST;\n  payload: PostId;\n}\n\ninterface ToggleShowReadAction {\n  type: typeof TOGGLE_SHOW_READ;\n  payload: boolean;\n}\n\nexport type SystemActionTypes =\n  | LoadPostsAction\n  | SetPostsAction\n  | UpdatePostAction\n  | SelectPostAction\n  | ToggleShowReadAction;\n"],"sourceRoot":""}