{"version":3,"sources":["styles/_uiElements.tsx","styles/_animations.tsx","styles/PostCard.tsx","modules/dateTime.tsx","components/PostElements/PostLine.tsx","components/PostElements/PostFooter.tsx","styles/PostButton.tsx","components/PostElements/PostButton.tsx","styles/Title.tsx","components/Header/Title.tsx","styles/DateTime.tsx","components/DateTime.tsx","styles/Header.tsx","components/Header/Header.tsx","styles/SmartButton.tsx","components/SmartButton.tsx","styles/SmartMenu.tsx","components/SmartMenu.tsx","components/PostCard.tsx","components/PostCardList.tsx","containers/Content/Content.tsx","store/post/actions.tsx","store/source/actions.tsx"],"names":["Button","styled","button","_templateObject","borderBottomArs","arsenic","lightGrey","baseFont","boxShadow","boxTransition","boxShadowHover","borderBottomLG","scaleUp","keyframes","slideDown","_templateObject2","_templateObject3","_templateObject4","_templateObject5","Card","article","darkMediumGrey","Title","h3","Text","main","Line","section","statusFont","Footer","footer","Wrapper","div","_templateObject6","props","margin","Sub","span","_templateObject7","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","dateTime","dateFromDb","Date","Object","keys","length","timeToDisplay","concat","getHours","getMinutes","getDay","getDate","getMonth","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_PostButton__WEBPACK_IMPORTED_MODULE_1__","_styles_PostCard__WEBPACK_IMPORTED_MODULE_2__","PostLine","wrapper","mode","author","source","a","createElement","update","id","status","star","buttons","read","_modules_dateTime__WEBPACK_IMPORTED_MODULE_1__","PostFooter","readTime","readingTime","parsed","timestamp","Off","On","PostButton","react_default","children","onClick","field","h1","styles_Title","DateTimeTitle","h5","DateTime_templateObject","dimGrey","DateTime","date","Header","header","Header_templateObject","styles_Header","Header_Title","components_DateTime","SmartButton","SmartButton_templateObject","accent","styles_SmartButton","child","func","handleClick","function","SmartMenu","nav","SmartMenu_templateObject","buttonElement","components_SmartButton","element","homeButton","moduleToggle","sourcesButton","showReadButton","index_esm","toggleRead","refreshButton","refresh","filterButton","showFilter","toggleFilter","profileButton","styles_SmartMenu","PostCard","text","post","replace","starButton","ti_index_esm","readButton","styles_PostCard","select","_id","title","published","PostCardList","styles_PostCardList","posts","map","postCall","components_PostCard","key","postCardComponent","selectPost","filter","show","pSource","pRead","postCheck","showRead","sourceId","Central","React","lazy","e","then","bind","Filter","PostShow","SourceCardList","Profile","SourceEdit","emptyPost","url","pages","Content","state","loading","module","filterId","sources","message","showPost","addSource","loadPosts","query","_this","data","setState","payload","loadSources","fetchPostsSources","postQuery","token","currentUser","action","sourceQuery","showModule","arguments","undefined","console","log","toggleShowRead","toggleShowFilter","chooseFilter","handleRefreshClick","apiRequest","res","selectPostToShow","response","authed","updateStatePosts","oldPostState","newPosts","forEach","updatePostAction","oldState","fields","updatePost","statusText","updateSourceInState","newSources","name","homepage","updateSourceAction","createSource","cSprops","newSource","newSourceToArray","newState","toConsumableArray","toggleShowAddSource","checkIfSourcesEmpty","checkIfPostsSourcesEmpty","profile","react","fallback","Loading","signOff","submit","close","this","refresher","setInterval","window","scrollTo","clearInterval","postsList","sourcesList","postShow","smartMenu","components_SmartMenu","toggle","list","choose","messageToShow","components_PostCardList","_uiElements","styles_Content","data-test","components_Header_Header","Component","connect","user","promise","axios","catch","error","type","SET_POSTS","UPDATE_POST","postId","get","SELECT_POST","SET_SOURCES"],"mappings":"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","file":"static/js/4.fdf1cf29.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nimport {\n  arsenic,\n  lightGrey,\n  baseFont,\n  boxTransition,\n  boxShadow,\n  boxShadowHover,\n  borderBottomArs,\n  borderBottomLG\n} from \"./_definitions\";\n\nconst Button = styled.button`\n  font-weight: 300;\n  background: none;\n  border: none;\n  border-bottom: ${borderBottomArs};\n  background-color: ${arsenic};\n  color: ${lightGrey};\n  font-family: ${baseFont};\n  border-radius: 2px;\n  margin: 0.2rem auto;\n  padding: 10px;\n  font-size: 1rem;\n  letter-spacing: 1px;\n  outline: none;\n  box-shadow: ${boxShadow};\n  transition: ${boxTransition};\n  user-select: none;\n  cursor: pointer;\n  &:hover {\n    box-shadow: ${boxShadowHover};\n    border-bottom: ${borderBottomLG};\n  }\n  &:active {\n    transform: scale(0.95);\n    box-shadow: ${boxShadow};\n    border-bottom: ${borderBottomLG};\n  }\n`;\n\nexport { Button };\n","import { keyframes } from \"styled-components\";\n\nconst scaleUp = keyframes`\n0% {transform:scale(0)} 100%{transform:scale(1)}\n`;\n\nconst slideInFromTop = keyframes`\n    0% {\n      transform: translateY(-100%);\n    }\n    100% {\n      transform: translateX(0);\n    }`;\n\nconst slideInFromLeft = keyframes`\n    0% {\n      transform: translateX(-100%);\n    }\n    100% {\n      transform: translateY(0);\n    }\n  `;\nconst growLarge = keyframes`\n    0% {\n      transform: scale(0);\n    }\n    100% {\n      transform: scale(1);\n    }\n    `;\nconst slideDown = keyframes`\n    0% {\n            transform: translateY(-30%);\n            filter:opacity(0)\n\n    }\n    100% {\n           transform: translateY(0);\n\n    }\n    `;\n\nexport { scaleUp, slideInFromTop, slideInFromLeft, growLarge, slideDown };\n","import styled from \"styled-components\";\n\nimport { darkMediumGrey, statusFont } from \"./_definitions\";\nimport { scaleUp } from \"./_animations\";\n\ninterface props {\n  margin?: string;\n}\n\nconst Card = styled.article`\n  animation: 0.3s ease-out 0s 1 ${scaleUp};\n\n  @media (min-width: 499px) {\n    .text {\n      max-height: 50rem;\n    }\n  }\n\n  margin: 0 auto;\n  margin-bottom: 1rem;\n  padding-bottom: 1rem;\n\n  border-bottom: 1px solid ${darkMediumGrey};\n  @media (max-width: 699px) {\n    width: 100%;\n  }\n\n  @media (min-width: 700px) and (max-width: 949px) {\n    width: 45%;\n  }\n\n  @media (min-width: 950px) and (max-width: 1199px) {\n    width: 30%;\n  }\n\n  @media (min-width: 1200px) and (max-width: 1599px) {\n    width: 23%;\n  }\n\n  @media (min-width: 1599px) and (max-width: 4000px) {\n    width: 18%;\n  }\n`;\nconst Title = styled.h3`\n  cursor: pointer;\n  font-weight: 500;\n  margin: 0;\n  line-height: 1.6rem;\n  font-size: 1.3rem;\n  @media (max-width: 499px) {\n    font-size: 1.5rem;\n    line-height: 1.8rem;\n  }\n`;\n\nconst Text = styled.main`\n  font-size: 1.1rem;\n  padding: 0 0 0.3rem 0;\n  cursor: pointer;\n  margin-bottom: 5px;\n  line-height: 1.4rem;\n\n  @media (max-width: 499px) {\n    font-size: 1.3rem;\n  }\n`;\nconst Line = styled.section`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-content: center;\n  font-weight: 300;\n  font-family: ${statusFont};\n  letter-spacing: 0.03rem;\n  font-size: 0.8rem;\n  padding-top: 0.6rem;\n`;\nconst Footer = styled.footer`\n  display: flex;\n  font-family: ${statusFont};\n  justify-content: space-between;\n  font-size: 80%;\n  font-weight: 300;\n  padding: 0 0.3rem;\n`;\n\nconst Wrapper = styled.div<props>`\n  display: flex;\n  justify-content: space-between;\n  margin-top: ${props => props.margin};\n`;\n\nconst Sub = styled.span`\n  @media (max-width: 499px) {\n    display: none;\n  }\n  @media (min-width: 500px) {\n    /* span {} */\n  }\n`;\n\nexport { Card, Title, Line, Wrapper, Text, Footer, Sub };\n","const months: { [index: number]: string } = {\n  1: \"Jan\",\n  2: \"Feb\",\n  3: \"Mar\",\n  4: \"Apr\",\n  5: \"May\",\n  6: \"Jun\",\n  7: \"Jul\",\n  8: \"Aug\",\n  9: \"Sep\",\n  10: \"Oct\",\n  11: \"Nov\",\n  12: \"Dec\"\n};\nconst daysOfWeek: { [index: number]: string } = {\n  1: \"Sun\",\n  2: \"Mon\",\n  3: \"Tue\",\n  4: \"Wed\",\n  5: \"Thu\",\n  6: \"Fri\",\n  7: \"Sat\"\n};\n\nconst dateTime = (props: Date) => {\n  let dateFromDb = new Date();\n  if (!Object.keys(props).length) {\n    dateFromDb = new Date(props);\n  }\n  let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n  if (dateFromDb.getHours() > 12) {\n    timeToDisplay = `${dateFromDb.getHours() -\n      12}:${dateFromDb.getMinutes()} pm`;\n  }\n  return `${daysOfWeek[dateFromDb.getDay() + 1]} ${dateFromDb.getDate()} ${\n    months[dateFromDb.getMonth() + 1]\n  } at ${timeToDisplay}`;\n};\n\nexport default dateTime;\n","import React from \"react\";\n\nimport Button from \"./PostButton\";\nimport { Line, Wrapper } from \"../../styles/PostCard\";\n\nconst PostLine = (props: {\n  mode: string;\n  author: string;\n  source: string;\n  buttons: { star: any; read?: any; trash?: any };\n  update: (arg0: any) => void;\n  id: string;\n  read: boolean;\n  star: boolean;\n}) => {\n  const wrapper =\n    props.mode === \"show\"\n      ? `${props.author} @ ${props.source}`\n      : `@${props.source}`;\n  return (\n    <Line>\n      <Wrapper>{wrapper}</Wrapper>\n      <Wrapper>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"star\"\n          status={props.star}\n        >\n          {props.buttons.star}\n        </Button>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"read\"\n          status={props.read}\n        >\n          {props.buttons.read}\n        </Button>\n      </Wrapper>\n    </Line>\n  );\n};\n\nexport default PostLine;\n","import React from \"react\";\n\nimport dateTime from \"../../modules/dateTime\";\n\nimport { Footer, Wrapper,Sub } from \"../../styles/PostCard\";\n\nconst PostFooter = (props: {\n  timestamp: Date;\n  parsed?: Date;\n  readingTime: number;\n}) => {\n  const readTime = `~${props.readingTime} mins`;\n  const parsed = props.parsed ? (\n    <Wrapper>\n      <Sub>parsed: </Sub>\n      {dateTime(props.parsed)}\n    </Wrapper>\n  ) : null;\n\n  return (\n    <Footer>\n      <Wrapper>\n        <Sub>posted: </Sub>{dateTime(props.timestamp)}\n      </Wrapper>\n      {parsed}\n      <Wrapper>{readTime}</Wrapper>\n    </Footer>\n  );\n};\n\nexport default PostFooter;\n","import styled from \"styled-components\";\nimport {\n  arsenic,\n  // light,\n  // lightGrey,\n  // silverSand,\n  // dimGrey,\n  darkMediumGrey\n  // accent,\n  // accentAlt,\n  // arsenicTrans,\n  // arsenicLightTrans,\n  // arsenicSemiTrans,\n  // baseFont,\n  // statusFont\n} from \"./_definitions\";\n\nconst Button = styled.button`\n  cursor: pointer;\n  outline: none;\n  font-size: 1.2rem;\n  margin: 0;\n  transition: 0.3s;\n\n  @media (max-width: 599px) {\n    font-size: 1.2rem;\n  }\n`;\nconst Off = styled.span`\n  transition: 0.3s;\n\n  color: ${darkMediumGrey};\n  &:hover {\n    color: ${arsenic};\n  }\n`;\nconst On = styled.span`\n  transition: 0.3s;\n\n  color: ${arsenic};\n  &:hover {\n    color: ${darkMediumGrey};\n  }\n`;\n\n// .delete {\n//   @extend .button;\n//   font-size: 1rem;\n// }\n\nexport { Button, On, Off };\n","import React from \"react\";\n\nimport { Button, On, Off } from \"../../styles/PostButton\";\n\nconst PostButton = (props: {\n  update: (arg0: any) => void;\n  mode: string;\n  id: string;\n  children: any;\n  status: boolean;\n}) => {\n  const status = props.status ? <On>{props.children}</On> : <Off>{props.children}</Off>;\n  return (\n    <Button onClick={() => props.update({ field: props.mode, id: props.id })}>\n      {status}\n    </Button>\n  );\n};\n\nexport default PostButton;\n","import styled from \"styled-components\";\n\nimport { arsenic, baseFont } from \"./_definitions\";\n\nconst Title = styled.h1`\n  font-family: ${baseFont};\n  color: ${arsenic};\n\n  @media (max-width: 302px) {\n    font-size: 1.5rem;\n  }\n\n  @media (min-width: 303px) and (max-width: 340px) {\n    font-size: 2rem;\n  }\n\n  @media (min-width: 341px) {\n    font-size: 2.5rem;\n  }\n  font-weight: 700;\n  margin: 0;\n  height: 3rem;\n`;\n\nexport default Title;\n","import React from \"react\";\n\nimport Style from \"../../styles/Title\";\n\nconst Title = () => {\n  return <Style>The Newsletter</Style>;\n};\n\nexport default Title;\n","import styled from \"styled-components\";\n\nimport { dimGrey } from \"./_definitions\";\n\nconst DateTimeTitle = styled.h5`\n  color: ${dimGrey};\n  font-size: 100%;\n  font-weight: normal;\n`;\n\nexport { DateTimeTitle };\n","import React from \"react\";\n\nimport dateTime from \"../modules/dateTime\";\n\nimport { DateTimeTitle } from \"../styles/DateTime\";\n\nconst DateTime = (props: { date: Date }) => {\n  return <DateTimeTitle>{dateTime(props.date)}</DateTimeTitle>;\n};\n\nexport default DateTime;\n","import styled from \"styled-components\";\n\nimport { darkMediumGrey } from \"./_definitions\";\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  flex-wrap: wrap;\n  padding: 0;\n\n  margin: -10px 20px 20px 20px;\n  border-bottom: 1px solid ${darkMediumGrey};\n  cursor: default;\n  user-select: none;\n`;\n\nexport default Header;\n","import React from \"react\";\n\nimport Title from \"./Title\";\nimport DateTime from '../DateTime'\nimport Style from \"../../styles/Header\";\n\nconst Header = () => {\n  return (\n    <Style>\n      <Title />\n      <DateTime date={new Date()} />\n    </Style>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nimport { arsenic, accent, baseFont } from \"./_definitions\";\n\ninterface IProps {\n  accent: boolean;\n}\n\nconst SmartButton = styled.button<IProps>`\n  color: ${props => (props.accent ? accent : arsenic)};\n  transition: 0.7s;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  outline: none;\n  margin: 0 5px;\n  padding: {\n    top: 3px;\n    left: 10px;\n    right: 10px;\n  }\n  font-family: ${baseFont};\n  font-size: 0.9rem;\n  letter-spacing: 1px;\n\n  &:hover {\n    color: ${accent};\n  }\n\n  &:active {\n    transform: scale(0.9);\n  }\n`;\n\nexport default SmartButton;\n","import React from \"react\";\n\nimport Style from \"../styles/SmartButton\";\n\nconst handleClick = (props: {\n  mode: string;\n  child: any;\n  func: (arg?: string) => void;\n}) => {\n  if (props.child === \"BACK\" || props.child === \"HOME\") {\n    props.func(\"posts\");\n  } else if (props.child === \"SOURCES\") {\n    props.func(\"sources\");\n  } else if (props.mode === \"profile\") {\n    props.func(\"profile\");\n  } else {\n    props.func();\n  }\n};\n\nconst Button = (props: {\n  children: any;\n  mode: string;\n  accent: boolean;\n  function: () => void;\n}) => {\n  return (\n    <Style\n      accent={props.accent}\n      onClick={() =>\n        handleClick({\n          mode: props.mode,\n          child: props.children,\n          func: props.function\n        })\n      }\n    >\n      {props.children}\n    </Style>\n  );\n};\n\nexport default Button;\n","import styled from \"styled-components\";\n\nimport { baseFont } from \"./_definitions\";\nimport { slideDown } from \"./_animations\";\n\nconst SmartMenu = styled.nav`\n  animation: 0.7s ease-out 0s 1 ${slideDown};\n  position: absolute;\n  left: 10vw;\n  top: 3.2rem;\n  transition: 0.7s;\n  width: 80vw;\n  height: 2rem;\n  font-family: ${baseFont};\n  font-weight: 300;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-transform: uppercase;\n  user-select: none;\n\n  @media (max-width: 435px) {\n    top: 4.5rem;\n    width: 100%;\n    left: 0;\n  }\n`;\n\nexport default SmartMenu;\n","import React from \"react\";\nimport { FaSyncAlt, FaEye, FaEyeSlash, FaFilter, FaUser } from \"react-icons/fa\";\n\nimport SmartButton from \"./SmartButton\";\nimport Style from \"../styles/SmartMenu\";\n\nconst buttonElement = (props: {\n  element: any;\n  mode: string;\n  accent: boolean;\n  function: (arg0?: string) => void;\n}) => {\n  return (\n    <SmartButton\n      accent={props.accent}\n      mode={props.mode}\n      function={props.function}\n    >\n      {props.element}\n    </SmartButton>\n  );\n};\n\nconst SmartMenu = (props: {\n  read: boolean;\n  toggleRead: () => void;\n  refresh: () => void;\n  moduleToggle: (arg0?: string) => void;\n  mode: string;\n  showFilter: boolean;\n  toggleFilter: () => void;\n}) => {\n  // homeButton\n  let homeButton = buttonElement({\n    element: props.mode === \"post\" ? \"BACK\" : \"HOME\",\n    mode: \"home\",\n    accent: false,\n    function: props.moduleToggle\n  });\n  // sourcesButton\n  let sourcesButton = buttonElement({\n    element: \"SOURCES\",\n    mode: \"sources\",\n    accent: false,\n    function: props.moduleToggle\n  });\n  // showReadButton;\n  let showReadButton =\n    props.mode === \"posts\"\n      ? buttonElement({\n          element: props.read ? <FaEye /> : <FaEyeSlash />,\n          mode: \"showRead\",\n          accent: props.read,\n          function: props.toggleRead\n        })\n      : null;\n\n  // refreshButton;\n  let refreshButton =\n    props.mode === \"posts\"\n      ? buttonElement({\n          element: <FaSyncAlt />,\n          mode: \"refresh\",\n          accent: false,\n          function: props.refresh\n        })\n      : null;\n  // filterButton;\n  let filterButton =\n    props.mode === \"posts\"\n      ? buttonElement({\n          element: <FaFilter />,\n          mode: \"filter\",\n          accent: props.showFilter,\n          function: props.toggleFilter\n        })\n      : null;\n\n  const profileButton = buttonElement({\n    element: <FaUser />,\n    mode: \"profile\",\n    accent: false,\n    function: props.moduleToggle\n  });\n\n  return (\n    <Style>\n      {homeButton}\n      {sourcesButton}\n      {showReadButton}\n      {filterButton}\n      {refreshButton}\n      {profileButton}\n    </Style>\n  );\n  // toggleModule = event => {\n  //   this.props.moduleToggle(event.target.innerText);\n  // };\n  // toggleFilter = () => {\n  //   this.props.toggleFilter();\n  // };\n  // render = () => {\n\n  // let homeBack = \"HOME\";\n\n  // let filter = this.props.showFilter ? (\n  //   <Filter\n  //     list={this.props.sources}\n  //     filterClick={this.props.filterClick}\n  //     toggleFilter={() => this.toggleFilter()}\n  //   />\n  // ) : null;\n  // let filterStyle = this.props.filter ? style.on : style.off;\n  // let filterButton = (\n  //   <button>\n  //     <FaFilter className={filterStyle} onClick={() => this.toggleFilter()} />\n  //   </button>\n  // );\n  // let showHide = (\n  //   <button>\n  //     {this.props.read ? (\n  //       <FaEye onClick={this.props.readToggle} />\n  //     ) : (\n  //       <FaEyeSlash onClick={this.props.readToggle} />\n  //     )}\n  //   </button>\n  // );\n\n  // if (this.props.mode === \"show\") {\n  //   filterButton = null;\n  //   showHide = null;\n  //   homeBack = \"BACK\";\n  // } else if (this.props.mode === \"SOURCES\") {\n  //   showHide = null;\n  //   filterButton = null;\n  // }\n\n  // const homeBackButton = (\n  //   <button className={style.text} onClick={this.toggleModule}>\n  //     {homeBack}\n  //   </button>\n  // );\n  // return (\n  //   <section className={style.smartMenu}>\n  //     {homeBackButton}\n  //     <button className={style.text} onClick={this.toggleModule}>\n  //       SOURCES\n  //     </button>\n  //     <button className={style.text}>PROFILE</button>\n  //     <button>\n  //       <FaSyncAlt onClick={this.props.refresh} className={style.refresh} />\n  //     </button>\n  //     {showHide}\n  //     {filterButton}\n  //     {filter}\n  //   </section>\n  // );\n  // };\n};\nexport default SmartMenu;\n","import React from \"react\";\nimport { FaCheck, FaCheckDouble } from \"react-icons/fa\";\nimport { TiStarFullOutline, TiStarOutline } from \"react-icons/ti\";\n\nimport Line from \"./PostElements/PostLine\";\nimport Footer from \"./PostElements/PostFooter\";\nimport { Post } from \"../store/post/types\";\n\nimport { Card, Title, Text } from \"../styles/PostCard\";\n\nconst PostCard = (props: {\n  post: Post;\n  update: (arg0: any) => void;\n  select: (arg0: any) => void;\n}) => {\n  const text = `${props.post.text.replace(/<(?:.|\\n)*?>/gm, \" \")}...`;\n\n  const starButton = props.post.star ? (\n    <TiStarFullOutline />\n  ) : (\n    <TiStarOutline />\n  );\n  const readButton = props.post.read ? <FaCheckDouble /> : <FaCheck />;\n  return (\n    <Card>\n      <Title\n        onClick={() => {\n          props.select({ id: props.post._id });\n        }}\n      >\n        {props.post.title}\n      </Title>\n      <Line\n        mode=\"card\"\n        source={props.post.source}\n        author={props.post.author}\n        buttons={{ star: starButton, read: readButton }}\n        read={props.post.read}\n        star={props.post.star}\n        update={props.update}\n        id={props.post._id}\n      />\n      <Text\n        onClick={() => {\n          props.select({ id: props.post._id });\n        }}\n      >\n        {text}\n      </Text>\n      <Footer\n        timestamp={props.post.published}\n        readingTime={props.post.readTime}\n      />\n    </Card>\n  );\n};\n\nexport default PostCard;\n","import React from \"react\";\n\nimport PostCard from \"./PostCard\";\nimport { Post } from \"../store/post/types\";\nimport { PostListStyle } from \"../styles/PostCardList\";\n\nconst postCardComponent = (props: {\n  post: Post;\n  update: (arg0: any) => void;\n  select: (arg0: any) => void;\n}) => {\n  return (\n    <PostCard\n      key={props.post._id}\n      post={props.post}\n      update={props.update}\n      select={props.select}\n    />\n  );\n};\n\nconst postCheck = (props: {\n  show: boolean;\n  filter: string;\n  pRead: boolean;\n  pSource: string;\n}) => {\n  if (props.filter) {\n    if (props.show) {\n      return props.pSource === props.filter;\n    } else {\n      return props.pRead === props.show && props.pSource === props.filter;\n    }\n  } else {\n    if (props.show) {\n      return true;\n    } else {\n      return props.pRead === props.show;\n    }\n  }\n};\n\nconst PostCardList = (props: {\n  showRead: boolean;\n  posts: any;\n  selectPost: (arg0: any) => void;\n  update: (arg0: any) => void;\n  filter: string;\n}) => {\n  return (\n    <PostListStyle>\n      {props.posts.map((post: Post) => {\n        const postCall = postCardComponent({\n          post: post,\n          update: props.update,\n          select: props.selectPost\n        });\n        return postCheck({\n          show: props.showRead,\n          filter: props.filter,\n          pRead: post.read,\n          pSource: post.sourceId\n        })\n          ? postCall\n          : null;\n      })}\n    </PostListStyle>\n  );\n};\n\nexport default PostCardList;\n","import React, { Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\n\nimport { Post } from \"../../store/post/types\";\nimport { CurrentUser } from \"../../store/user/types\";\nimport { loadPosts, updatePost, selectPost } from \"../../store/post/actions\";\nimport { loadSources } from \"../../store/source/actions\";\nimport { apiRequest } from \"../../store/user/actions\";\n\nimport { NewQuery } from \"../../types\";\n\nimport Header from \"../../components/Header/Header\";\nimport SmartMenu from \"../../components/SmartMenu\";\nimport Loading from \"../../components/Loading\";\nimport PostCardList from \"../../components/PostCardList\";\nimport ContentS from \"../../styles/Content\";\nimport { Button } from \"../../styles/_uiElements\";\n\n// lazy loading\nconst Central = React.lazy(() => import(\"../../components/Central\"));\nconst Filter = React.lazy(() => import(\"../../components/Filter\"));\nconst PostShow = React.lazy(() => import(\"../../components/PostShow\"));\nconst SourceCardList = React.lazy(() =>\n  import(\"../../components/SourceCardList\")\n);\nconst Profile = React.lazy(() => import(\"../../components/Profile\"));\nconst SourceEdit = React.lazy(() => import(\"../../components/SourceEdit\"));\n\ninterface props {\n  loadPosts: (arg0?: any) => any;\n  updatePost: (arg0?: any) => any;\n  selectPost: (arg0?: any) => any;\n  loadSources: (arg0?: any) => any;\n  apiRequest: (arg0?: any) => any;\n  currentUser: CurrentUser;\n  signOff: () => void;\n}\n\ninterface Content {\n  refresher: any;\n}\n\n// interface IState {\n//   module: string;\n//   showRead: boolean;\n//   showFilter: boolean;\n//   filterId: string;\n//   loading: boolean;\n//   sources: any[];\n//   posts: any[];\n//   message: string;\n//   showPost: Post;\n// }\nconst emptyPost: Post = {\n  _id: \"\",\n  source: \"\",\n  sourceId: \"\",\n  title: \"\",\n  url: \"\",\n  author: \"\",\n  published: new Date(),\n  parsed: new Date(),\n  text: \"\",\n  readTime: 0,\n  pages: 0,\n  read: false,\n  star: false\n};\n\nclass Content extends React.Component<props> {\n  state = {\n    loading: true,\n    module: \"posts\",\n    showRead: false,\n    showFilter: false,\n    filterId: \"\",\n    sources: [],\n    posts: [],\n    message: \"\",\n    showPost: emptyPost,\n    addSource: false\n  };\n\n  componentDidMount() {\n    this.fetchPostsSources();\n    this.refresher = setInterval(this.fetchPostsSources, 10000);\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  loadPosts = (query: NewQuery) => {\n    this.props.loadPosts(query).then((data: any) => {\n      this.setState({\n        posts: data.payload.data,\n        loading: false\n      });\n      // }\n    });\n  };\n  loadSources = (query: NewQuery) => {\n    this.props.loadSources(query).then((data: any) => {\n      this.setState({\n        sources: data.payload.data,\n        loading: false\n      });\n      // }\n    });\n  };\n\n  fetchPostsSources = () => {\n    // set queries\n    const postQuery = {\n      token: this.props.currentUser.token,\n      action: [\"post\", \"fetch\"]\n    };\n    const sourceQuery = {\n      token: this.props.currentUser.token,\n      action: [\"source\", \"fetch\"]\n    };\n    // run requests\n    this.loadPosts(postQuery);\n    this.loadSources(sourceQuery);\n  };\n\n  showModule = (module: string = \"posts\") => {\n    console.log(\"show module - \" + module);\n    this.setState({ module: module });\n  };\n  toggleShowRead = () => {\n    this.setState({ showRead: !this.state.showRead });\n  };\n  toggleShowFilter = () => {\n    this.setState({ showFilter: !this.state.showFilter });\n  };\n\n  // update sources & posts\n  chooseFilter = (id: string) => {\n    this.toggleShowFilter();\n    if (id === \"clear\") {\n      this.setState({\n        filterId: \"\"\n      });\n    } else {\n      this.setState({ filterId: id });\n    }\n  };\n\n  handleRefreshClick = () => {\n    // set query object\n    const query = {\n      token: this.props.currentUser.token,\n      action: [\"post\", \"refresh\"]\n    };\n    // request redux action to query API\n    this.props.apiRequest(query).then((res: any) => {\n      // const response = res.payload.data;\n    });\n  };\n  selectPostToShow = (props: { id: string }) => {\n    // set query object\n    const query = {\n      token: this.props.currentUser.token,\n      action: [\"post\", \"show\"],\n      id: props.id\n    };\n    // request redux action to query API\n    this.props.apiRequest(query).then((res: any) => {\n      const response = res.payload.data;\n      if (response.authed) {\n        this.showModule(\"post\");\n        this.setState({\n          showPost: response.post\n        });\n      }\n    });\n  };\n\n  updateStatePosts = (props: { id: string; field: string }) => {\n    const newPosts = this.state.posts;\n    let oldPostState;\n    newPosts\n      .filter((post: Post) => post._id === props.id)\n      .forEach((post: Post) => {\n        if (props.field === \"read\") {\n          oldPostState = post.read;\n          post.read = !post.read;\n        } else {\n          oldPostState = post.star;\n          post.star = !post.star;\n        }\n      });\n    this.setState({ posts: newPosts });\n    return oldPostState;\n  };\n  updatePostAction = (props: { field: string; id: string }) => {\n    const oldState = this.updateStatePosts({\n      id: props.id,\n      field: props.field\n    });\n    let fields: { [index: string]: boolean } = {};\n    fields[`${props.field}`] = !oldState;\n\n    const query = {\n      token: this.props.currentUser.token,\n      action: [\"post\", \"update\"],\n      id: props.id,\n      fields\n    };\n\n    this.props\n      .updatePost(query)\n      .then((response: { [index: string]: string }) => {\n        this.setState({ message: response.statusText });\n      });\n  };\n  updateSourceInState = (props: { [index: string]: string }) => {\n    const newSources = this.state.sources;\n    // let oldSourceElement;\n    newSources\n      .filter((source: any) => source._id === props._id)\n      .forEach((source: any) => {\n        source.name = props.name;\n        source.url = props.url;\n        source.homepage = props.homepage;\n      });\n    this.setState({ source: newSources });\n\n    // const newPosts = this.state.posts;\n    // let oldPostState;\n    // newPosts\n    //   .filter((post: Post) => post._id === props.id)\n    //   .forEach((post: Post) => {\n    //     if (props.field === \"read\") {\n    //       oldPostState = post.read;\n    //       post.read = !post.read;\n    //     } else {\n    //       oldPostState = post.star;\n    //       post.star = !post.star;\n    //     }\n    //   });\n  };\n\n  updateSourceAction = (props: { [index: string]: string }) => {\n    console.log(props);\n    const query = {\n      token: this.props.currentUser.token,\n      action: [\"source\", \"update\"],\n      fields: props\n    };\n\n    this.props.apiRequest(query).then((response: any) => {\n      console.log(response);\n      const message = response.payload.data.message;\n      // if (response.payload){\n      console.log(message);\n      this.setState({ message: message });\n      this.updateSourceInState(props);\n    });\n  };\n\n  createSource = (cSprops: any) => {\n    console.log(\"- create source:\");\n    console.log(cSprops);\n    // set query object\n    const query = {\n      token: this.props.currentUser.token,\n      action: [\"source\", \"create\"],\n      fields: cSprops\n    };\n    let newSource = cSprops;\n     newSource._id = \"012345\"\n    const newSourceToArray = [newSource];\n    const newState = [...this.state.sources, ...newSourceToArray];\n    // request redux action to query API\n    this.props.apiRequest(query).then((res: any) => {\n      const response = res.payload.data;\n      console.log(response);\n      this.setState({\n        message: response.message,\n        addSource: false,\n        sources: newState\n      });\n    });\n  };\n\n  toggleShowAddSource = () => {\n    this.setState({ addSource: !this.state.addSource });\n  };\n  checkIfSourcesEmpty = () => {\n    const check =\n      this.state.sources === [] || this.state.sources.length === 0\n        ? true\n        : false;\n    return check;\n  };\n  checkIfPostsSourcesEmpty = () => {\n    let message;\n    if (\n      this.checkIfSourcesEmpty() &&\n      (this.state.posts === [] || this.state.posts.length === 0)\n    ) {\n      message = \"There are no sources configured.\";\n    } else if (this.state.posts === [] || this.state.posts.length === 0) {\n      message = \"The are no posts for now.\";\n    }\n    return message;\n  };\n  // ui elements\n  profile = (\n    <Suspense fallback={<Loading />}>\n      <Profile\n        currentUser={this.props.currentUser}\n        signOff={this.props.signOff}\n      />\n    </Suspense>\n  );\n  addSource = (\n    <Suspense fallback={<Loading />}>\n      <SourceEdit submit={this.createSource} close={this.toggleShowAddSource} />\n    </Suspense>\n  );\n  render() {\n    // postToShow\n    const postShow = (\n      <Suspense fallback={<Loading />}>\n        <PostShow post={this.state.showPost} update={this.updatePostAction} />\n      </Suspense>\n    );\n    // smartmenu\n    const smartMenu = (\n      <SmartMenu\n        read={this.state.showRead}\n        toggleRead={this.toggleShowRead}\n        refresh={this.handleRefreshClick}\n        moduleToggle={this.showModule}\n        mode={this.state.module}\n        showFilter={this.state.filterId !== \"\"}\n        toggleFilter={this.toggleShowFilter}\n      />\n    );\n    // filter\n    const filter =\n      this.state.showFilter && this.state.sources ? (\n        <Suspense fallback={<Loading />}>\n          <Filter\n            toggle={this.toggleShowFilter}\n            list={this.state.sources}\n            choose={this.chooseFilter}\n            id={this.state.filterId}\n          />\n        </Suspense>\n      ) : null;\n\n    // list of posts\n    let postsList;\n    const messageToShow = this.checkIfPostsSourcesEmpty();\n    // console.log(messageToShow);\n    // if (this.state.message) {\n    //   console.log(\"smth wrong with state message\");\n    //   console.log(this.state.message)\n    // } else\n    if (this.state.loading) {\n      postsList = <Loading />;\n    } else if (messageToShow) {\n      postsList = (\n        <Suspense fallback={<Loading />}>\n          <Central message={messageToShow} />\n        </Suspense>\n      );\n    } else {\n      postsList = (\n        <PostCardList\n          showRead={this.state.showRead}\n          posts={this.state.posts}\n          selectPost={this.selectPostToShow}\n          update={this.updatePostAction}\n          filter={this.state.filterId}\n        />\n      );\n    }\n\n    let sourcesList;\n    if (this.checkIfSourcesEmpty()) {\n      sourcesList = (\n        <Suspense fallback={<Loading />}>\n          <Central\n            message=\"The are no sources for now.\"\n            function={this.toggleShowAddSource}\n          >\n            <Button>Add source</Button>\n          </Central>\n        </Suspense>\n      );\n    } else {\n      sourcesList = (\n        <Suspense fallback={<Loading />}>\n          <SourceCardList\n            sources={this.state.sources}\n            submit={this.createSource}\n            //  addSource={this.props.addSource}\n            //  deleteSource={this.deleteSource}\n            update={this.updateSourceAction}\n          />\n        </Suspense>\n      );\n    }\n    return (\n      <ContentS data-test=\"app\">\n        <Header />\n        {smartMenu}\n        {filter}\n        {this.state.module === \"posts\" ? postsList : null}\n        {this.state.module === \"post\" ? postShow : null}\n        {this.state.module === \"sources\" ? sourcesList : null}\n        {this.state.addSource ? this.addSource : null}\n        {this.state.module === \"profile\" ? this.profile : null}\n      </ContentS>\n    );\n  }\n}\nconst mapStateToProps = (state: AppState) => ({\n  // posts: state.posts,\n  // sources: state.sources,\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadPosts, updatePost, selectPost, loadSources, apiRequest }\n)(Content);\n","import {\n  // SystemState,\n  SET_POSTS,\n  Query,\n  PostId,\n  UPDATE_POST,\n  SELECT_POST\n} from \"./types\";\nimport { NewQuery } from \"../../types\";\n\nimport axios from \"axios\";\n\n// const apiUrl = `${process.env.REACT_APP_SERVER}/api`;\n\nexport function loadPosts(query: NewQuery) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: SET_POSTS,\n    payload: promise\n  };\n}\n\nexport function updatePost(query: Query) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: UPDATE_POST,\n    payload: promise\n  };\n}\n\nexport function selectPost(postId: PostId) {\n  const promise = axios\n    .get(`/post/${postId}`)\n    .then(response => response)\n    .catch(error => error);\n  return {\n    type: SELECT_POST,\n    payload: promise\n  };\n}\n\n// export function updateSource(query) {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({ query })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"UPDATE_SOURCE\",\n//     payload: promise\n//   };\n// }\n// export function refreshPosts() {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({\n//       query: {\n//         action: [\"post\", \"refresh\"]\n//       }\n//     })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"REFRESH_POSTS\",\n//     payload: promise\n//   };\n// }\n// export function addSource(query) {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({ query })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"ADD_SOURCE\",\n//     payload: promise\n//   };\n// }\n// export function deleteSource(query) {\n//   if (query.action && query.id) {\n//     const promise = fetch(apiUrl, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify({ query })\n//     })\n//       .then(r => r)\n//       // r.json())\n//       .catch(e => {\n//         return e;\n//       });\n\n//     return {\n//       type: \"DELETE_SOURCE\",\n//       payload: promise\n//     };\n//   } else {\n//     return \"Missing action and/or id\";\n//   }\n// }\n\n// export function setSources() {\n//   const promise = fetch(`${apiUrl}/sources`).then(r => r.json());\n//   return {\n//     type: \"SET_SOURCES\",\n//     payload: promise\n//   };\n// }\n\n// export function selectPost(postId) {\n//   const promise = fetch(`${apiUrl}/post/${postId}`).then(r => r.json());\n//   return {\n//     type: \"SELECT_POST\",\n//     payload: promise\n//   };\n// }\n\n// export function sourceCreateModule(status) {\n//   return {\n//     type: \"SHOW_MODULE\",\n//     payload: status\n//   };\n// }\n","import {\n  SET_SOURCES\n  // Query,\n  // PostId,\n  // UPDATE_POST,\n  // SELECT_POST\n} from \"./types\";\nimport axios from \"axios\";\nimport { NewQuery } from \"../../types\";\n\n// const apiUrl = `${process.env.REACT_APP_SERVER}/api`;\n\nexport function loadSources(query: NewQuery) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n  return {\n    type: SET_SOURCES,\n    payload: promise\n  };\n}\n"],"sourceRoot":""}