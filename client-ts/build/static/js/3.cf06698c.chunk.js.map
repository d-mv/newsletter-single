{"version":3,"sources":["store/post/actions.ts","components/Header/Title.tsx","components/Timestamp.tsx","components/Header/Header.tsx","components/SmartMenu/SmartButton.tsx","components/SmartMenu/SmartMenu.tsx","components/Post/PostCard.tsx","components/Post/PostCardList.tsx","containers/Content/Content.tsx","store/app/actions.ts","styles/PostCard.module.scss","store/source/actions.ts","modules/dateTime.ts","components/Post/PostLine.tsx","components/Post/PostButton.tsx","components/Post/PostFooter.tsx","styles/Title.module.scss","styles/Timestamp.module.scss","styles/Header.module.scss","styles/SmartButton.module.scss","styles/SmartMenu.module.scss","styles/PostButton.module.scss","styles/PostCardList.module.scss"],"names":["promise","query","axios","post","then","response","catch","error","selectPost","props","token","action","id","payload","data","type","SELECT_POST","Title","react_default","a","createElement","className","style","header","Timestamp","title","dateTime","date","Header","Header_Title","components_Timestamp","Date","connect","state","thisUser","currentUser","module","showRead","showFilter","apiRequest","showModule","setMessage","toggleShowRead","current","TOGGLE_SHOW_READ","toggleShowFilter","styleClass","_React$useState","React","useState","_React$useState2","Object","slicedToArray","refresh","toggleRefresh","handleClick","cProps","child","mode","message","handleRefreshClick","func","smartRotate","smartRefresh","accent","smartAccented","smart","function","aria-label","onClick","children","buttonElement","SmartButton","element","filterSourceId","homeButton","sourcesButton","showReadButton","index_esm","refreshButton","filterButton","profileButton","menu","text","concat","replace","starButton","star","ti_index_esm","readButton","read","_id","card","PostLine","source","author","buttons","update","PostFooter","timestamp","published","readingTime","readTime","Filter","lazy","__webpack_require__","e","bind","sources","filter","react","fallback","Loading","console","log","posts","list","map","component","Post_PostCard","key","sourceId","Central","PostShow","SourceCardList","Profile","SourceEdit","Content","loading","addSource","fetchPostsSources","_this","loadPosts","setState","localStorage","setItem","JSON","stringify","loadSources","updateStatePosts","UProps","oldPostState","newPosts","forEach","field","newPost","updatePostAction","AProps","fields","updatePost","updateSourceInState","newSources","name","url","homepage","updateSourceAction","deleteAction","createSource","cSprops","newSource","newSourceToArray","newState","toConsumableArray","res","toggleShowAddSource","submit","close","postShow","showPost","checkIfSourcesEmpty","length","checkIfPostsSourcesEmpty","getLocalPosts","getItem","parse","sourcesListComponent","popUpMessageComponent","this","refresher","setInterval","window","scrollTo","clearInterval","_this2","setTimeout","sourcesList","toggle","postsList","Post_PostCardList","data-test","components_Header_Header","components_SmartMenu_SmartMenu","Component","LOAD_POSTS","UPDATE_POST","d","__webpack_exports__","_types__WEBPACK_IMPORTED_MODULE_0__","SHOW_MODULE","SET_MESSAGE","TOGGLE_SHOW_FILTER","exports","line","footer","wrapper","sub","scaleUp","slideInFromTop","slideInFromLeft","growLarge","slideDown","rotate","disappear","setFilter","axios__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_1___default","n","LOAD_SOURCES","SET_FILTER","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","dateFromDb","keys","timeToDisplay","getHours","getMinutes","getDay","getDate","getMonth","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_PostButton__WEBPACK_IMPORTED_MODULE_1__","_styles_PostCard_module_scss__WEBPACK_IMPORTED_MODULE_2__","_styles_PostCard_module_scss__WEBPACK_IMPORTED_MODULE_2___default","status","_styles_PostButton_module_scss__WEBPACK_IMPORTED_MODULE_1__","_styles_PostButton_module_scss__WEBPACK_IMPORTED_MODULE_1___default","PostButton","onStatus","offStatus","_modules_dateTime__WEBPACK_IMPORTED_MODULE_1__","parsed","span","button","modal","central","display"],"mappings":"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","file":"static/js/3.cf06698c.chunk.js","sourcesContent":["import {\n  SET_POSTS, LOAD_POSTS,\n  UPDATE_POST, TOGGLE_SHOW_READ,\n  SELECT_POST\n} from \"./types\";\nimport { NewQuery } from \"../../types\";\n\nimport axios from \"axios\";\n\nconst promise = (query: NewQuery) => (\n  axios\n    .post(\"/\", {\n      query\n    }).then(response => response)\n    .catch(error => error))\n\nexport function loadPosts(token:string) {\n  const query = {\n  token: token,\n  action: [\"post\", \"fetch\"]\n};\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: LOAD_POSTS,\n    payload: promise\n  };\n}\n\nexport function setPosts(posts: any) {\n  return {\n    type: SET_POSTS,\n    payload: posts\n  };\n}\n\nexport function toggleShowRead(current: boolean) {\n  return {\n    type: TOGGLE_SHOW_READ,\n    payload: !current\n  };\n}\n\nexport function updatePost(props: { token: string, id: string, fields: any }) {\n  const query = {\n    token: props.token,\n    action: [\"post\", \"update\"],\n    id: props.id,\n    fields: props.fields\n  };\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then((response:any) => response)\n    .catch(error => error);\n\n  return {\n    type: UPDATE_POST,\n    payload: promise\n  };\n}\n\nexport function selectPost(props: { token: string, id: string }) {\n  const query = {\n    token: props.token,\n    action: [\"post\", \"show\"],\n    id: props.id\n  };\n  const request: any = promise(query)\n    .then((response: any) => response.data.post || {})\n    .catch((error: any) => error);\n\n  let payload = request\n  if (props === { token: '', id: '' }) {\n    return {\n      type: '',\n      payload: payload\n    };\n  } else {\n    return {\n      type: SELECT_POST,\n      payload: payload\n    };\n  }\n}\n","import React from \"react\";\n\nimport style from \"../../styles/Title.module.scss\";\n\nconst Title = () => {\n  return <h1 className={style.header}>The Newsletter</h1>;\n};\n\nexport default Title;\n","import React from \"react\";\n\nimport dateTime from \"../modules/dateTime\";\n\nimport style from \"../styles/Timestamp.module.scss\";\n\nconst Timestamp = (props: { date: Date }) => {\n  return <h3 className={style.title}>{dateTime(props.date)}</h3>;\n};\n\nexport default Timestamp;\n","import React from \"react\";\n\nimport Title from \"./Title\";\nimport DateTime from '../Timestamp'\nimport style from \"../../styles/Header.module.scss\";\n\nconst Header = () => {\n  return (\n    <header className={style.header}>\n      <Title />\n      <DateTime date={new Date()} />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\n\nimport { apiRequest } from \"../../store/user/actions\";\nimport { toggleShowRead, selectPost } from \"../../store/post/actions\";\nimport {\n  showModule,\n  setMessage,\n  toggleShowFilter\n} from \"../../store/app/actions\";\n\nimport style from \"../../styles/SmartButton.module.scss\";\n\nconst Button = (props: {\n  children: any;\n  mode: string;\n  accent: boolean;\n  function?: () => void;\n  apiRequest: (arg0?: any) => any;\n  thisUser: any;\n  module: string;\n  showRead: boolean;\n  showModule: (arg0: string) => any;\n  setMessage: (arg0: string) => any;\n  selectPost: (arg0: { token: string; id: string }) => any;\n\n  showFilter: boolean;\n  toggleShowFilter: (arg0: boolean) => void;\n\n  toggleShowRead: (current: boolean) => { type: string; payload: boolean };\n}) => {\n  const [refresh, toggleRefresh] = React.useState(false);\n\n  const handleRefreshClick = () => {\n    // start icon rotation\n    toggleRefresh(true);\n    // set query object\n    const query = {\n      token: props.thisUser.token,\n      action: [\"post\", \"refresh\"]\n    };\n    // request redux action to query API\n    props.apiRequest(query).then((response: any) => {\n      // stop icon rotation\n      toggleRefresh(false);\n      // save response message\n      props.setMessage(response.payload.data.message);\n    });\n  };\n\n  const handleClick = (cProps: { mode: string; child: any; func: any }) => {\n    if (cProps.child === \"BACK\" || cProps.child === \"HOME\") {\n      // if back -clear post from state\n      switch (cProps.child) {\n        case \"BACK\":\n          props.selectPost({ token: \"\", id: \"\" });\n          break;\n      }\n      props.showModule(\"posts\");\n    } else if (cProps.child === \"SOURCES\") {\n      props.showModule(\"sources\");\n    } else if (props.mode === \"profile\") {\n      props.showModule(\"profile\");\n    } else if (props.mode === \"refresh\") {\n      handleRefreshClick();\n    } else if (props.mode === \"showRead\") {\n      props.toggleShowRead(props.showRead);\n    } else if (props.mode === \"filter\") {\n      props.toggleShowFilter(props.showFilter);\n    } else {\n      cProps.func();\n    }\n  };\n\n  let styleClass;\n  if (props.mode === \"refresh\") {\n    styleClass = refresh ? style.smartRotate : style.smartRefresh;\n  } else if (props.accent) {\n    styleClass = style.smartAccented;\n  } else {\n    styleClass = style.smart;\n  }\n  const func = props.function ? props.function : null;\n  return (\n    <button\n      className={styleClass}\n      aria-label={props.mode}\n      onClick={() =>\n        handleClick({\n          mode: props.mode,\n          child: props.children,\n          func: func\n        })\n      }\n    >\n      {props.children}\n    </button>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  thisUser: state.currentUser,\n  module: state.module,\n  showRead: state.showRead,\n  showFilter: state.showFilter\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    apiRequest,\n    showModule,\n    setMessage,\n    toggleShowRead,\n    selectPost,\n    toggleShowFilter\n  }\n)(Button);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FaSyncAlt, FaEye, FaEyeSlash, FaFilter, FaUser } from \"react-icons/fa\";\n\nimport { AppState } from \"../../store\";\n\nimport SmartButton from \"./SmartButton\";\n\nimport style from \"../../styles/SmartMenu.module.scss\";\n\nconst buttonElement = (props: {\n  element: any;\n  mode: string;\n  accent: boolean;\n  function?: (arg0?: string) => void;\n}) => {\n  return (\n    <SmartButton\n      accent={props.accent}\n      mode={props.mode}\n      function={props.function}\n    >\n      {props.element}\n    </SmartButton>\n  );\n};\n\nconst SmartMenu = (props: {\n  showRead: boolean;\n  filterSourceId: string;\n  // toggleFilter: () => void;\n  module: string;\n}) => {\n  // homeButton\n  let homeButton = buttonElement({\n    element: props.module === \"post\" ? \"BACK\" : \"HOME\",\n    mode: \"home\",\n    accent: false\n  });\n  // sourcesButton\n  let sourcesButton = buttonElement({\n    element: \"SOURCES\",\n    mode: \"sources\",\n    accent: false\n  });\n  // showReadButton;\n  let showReadButton =\n    props.module === \"posts\"\n      ? buttonElement({\n          element: props.showRead ? <FaEye /> : <FaEyeSlash />,\n          mode: \"showRead\",\n          accent: props.showRead\n        })\n      : null;\n\n  // refreshButton;\n  let refreshButton =\n    props.module === \"posts\"\n      ? buttonElement({\n          element: <FaSyncAlt />,\n          mode: \"refresh\",\n          accent: false\n        })\n      : null;\n  // filterButton;\n  let filterButton =\n    props.module === \"posts\"\n      ? buttonElement({\n          element: <FaFilter />,\n          mode: \"filter\",\n          accent: props.filterSourceId !== ''\n        })\n      : null;\n\n  const profileButton = buttonElement({\n    element: <FaUser />,\n    mode: \"profile\",\n    accent: false\n  });\n\n  return (\n    <nav className={style.menu}>\n      {homeButton}\n      {sourcesButton}\n      {showReadButton}\n      {filterButton}\n      {refreshButton}\n      {profileButton}\n    </nav>\n  );\n};\nconst mapStateToProps = (state: AppState) => ({\n  module: state.module,\n  showRead: state.showRead,\n  filterSourceId: state.filterSourceId\n});\n\nexport default connect(mapStateToProps)(SmartMenu);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../../store\";\nimport { selectPost } from \"../../store/post/actions\";\nimport { showModule } from \"../../store/app/actions\";\n\nimport { FaCheck, FaCheckDouble } from \"react-icons/fa\";\nimport { TiStarFullOutline, TiStarOutline } from \"react-icons/ti\";\n\nimport Line from \"./PostLine\";\nimport Footer from \"./PostFooter\";\nimport { Post } from \"../../store/post/types\";\n\nimport style from \"../../styles/PostCard.module.scss\";\n\nconst PostCard = (props: {\n  post: Post;\n  update: (arg0: any) => void;\n  thisUser: any;\n  showModule: (arg0: string) => void;\n  selectPost: (arg0: { token: string; id: string }) => void;\n}) => {\n  const text = `${props.post.text.replace(/<(?:.|\\n)*?>/gm, \" \")}...`;\n\n  const starButton = props.post.star ? (\n    <TiStarFullOutline />\n  ) : (\n    <TiStarOutline />\n  );\n  const readButton = props.post.read ? <FaCheckDouble /> : <FaCheck />;\n\n  const selectPost = () => {\n    props.selectPost({ token: props.thisUser.token, id: props.post._id });\n    props.showModule(\"post\");\n  };\n\n  return (\n    <article className={style.card}>\n      <h3\n        className={style.title}\n        onClick={() => {\n          selectPost();\n        }}\n      >\n        {props.post.title}\n      </h3>\n      <Line\n        mode=\"card\"\n        source={props.post.source}\n        author={props.post.author}\n        buttons={{ star: starButton, read: readButton }}\n        read={props.post.read}\n        star={props.post.star}\n        update={props.update}\n        id={props.post._id}\n      />\n      <main\n        className={style.text}\n        onClick={() => {\n          selectPost();\n        }}\n      >\n        {text}\n      </main>\n      <Footer\n        timestamp={props.post.published}\n        readingTime={props.post.readTime}\n      />\n    </article>\n  );\n};\n\n// export default PostCard;\n\nconst mapStateToProps = (state: AppState) => ({\n  thisUser: state.currentUser\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    selectPost,\n    showModule\n  }\n)(PostCard);\n","import React, { Suspense } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../../store\";\nimport { Post } from \"../../store/post/types\";\n\nimport Loading from \"../../components/Loading\";\nimport PostCard from \"./PostCard\";\n\nimport style from \"../../styles/PostCardList.module.scss\";\n\nconst Filter = React.lazy(() => import(\"../../components/Filter\"));\n\n\n// ! https://github.com/Merri/react-lazy\n\n\nconst PostCardList = (props: {\n  showRead: boolean;\n  posts: any;\n  filterSourceId: string;\n  showFilter: boolean;\n  sources: any;\n  update: (arg0: any) => any;\n}) => {\n  const filter =\n    props.showFilter && props.sources ? (\n      <Suspense fallback={<Loading />}>\n        <Filter />\n      </Suspense>\n    ) : null;\n\n    console.log(props.posts)\n  return (\n    <div className={style.list}>\n      {/* show filter */}\n      {filter}\n      {/* show cards */}\n      {props.posts.map((post: Post) => {\n        // set the component\n        const component = (\n          <PostCard key={post._id} post={post} update={props.update} />\n        );\n        // if source filter ON\n        if (props.filterSourceId) {\n          // if SHOW READ is ON\n          if (props.showRead) {\n            return post.sourceId === props.filterSourceId ? component : null;\n          } else {\n            // if SHOW READ is OFF\n            return post.read === props.showRead &&\n              post.sourceId === props.filterSourceId\n              ? component\n              : null;\n          }\n          // if source filter OFF\n        } else {\n          if (props.showRead) {\n            return component;\n          } else {\n            return post.read === props.showRead ? component : null;\n          }\n        }\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  showRead: state.showRead,\n  sources: state.sources,\n  filterSourceId: state.filterSourceId,\n  showFilter: state.showFilter\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(PostCardList);\n","import React, { Suspense } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../../store\";\nimport { Post } from \"../../store/post/types\";\nimport { loadPosts, updatePost } from \"../../store/post/actions\";\nimport { loadSources } from \"../../store/source/actions\";\nimport { apiRequest } from \"../../store/user/actions\";\nimport { setMessage } from \"../../store/app/actions\";\n\nimport Header from \"../../components/Header/Header\";\nimport SmartMenu from \"../../components/SmartMenu/SmartMenu\";\nimport Loading from \"../../components/Loading\";\nimport PostCardList from \"../../components/Post/PostCardList\";\n\nimport \"../../styles/_ui.scss\";\n\n// lazy loading\nconst Central = React.lazy(() => import(\"../../components/Central\"));\nconst PostShow = React.lazy(() => import(\"../../components/Post/PostShow\"));\nconst SourceCardList = React.lazy(() =>\n  import(\"../../components/Source/SourceCardList\")\n);\nconst Profile = React.lazy(() => import(\"../../components/Profile\"));\nconst SourceEdit = React.lazy(() =>\n  import(\"../../components/Source/SourceEdit\")\n);\n\ninterface props {\n  loadPosts: (arg0?: any) => any;\n  updatePost: (arg0?: any) => any;\n  loadSources: (arg0?: any) => any;\n  apiRequest: (arg0?: any) => any;\n  thisUser: any;\n  module: string;\n  message: string;\n  setMessage: (arg0: string) => any;\n  showPost: {};\n  sources: any;\n  toggle:()=>void\n}\n\ninterface Content {\n  refresher: any;\n}\n\nconst messageComponent = (props:any) => (\n    <Suspense fallback={<Loading />}>\n      <Central {...props} />\n    </Suspense>\n  );\n\n  const profile = (toggle:()=>void)=>(\n    <Suspense fallback={<Loading />}>\n      <Profile toggle={toggle}/>\n    </Suspense>\n  );\n\nclass Content extends React.Component<props> {\n  state = {\n    loading: true,\n    sources: [],\n    posts: [],\n    addSource: false\n  };\n\n  // myStorage = window.localStorage;\n  // @ts-ignore\n  // localStorage.setItem('posts'.[])\n  //   localStorage.setItem('myCat', 'Tom');\n  // The syntax for reading the localStorage item is as follows:\n\n  // var cat = localStorage.getItem('myCat');\n  // The syntax for removing the localStorage item is as follows:\n\n  // localStorage.removeItem('myCat');\n\n  // * get posts & sources from API\n  componentWillMount() {\n    const data: any = localStorage.getItem(\"posts\");\n    const posts: any = JSON.parse(data) ?JSON.parse(data):[];\n    this.setState({posts})\n  }\n  componentDidMount() {\n    this.fetchPostsSources();\n    this.refresher = setInterval(this.fetchPostsSources, 10000);\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchPostsSources = () => {\n    this.props.loadPosts(this.props.thisUser.token).then((data: any) => {\n      this.setState({\n        posts: data.payload.data,\n        loading: false\n      });\n      localStorage.setItem(\"posts\", JSON.stringify(data.payload.data));\n    });\n    this.props.loadSources(this.props.thisUser.token).then((data: any) => {\n      this.setState({\n        sources: data.payload.data,\n        loading: false\n      });\n    });\n  };\n  // * end-of-get posts/sources\n\n  // ! refactor\n  updateStatePosts = (UProps: { id: string; field: string }) => {\n    // const data:any =localStorage.getItem(\"posts\")\n    // const newPosts = JSON.parse(data)\n    const newPosts = this.state.posts;\n    let oldPostState;\n    newPosts\n      .filter((post: Post) => post._id === UProps.id)\n      .forEach((post: Post) => {\n        if (UProps.field === \"read\") {\n          oldPostState = post.read;\n          post.read = !post.read;\n        } else {\n          oldPostState = post.star;\n          post.star = !post.star;\n        }\n      });\n    const update: any[] = newPosts.map((post: any) => {\n      let newPost = post;\n      if (post._id === UProps.id) {\n        if (UProps.field === \"read\") {\n          newPost.read = !post.read;\n        } else {\n          newPost.star = !post.star;\n        }\n      }\n      return newPost;\n    });\n    this.setState({\n      posts: update\n    });\n    localStorage.setItem(\"posts\", JSON.stringify(update));\n    return oldPostState;\n  };\n  updatePostAction = (AProps: { field: string; id: string }) => {\n    const update = this.updateStatePosts({\n      id: AProps.id,\n      field: AProps.field\n    });\n    let fields: {\n      [index: string]: boolean;\n    } = {};\n    fields[`${AProps.field}`] = !update;\n\n    const query = {\n      token: this.props.thisUser.token,\n      id: AProps.id,\n      fields: fields\n    };\n    this.props.updatePost(query).then((response: any) => {\n      const message = response.payload.data.message;\n      this.props.setMessage(message);\n    });\n  };\n\n  updateSourceInState = (props: { [index: string]: string }) => {\n    const newSources = this.state.sources;\n    // let oldSourceElement;\n    newSources\n      .filter((source: any) => source._id === props._id)\n      .forEach((source: any) => {\n        source.name = props.name;\n        source.url = props.url;\n        source.homepage = props.homepage;\n      });\n    this.setState({ source: newSources });\n  };\n\n  updateSourceAction = (props: { [index: string]: string }) => {\n    const query = {\n      token: this.props.thisUser.token,\n      action: [\"source\", \"update\"],\n      fields: props\n    };\n\n    this.props.apiRequest(query).then((response: any) => {\n      const message = response.payload.data.message;\n      this.props.setMessage(message);\n      this.updateSourceInState(props);\n    });\n  };\n  // ! end-of-refactor\n  // delete source/post\n  deleteAction = (props: { [index: string]: string }) => {};\n\n  createSource = (cSprops: any) => {\n    const query = {\n      token: this.props.thisUser.token,\n      action: [\"source\", \"create\"],\n      fields: cSprops\n    };\n    let newSource = cSprops;\n    newSource._id = \"012345\";\n    const newSourceToArray = [newSource];\n    const newState = [...this.state.sources, ...newSourceToArray];\n    // request redux action to query API\n    this.props.apiRequest(query).then((res: any) => {\n      const message = res.payload.data.message;\n      this.props.setMessage(message);\n      this.setState({\n        addSource: false,\n        sources: newState\n      });\n    });\n  };\n\n  toggleShowAddSource = () => {\n    this.setState({ addSource: !this.state.addSource });\n  };\n\n  // ui elements\n\n  addSource = (\n    <Suspense fallback={<Loading />}>\n      <SourceEdit submit={this.createSource} close={this.toggleShowAddSource} />\n    </Suspense>\n  );\n\n  postShow = (showPost: Post) => (\n    <Suspense fallback={<Loading />}>\n      <PostShow post={showPost} update={this.updatePostAction} />\n    </Suspense>\n  );\n  checkIfSourcesEmpty = () => {\n    const check =\n      this.props.sources === [] || this.props.sources.length === 0\n        ? true\n        : false;\n    return check;\n  };\n\n  checkIfPostsSourcesEmpty = () => {\n    let message;\n    if (\n      this.checkIfSourcesEmpty() &&\n      (this.state.posts === [] || this.state.posts.length === 0)\n    ) {\n      message = \"There are no sources configured.\";\n    } else if (this.state.posts === [] || this.state.posts.length === 0) {\n      message = \"The are no posts for now.\";\n    } else if (this.getLocalPosts().length >0) {\nmessage=''\n    }\n    return message;\n  };\n\n  getLocalPosts = () => {\n    const data: any = localStorage.getItem(\"posts\");\n    let posts: any = JSON.parse(data) ?JSON.parse(data):[];\n    if (posts.length === 0){\n      posts = \"The are no posts for now.\"\n    } else if (posts.length > 0 && this.state.loading) {\n      this.setState({loading:false})\n    }\n    return posts ;\n  };\n\n  sourcesListComponent = () => (\n    <Suspense fallback={<Loading />}>\n      <SourceCardList\n        sources={this.state.sources}\n        submit={this.createSource}\n        update={this.updateSourceAction}\n      />\n    </Suspense>\n  );\n\n  popUpMessageComponent = () => (\n    <section className='message'>{this.props.message}</section>\n  );\n\n  render() {\n    if (this.props.message) {\n      setTimeout(() => this.props.setMessage(\"\"), 3000);\n    }\n    // list of posts\n    let postsList = this.state.loading ? null : (<PostCardList\n      posts={this.state.posts}\n      update={this.updatePostAction}\n    />)\n    //  list of sources\n    let sourcesList;\n    if (this.checkIfSourcesEmpty()) {\n      sourcesList = messageComponent({message:'The are no sources for now.',function:this.toggleShowAddSource,children:(<button className='button' aria-label='Add source'>Add source</button>)})\n    } else {\n      sourcesList = this.sourcesListComponent();\n    }\n\n    return (\n      <main data-test='app'>\n        <Header />\n        {<SmartMenu />}\n        {this.state.loading ? <Loading /> : null}\n        {this.props.message ? this.popUpMessageComponent() : null}\n        {this.props.module === \"posts\" ? postsList : null}\n        {\"_id\" in this.props.showPost\n          ? this.postShow(this.props.showPost)\n          : null}\n        {this.props.module === \"sources\" ? sourcesList : null}\n        {this.state.addSource ? this.addSource : null}\n        {this.props.module === \"profile\" ? profile(this.props.toggle) : null}\n      </main>\n    );\n  }\n}\nconst mapStateToProps = (state: AppState) => ({\n  sources: state.sources,\n  thisUser: state.currentUser,\n  module: state.module,\n  message: state.message,\n  showPost: state.showPost\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    loadPosts,\n    updatePost,\n    loadSources,\n    apiRequest,\n    setMessage\n  }\n)(Content);\n","import { SHOW_MODULE, SET_MESSAGE, TOGGLE_SHOW_FILTER } from \"./types\";\n\nexport function showModule(module: string) {\n  return {\n    type: SHOW_MODULE,\n    payload: module\n  };\n}\nexport function setMessage(message: string) {\n  return {\n    type: SET_MESSAGE,\n    payload: message\n  };\n}\nexport function toggleShowFilter(filter:boolean) {\n  return {\n    type: TOGGLE_SHOW_FILTER,\n    payload: !filter\n  };\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PostCard_card__2J-H1\",\"text\":\"PostCard_text__1jLmP\",\"title\":\"PostCard_title__3Vi12\",\"line\":\"PostCard_line__1mgL2\",\"footer\":\"PostCard_footer__1aTwF\",\"wrapper\":\"PostCard_wrapper__2E9fT\",\"sub\":\"PostCard_sub__2hKdg\",\"scaleUp\":\"PostCard_scaleUp__3oKww\",\"slideInFromTop\":\"PostCard_slideInFromTop__2REAI\",\"slideInFromLeft\":\"PostCard_slideInFromLeft__FabEc\",\"growLarge\":\"PostCard_growLarge__g5rIF\",\"slideDown\":\"PostCard_slideDown__XTYyj\",\"rotate\":\"PostCard_rotate__2m0Yg\",\"disappear\":\"PostCard_disappear__37Is8\"};","import { LOAD_SOURCES, SET_SOURCES, SET_FILTER } from \"./types\";\nimport axios from \"axios\";\n\nexport function loadSources(token: string) {\n  const query = {\n    token: token,\n    action: [\"source\", \"fetch\"]\n  };\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: LOAD_SOURCES,\n    payload: promise\n  };\n}\n\nexport function setSources(sources: any) {\n  return {\n    type: SET_SOURCES,\n    payload: sources\n  };\n}\n\nexport function setFilter(id: string) {\n  return {\n    type: SET_FILTER,\n    payload: id\n  };\n}\n","const months: { [index: number]: string } = {\n  1: \"Jan\",\n  2: \"Feb\",\n  3: \"Mar\",\n  4: \"Apr\",\n  5: \"May\",\n  6: \"Jun\",\n  7: \"Jul\",\n  8: \"Aug\",\n  9: \"Sep\",\n  10: \"Oct\",\n  11: \"Nov\",\n  12: \"Dec\"\n};\nconst daysOfWeek: { [index: number]: string } = {\n  1: \"Sun\",\n  2: \"Mon\",\n  3: \"Tue\",\n  4: \"Wed\",\n  5: \"Thu\",\n  6: \"Fri\",\n  7: \"Sat\"\n};\n\nconst dateTime = (props: Date) => {\n  let dateFromDb = new Date();\n  if (!Object.keys(props).length) {\n    dateFromDb = new Date(props);\n  }\n  let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n  if (dateFromDb.getHours() > 12) {\n    timeToDisplay = `${dateFromDb.getHours() -\n      12}:${dateFromDb.getMinutes()} pm`;\n  }\n  return `${daysOfWeek[dateFromDb.getDay() + 1]} ${dateFromDb.getDate()} ${\n    months[dateFromDb.getMonth() + 1]\n  } at ${timeToDisplay}`;\n};\n\nexport default dateTime;\n","import React from \"react\";\n\nimport Button from \"./PostButton\";\n\nimport style from \"../../styles/PostCard.module.scss\";\n\nconst PostLine = (props: {\n  mode: string;\n  author: string;\n  source: string;\n  buttons: { star: any; read?: any; trash?: any };\n  update: (arg0: any) => void;\n  id: string;\n  read: boolean;\n  star: boolean;\n}) => {\n  const wrapper =\n    props.mode === \"show\"\n      ? `${props.author} @ ${props.source}`\n      : `@${props.source}`;\n  return (\n    <section className={style.line} data-test=\"component__post-line\">\n      <div className={style.wrapper}>{wrapper}</div>\n      <div className={style.wrapper}>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"star\"\n          status={props.star}\n          data-test=\"component__post-line--button\"\n        >\n          {props.buttons.star}\n        </Button>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"read\"\n          status={props.read}\n          data-test=\"component__post-line--button\"\n        >\n          {props.buttons.read}\n        </Button>\n      </div>\n    </section>\n  );\n};\n\nexport default PostLine;\n","import React from \"react\";\n\nimport style from \"../../styles/PostButton.module.scss\";\n\nconst PostButton = (props: {\n  update: (arg0: any) => void;\n  mode: string;\n  id: string;\n  children: any;\n  status: boolean;\n}) => {\n  const status = props.status ? (\n    <span className={style.onStatus}>{props.children}</span>\n  ) : (\n    <span className={style.offStatus}>{props.children}</span>\n  );\n  return (\n    <button\n      className={style.post}\n      aria-label={props.mode}\n      onClick={() => props.update({ field: props.mode, id: props.id })}\n    >\n      {status}\n    </button>\n  );\n};\n\nexport default PostButton;\n","import React from \"react\";\n\nimport dateTime from \"../../modules/dateTime\";\n\nimport style from \"../../styles/PostCard.module.scss\";\n\nconst PostFooter = (props: {\n  timestamp: Date;\n  parsed?: Date;\n  readingTime: number;\n}) => {\n  const readTime = `~${props.readingTime} mins`;\n  const parsed = props.parsed ? (\n    <div className={style.wrapper}>\n      <span className={style.span}>parsed: </span>\n      {dateTime(props.parsed)}\n    </div>\n  ) : null;\n\n  return (\n    <footer className={style.footer}>\n      <div className={style.wrapper}>\n        <span className={style.span}>posted: </span>\n        {dateTime(props.timestamp)}\n      </div>\n      {parsed}\n      <div className={style.wrapper}>{readTime}</div>\n    </footer>\n  );\n};\n\nexport default PostFooter;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Title_header__a8239\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Timestamp_title__1oVzj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__4gWOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smart\":\"SmartButton_smart__2LjGI\",\"smartAccented\":\"SmartButton_smartAccented__3QZCJ\",\"smartRefresh\":\"SmartButton_smartRefresh__mmdzI\",\"smartRotate\":\"SmartButton_smartRotate__2lr2t\",\"rotate\":\"SmartButton_rotate__2cqkO\",\"scaleUp\":\"SmartButton_scaleUp__26vHE\",\"slideInFromTop\":\"SmartButton_slideInFromTop__1MliQ\",\"slideInFromLeft\":\"SmartButton_slideInFromLeft__3Xj3w\",\"growLarge\":\"SmartButton_growLarge__3AZ2_\",\"slideDown\":\"SmartButton_slideDown__37h5C\",\"disappear\":\"SmartButton_disappear__3verO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"SmartMenu_menu__2dsRy\",\"slideDown\":\"SmartMenu_slideDown__2HD0v\",\"scaleUp\":\"SmartMenu_scaleUp__2ghSY\",\"slideInFromTop\":\"SmartMenu_slideInFromTop__1iIxf\",\"slideInFromLeft\":\"SmartMenu_slideInFromLeft__3WgAG\",\"growLarge\":\"SmartMenu_growLarge__3i7pH\",\"rotate\":\"SmartMenu_rotate__caE1e\",\"disappear\":\"SmartMenu_disappear__3UryS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"PostButton_post__3eHpg\",\"status\":\"PostButton_status__3B7IS\",\"onStatus\":\"PostButton_onStatus__3XZOD\",\"offStatus\":\"PostButton_offStatus__3nzNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PostCardList_button__1iLb_\",\"modal\":\"PostCardList_modal__2ji0D\",\"central\":\"PostCardList_central__2rVGP\",\"display\":\"PostCardList_display__3V18P\",\"list\":\"PostCardList_list__2tmb4\",\"message\":\"PostCardList_message__2tQPO\"};"],"sourceRoot":""}