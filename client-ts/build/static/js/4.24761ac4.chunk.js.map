{"version":3,"sources":["styles/PostCard.tsx","styles/_animations.tsx","modules/dateTime.tsx","components/PostElements/PostLine.tsx","components/PostElements/PostFooter.tsx","styles/PostButton.tsx","components/PostElements/PostButton.tsx","styles/Title.tsx","components/Header/Title.tsx","styles/DateTime.tsx","components/DateTime.tsx","styles/Header.tsx","components/Header/Header.tsx","styles/SmartButton.tsx","components/SmartButton.tsx","styles/SmartMenu.tsx","components/SmartMenu.tsx","components/PostCard.tsx","components/PostCardList.tsx","containers/Content/Content.tsx","store/post/actions.tsx","store/source/actions.tsx"],"names":["Card","styled","article","_templateObject","scaleUp","darkMediumGrey","Title","h3","_templateObject2","Text","main","_templateObject3","Line","section","_templateObject4","statusFont","Footer","footer","_templateObject5","Wrapper","div","_templateObject6","keyframes","slideDown","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","dateTime","props","dateFromDb","Date","Object","keys","length","timeToDisplay","concat","getHours","getMinutes","getDay","getDate","getMonth","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_PostButton__WEBPACK_IMPORTED_MODULE_1__","_styles_PostCard__WEBPACK_IMPORTED_MODULE_2__","PostLine","wrapper","mode","author","source","a","createElement","update","id","status","star","buttons","read","_modules_dateTime__WEBPACK_IMPORTED_MODULE_1__","PostFooter","readTime","readingTime","timestamp","Button","button","Off","span","arsenic","On","PostButton","react_default","children","onClick","field","h1","baseFont","styles_Title","DateTimeTitle","h5","DateTime_templateObject","dimGrey","DateTime","date","Header","header","Header_templateObject","styles_Header","Header_Title","components_DateTime","SmartButton","SmartButton_templateObject","accent","styles_SmartButton","child","func","handleClick","function","SmartMenu","nav","SmartMenu_templateObject","buttonElement","components_SmartButton","element","homeButton","moduleToggle","sourcesButton","showReadButton","index_esm","toggleRead","refreshButton","refresh","filterButton","showFilter","toggleFilter","profileButton","styles_SmartMenu","PostCard","text","post","replace","starButton","ti_index_esm","readButton","styles_PostCard","select","_id","title","published","PostCardList","styles_PostCardList","posts","map","postCall","components_PostCard","key","postCardComponent","selectPost","filter","show","pSource","pRead","postCheck","showRead","sourceId","Filter","React","lazy","e","then","bind","PostShow","SourceCardList","Profile","emptyPost","url","parsed","pages","Content","state","loading","module","filterId","sources","message","showPost","loadPosts","query","_this","data","payload","setState","loadSources","fetchPostsSources","postQuery","token","currentUser","action","sourceQuery","showModule","arguments","undefined","console","log","toggleShowRead","toggleShowFilter","chooseFilter","handleRefreshClick","fields","apiRequest","res","authed","selectPostToShow","response","updateStatePosts","oldPostState","newPosts","forEach","updatePostAction","oldState","updatePost","statusText","this","refresher","setInterval","window","scrollTo","clearInterval","postsList","smartMenu","components_SmartMenu","react","fallback","Loading","toggle","list","choose","components_PostCardList","postShow","sourcesList","profile","signOff","styles_Content","data-test","components_Header_Header","Component","connect","user","promise","axios","catch","error","type","SET_POSTS","UPDATE_POST","postId","get","SELECT_POST","SET_SOURCES"],"mappings":"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","file":"static/js/4.24761ac4.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nimport { darkMediumGrey, statusFont } from \"./_definitions\";\nimport { scaleUp } from \"./_animations\";\n\nconst Card = styled.article`\n  animation: 0.3s ease-out 0s 1 ${scaleUp};\n\n  @media (min-width: 499px) {\n    .text {\n      max-height: 50rem;\n    }\n  }\n\n  margin: 0 auto;\n  margin-bottom: 1rem;\n  padding-bottom: 1rem;\n\n  border-bottom: 1px solid ${darkMediumGrey};\n  @media (max-width: 699px) {\n    width: 100%;\n  }\n\n  @media (min-width: 700px) and (max-width: 949px) {\n    width: 45%;\n  }\n\n  @media (min-width: 950px) and (max-width: 1199px) {\n    width: 30%;\n  }\n\n  @media (min-width: 1200px) and (max-width: 1599px) {\n    width: 23%;\n  }\n\n  @media (min-width: 1599px) and (max-width: 4000px) {\n    width: 18%;\n  }\n`;\nconst Title = styled.h3`\n  cursor: pointer;\n  font-weight: 500;\n  margin: 0;\n  line-height: 1.6rem;\n  font-size: 1.3rem;\n  @media (max-width: 499px) {\n    font-size: 1.5rem;\n    line-height: 1.8rem;\n  }\n`;\n\nconst Text = styled.main`\n  font-size: 1.1rem;\n  padding: 0 0 0.3rem 0;\n  cursor: pointer;\n  margin-bottom: 5px;\n  line-height: 1.4rem;\n\n  @media (max-width: 499px) {\n    font-size: 1.3rem;\n  }\n`;\nconst Line = styled.section`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-content: center;\n  font-weight: 300;\n  font-family: ${statusFont};\n  letter-spacing: 0.03rem;\n  font-size: 0.8rem;\n  padding-top: 0.6rem;\n`;\nconst Footer = styled.footer`\n  display: flex;\n  font-family: ${statusFont};\n  justify-content: space-between;\n  font-size: 80%;\n  font-weight: 300;\n  padding: 0 0.3rem;\n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport { Card, Title, Line, Wrapper, Text, Footer };\n","import { keyframes } from \"styled-components\";\n\nconst scaleUp = keyframes`\n0% {transform:scale(0)} 100%{transform:scale(1)}\n`;\n\nconst slideInFromTop = keyframes`\n    0% {\n      transform: translateY(-100%);\n    }\n    100% {\n      transform: translateX(0);\n    }`;\n\nconst slideInFromLeft = keyframes`\n    0% {\n      transform: translateX(-100%);\n    }\n    100% {\n      transform: translateY(0);\n    }\n  `;\nconst growLarge = keyframes`\n    0% {\n      transform: scale(0);\n    }\n    100% {\n      transform: scale(1);\n    }\n    `;\nconst slideDown = keyframes`\n    0% {\n            transform: translateY(-30%);\n            filter:opacity(0)\n\n    }\n    100% {\n           transform: translateY(0);\n\n    }\n    `;\n\nexport { scaleUp, slideInFromTop, slideInFromLeft, growLarge, slideDown };\n","const months: { [index: number]: string } = {\n  1: \"Jan\",\n  2: \"Feb\",\n  3: \"Mar\",\n  4: \"Apr\",\n  5: \"May\",\n  6: \"Jun\",\n  7: \"Jul\",\n  8: \"Aug\",\n  9: \"Sep\",\n  10: \"Oct\",\n  11: \"Nov\",\n  12: \"Dec\"\n};\nconst daysOfWeek: { [index: number]: string } = {\n  1: \"Sun\",\n  2: \"Mon\",\n  3: \"Tue\",\n  4: \"Wed\",\n  5: \"Thu\",\n  6: \"Fri\",\n  7: \"Sat\"\n};\n\nconst dateTime = (props: Date) => {\n  let dateFromDb = new Date();\n  if (!Object.keys(props).length) {\n    dateFromDb = new Date(props);\n  }\n  let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n  if (dateFromDb.getHours() > 12) {\n    timeToDisplay = `${dateFromDb.getHours() -\n      12}:${dateFromDb.getMinutes()} pm`;\n  }\n  return `${daysOfWeek[dateFromDb.getDay() + 1]} ${dateFromDb.getDate()} ${\n    months[dateFromDb.getMonth() + 1]\n  } at ${timeToDisplay}`;\n};\n\nexport default dateTime;\n","import React from \"react\";\n\nimport Button from \"./PostButton\";\nimport { Line, Wrapper } from \"../../styles/PostCard\";\n\nconst PostLine = (props: {\n  mode: string;\n  author: string;\n  source: string;\n  buttons: { star: any; read?: any; trash?: any };\n  update: (arg0: any) => void;\n  id: string;\n  read: boolean;\n  star: boolean;\n}) => {\n  const wrapper =\n    props.mode === \"show\"\n      ? `${props.author} @ ${props.source}`\n      : `@${props.source}`;\n  return (\n    <Line>\n      <Wrapper>{wrapper}</Wrapper>\n      <Wrapper>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"star\"\n          status={props.star}\n        >\n          {props.buttons.star}\n        </Button>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"read\"\n          status={props.read}\n        >\n          {props.buttons.read}\n        </Button>\n      </Wrapper>\n    </Line>\n  );\n};\n\nexport default PostLine;\n","import React from \"react\";\n\nimport dateTime from \"../../modules/dateTime\";\n\nimport { Footer, Wrapper } from \"../../styles/PostCard\";\n\nconst PostFooter = (props: { timestamp: Date; readingTime: number }) => {\n  const readTime = `~${props.readingTime} mins`;\n  return (\n    <Footer>\n      <Wrapper>{dateTime(props.timestamp)}</Wrapper>\n      <Wrapper>{readTime}</Wrapper>\n    </Footer>\n  );\n};\n\nexport default PostFooter;\n","import styled from \"styled-components\";\nimport {\n  arsenic,\n  // light,\n  // lightGrey,\n  // silverSand,\n  // dimGrey,\n  darkMediumGrey\n  // accent,\n  // accentAlt,\n  // arsenicTrans,\n  // arsenicLightTrans,\n  // arsenicSemiTrans,\n  // baseFont,\n  // statusFont\n} from \"./_definitions\";\n\nconst Button = styled.button`\n  cursor: pointer;\n  outline: none;\n  font-size: 1.2rem;\n  margin: 0;\n  transition: 0.3s;\n\n  @media (max-width: 599px) {\n    font-size: 1.2rem;\n  }\n`;\nconst Off = styled.span`\n  transition: 0.3s;\n\n  color: ${darkMediumGrey};\n  &:hover {\n    color: ${arsenic};\n  }\n`;\nconst On = styled.span`\n  transition: 0.3s;\n\n  color: ${arsenic};\n  &:hover {\n    color: ${darkMediumGrey};\n  }\n`;\n\n// .delete {\n//   @extend .button;\n//   font-size: 1rem;\n// }\n\nexport { Button, On, Off };\n","import React from \"react\";\n\nimport { Button, On, Off } from \"../../styles/PostButton\";\n\nconst PostButton = (props: {\n  update: (arg0: any) => void;\n  mode: string;\n  id: string;\n  children: any;\n  status: boolean;\n}) => {\n  const status = props.status ? <On>{props.children}</On> : <Off>{props.children}</Off>;\n  return (\n    <Button onClick={() => props.update({ field: props.mode, id: props.id })}>\n      {status}\n    </Button>\n  );\n};\n\nexport default PostButton;\n","import styled from \"styled-components\";\n\nimport { arsenic, baseFont } from \"./_definitions\";\n\nconst Title = styled.h1`\n  font-family: ${baseFont};\n  color: ${arsenic};\n\n  @media (max-width: 302px) {\n    font-size: 1.5rem;\n  }\n\n  @media (min-width: 303px) and (max-width: 340px) {\n    font-size: 2rem;\n  }\n\n  @media (min-width: 341px) {\n    font-size: 2.5rem;\n  }\n  font-weight: 700;\n  margin: 0;\n  height: 3rem;\n`;\n\nexport default Title;\n","import React from \"react\";\n\nimport Style from \"../../styles/Title\";\n\nconst Title = () => {\n  return <Style>The Newsletter</Style>;\n};\n\nexport default Title;\n","import styled from \"styled-components\";\n\nimport { dimGrey } from \"./_definitions\";\n\nconst DateTimeTitle = styled.h5`\n  color: ${dimGrey};\n  font-size: 100%;\n  font-weight: normal;\n`;\n\nexport { DateTimeTitle };\n","import React from \"react\";\n\nimport dateTime from \"../modules/dateTime\";\n\nimport { DateTimeTitle } from \"../styles/DateTime\";\n\nconst DateTime = (props: { date: Date }) => {\n  return <DateTimeTitle>{dateTime(props.date)}</DateTimeTitle>;\n};\n\nexport default DateTime;\n","import styled from \"styled-components\";\n\nimport { darkMediumGrey } from \"./_definitions\";\n\nconst Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  flex-wrap: wrap;\n  padding: 0;\n\n  margin: -10px 20px 20px 20px;\n  border-bottom: 1px solid ${darkMediumGrey};\n  cursor: default;\n  user-select: none;\n`;\n\nexport default Header;\n","import React from \"react\";\n\nimport Title from \"./Title\";\nimport DateTime from '../DateTime'\nimport Style from \"../../styles/Header\";\n\nconst Header = () => {\n  return (\n    <Style>\n      <Title />\n      <DateTime date={new Date()} />\n    </Style>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nimport { arsenic, accent, baseFont } from \"./_definitions\";\n\ninterface IProps {\n  accent: boolean;\n}\n\nconst SmartButton = styled.button<IProps>`\n  color: ${props => (props.accent ? accent : arsenic)};\n  transition: 0.7s;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  outline: none;\n  margin: 0 5px;\n  padding: {\n    top: 3px;\n    left: 10px;\n    right: 10px;\n  }\n  font-family: ${baseFont};\n  font-size: 0.9rem;\n  letter-spacing: 1px;\n\n  &:hover {\n    color: ${accent};\n  }\n\n  &:active {\n    transform: scale(0.9);\n  }\n`;\n\nexport default SmartButton;\n","import React from \"react\";\n\nimport Style from \"../styles/SmartButton\";\n\nconst handleClick = (props: {\n  mode: string;\n  child: any;\n  func: (arg?: string) => void;\n}) => {\n  if (props.child === \"BACK\" || props.child === \"HOME\") {\n    props.func(\"posts\");\n  } else if (props.child === \"SOURCES\") {\n    props.func(\"sources\");\n  } else if (props.mode === \"profile\") {\n    props.func(\"profile\");\n  } else {\n    props.func();\n  }\n};\n\nconst Button = (props: {\n  children: any;\n  mode: string;\n  accent: boolean;\n  function: () => void;\n}) => {\n  return (\n    <Style\n      accent={props.accent}\n      onClick={() =>\n        handleClick({\n          mode: props.mode,\n          child: props.children,\n          func: props.function\n        })\n      }\n    >\n      {props.children}\n    </Style>\n  );\n};\n\nexport default Button;\n","import styled from \"styled-components\";\n\nimport { baseFont } from \"./_definitions\";\nimport { slideDown } from \"./_animations\";\n\nconst SmartMenu = styled.nav`\n  animation: 0.7s ease-out 0s 1 ${slideDown};\n  position: absolute;\n  left: 10vw;\n  top: 3.2rem;\n  transition: 0.7s;\n  width: 80vw;\n  height: 2rem;\n  font-family: ${baseFont};\n  font-weight: 300;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-transform: uppercase;\n  user-select: none;\n\n  @media (max-width: 435px) {\n    top: 4.5rem;\n    width: 100vw;\n    left: 0;\n  }\n`;\n\nexport default SmartMenu;\n","import React from \"react\";\nimport { FaSyncAlt, FaEye, FaEyeSlash, FaFilter, FaUser } from \"react-icons/fa\";\nimport { CurrentUser } from \"../types\";\n\nimport SmartButton from \"./SmartButton\";\nimport Style from \"../styles/SmartMenu\";\n\nconst buttonElement = (props: {\n  element: any;\n  mode: string;\n  accent: boolean;\n  function: (arg0?: string) => void;\n}) => {\n  return (\n    <SmartButton\n      accent={props.accent}\n      mode={props.mode}\n      function={props.function}\n    >\n      {props.element}\n    </SmartButton>\n  );\n};\n\nconst SmartMenu = (props: {\n  read: boolean;\n  toggleRead: () => void;\n  refresh: () => void;\n  moduleToggle: (arg0?: string) => void;\n  mode: string;\n  showFilter: boolean;\n  toggleFilter: () => void;\n}) => {\n  // homeButton\n  let homeButton = buttonElement({\n    element: props.mode === \"post\" ? \"BACK\" : \"HOME\",\n    mode: \"home\",\n    accent: false,\n    function: props.moduleToggle\n  });\n  // sourcesButton\n  let sourcesButton = buttonElement({\n    element: \"SOURCES\",\n    mode: \"sources\",\n    accent: false,\n    function: props.moduleToggle\n  });\n  // showReadButton;\n  let showReadButton =\n    props.mode === \"post\"\n      ? null\n      : buttonElement({\n          element: props.read ? <FaEye /> : <FaEyeSlash />,\n          mode: \"showRead\",\n          accent: props.read,\n          function: props.toggleRead\n        });\n\n  // refreshButton;\n  let refreshButton =\n    props.mode === \"post\"\n      ? null\n      : buttonElement({\n          element: <FaSyncAlt />,\n          mode: \"refresh\",\n          accent: false,\n          function: props.refresh\n        });\n  // filterButton;\n  let filterButton =\n    props.mode === \"post\"\n      ? null\n      : buttonElement({\n          element: <FaFilter />,\n          mode: \"filter\",\n          accent: props.showFilter,\n          function: props.toggleFilter\n        });\n\n  const profileButton = buttonElement({\n    element: <FaUser />,\n    mode: \"profile\",\n    accent: false,\n    function: props.moduleToggle\n  });\n\n  return (\n    <Style>\n      {homeButton}\n      {sourcesButton}\n      {showReadButton}\n      {filterButton}\n      {refreshButton}\n      {profileButton}\n    </Style>\n  );\n  // toggleModule = event => {\n  //   this.props.moduleToggle(event.target.innerText);\n  // };\n  // toggleFilter = () => {\n  //   this.props.toggleFilter();\n  // };\n  // render = () => {\n\n  // let homeBack = \"HOME\";\n\n  // let filter = this.props.showFilter ? (\n  //   <Filter\n  //     list={this.props.sources}\n  //     filterClick={this.props.filterClick}\n  //     toggleFilter={() => this.toggleFilter()}\n  //   />\n  // ) : null;\n  // let filterStyle = this.props.filter ? style.on : style.off;\n  // let filterButton = (\n  //   <button>\n  //     <FaFilter className={filterStyle} onClick={() => this.toggleFilter()} />\n  //   </button>\n  // );\n  // let showHide = (\n  //   <button>\n  //     {this.props.read ? (\n  //       <FaEye onClick={this.props.readToggle} />\n  //     ) : (\n  //       <FaEyeSlash onClick={this.props.readToggle} />\n  //     )}\n  //   </button>\n  // );\n\n  // if (this.props.mode === \"show\") {\n  //   filterButton = null;\n  //   showHide = null;\n  //   homeBack = \"BACK\";\n  // } else if (this.props.mode === \"SOURCES\") {\n  //   showHide = null;\n  //   filterButton = null;\n  // }\n\n  // const homeBackButton = (\n  //   <button className={style.text} onClick={this.toggleModule}>\n  //     {homeBack}\n  //   </button>\n  // );\n  // return (\n  //   <section className={style.smartMenu}>\n  //     {homeBackButton}\n  //     <button className={style.text} onClick={this.toggleModule}>\n  //       SOURCES\n  //     </button>\n  //     <button className={style.text}>PROFILE</button>\n  //     <button>\n  //       <FaSyncAlt onClick={this.props.refresh} className={style.refresh} />\n  //     </button>\n  //     {showHide}\n  //     {filterButton}\n  //     {filter}\n  //   </section>\n  // );\n  // };\n};\nexport default SmartMenu;\n","import React from \"react\";\nimport { FaCheck, FaCheckDouble } from \"react-icons/fa\";\nimport { TiStarFullOutline, TiStarOutline } from \"react-icons/ti\";\n\nimport Line from \"./PostElements/PostLine\";\nimport Footer from \"./PostElements/PostFooter\";\nimport { Post } from \"../store/post/types\";\n\nimport { Card, Title, Text } from \"../styles/PostCard\";\n\nconst PostCard = (props: {\n  post: Post;\n  update: (arg0: any) => void;\n  select: (arg0: any) => void;\n}) => {\n  const text = `${props.post.text.replace(/<(?:.|\\n)*?>/gm, \" \")}...`;\n\n  const starButton = props.post.star ? (\n    <TiStarFullOutline />\n  ) : (\n    <TiStarOutline />\n  );\n  const readButton = props.post.read ? <FaCheckDouble /> : <FaCheck />;\n  return (\n    <Card>\n      <Title\n        onClick={() => {\n          props.select({ id: props.post._id });\n        }}\n      >\n        {props.post.title}\n      </Title>\n      <Line\n      mode='card'\n        source={props.post.source}\n        author={props.post.author}\n        buttons={{ star: starButton, read: readButton }}\n        read={props.post.read}\n        star={props.post.star}\n        update={props.update}\n        id={props.post._id}\n      />\n      <Text\n        onClick={() => {\n          props.select({ id: props.post._id });\n        }}\n      >\n        {text}\n      </Text>\n      <Footer\n        timestamp={props.post.published}\n        readingTime={props.post.readTime}\n      />\n    </Card>\n  );\n};\n\nexport default PostCard;\n","import React from \"react\";\n\nimport PostCard from \"./PostCard\";\nimport { Post } from \"../store/post/types\";\nimport { PostListStyle } from \"../styles/PostCardList\";\n\nconst postCardComponent = (props: {\n  post: Post;\n  update: (arg0: any) => void;\n  select: (arg0: any) => void;\n}) => {\n  return (\n    <PostCard\n      key={props.post._id}\n      post={props.post}\n      update={props.update}\n      select={props.select}\n    />\n  );\n};\n\nconst postCheck = (props: {\n  show: boolean;\n  filter: string;\n  pRead: boolean;\n  pSource: string;\n}) => {\n  if (props.filter) {\n    if (props.show) {\n      return props.pSource === props.filter;\n    } else {\n      return props.pRead === props.show && props.pSource === props.filter;\n    }\n  } else {\n    if (props.show) {\n      return true;\n    } else {\n      return props.pRead === props.show;\n    }\n  }\n};\n\nconst PostCardList = (props: {\n  showRead: boolean;\n  posts: any;\n  selectPost: (arg0: any) => void;\n  update: (arg0: any) => void;\n  filter: string;\n}) => {\n  return (\n    <PostListStyle>\n      {props.posts.map((post: Post) => {\n        const postCall = postCardComponent({\n          post: post,\n          update: props.update,\n          select: props.selectPost\n        });\n        return postCheck({\n          show: props.showRead,\n          filter: props.filter,\n          pRead: post.read,\n          pSource: post.sourceId\n        })\n          ? postCall\n          : null;\n      })}\n    </PostListStyle>\n  );\n};\n\nexport default PostCardList;\n","import React, { Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\n\nimport { Post } from \"../../store/post/types\";\nimport { CurrentUser } from \"../../store/user/types\";\nimport { loadPosts, updatePost, selectPost } from \"../../store/post/actions\";\nimport { loadSources } from \"../../store/source/actions\";\nimport { apiRequest } from \"../../store/user/actions\";\n\nimport { NewQuery } from \"../../types\";\n\nimport Header from \"../../components/Header/Header\";\nimport SmartMenu from \"../../components/SmartMenu\";\nimport Loading from \"../../components/Loading\";\nimport PostCardList from \"../../components/PostCardList\";\nimport ContentS from \"../../styles/Content\";\n\nconst Filter = React.lazy(() => import(\"../../components/Filter\"));\nconst PostShow = React.lazy(() => import(\"../../components/PostShow\"));\nconst SourceCardList = React.lazy(() =>\n  import(\"../../components/SourceCardList\")\n);\nconst Profile = React.lazy(() => import(\"../../components/Profile\"));\n// import Filter from \"../../components/Filter\";\n// import PostShow from \"../../components/PostShow\";\n// import SourceCardList from \"../../components/SourceCardList\";\n// import Profile from \"../../components/Profile\";\n\ninterface props {\n  loadPosts: (arg0?: any) => any;\n  updatePost: (arg0?: any) => any;\n  selectPost: (arg0?: any) => any;\n  loadSources: (arg0?: any) => any;\n  apiRequest: (arg0?: any) => any;\n  currentUser: CurrentUser;\n  signOff: () => void;\n}\n\ninterface Content {\n  refresher: any;\n}\n\ninterface IState {\n  module: string;\n  showRead: boolean;\n  showFilter: boolean;\n  filterId: string;\n  loading: boolean;\n  sources: any[];\n  posts: any[];\n  message: string;\n  showPost: Post;\n}\nconst emptyPost: Post = {\n  _id: \"\",\n  source: \"\",\n  sourceId: \"\",\n  title: \"\",\n  url: \"\",\n  author: \"\",\n  published: new Date(),\n  parsed: new Date(),\n  text: \"\",\n  readTime: 0,\n  pages: 0,\n  read: false,\n  star: false\n};\n\nclass Content extends React.Component<props> {\n  state = {\n    loading: true,\n    module: \"posts\",\n    showRead: false,\n    showFilter: false,\n    filterId: \"\",\n    sources: [],\n    posts: [],\n    message: \"\",\n    showPost: emptyPost\n  };\n\n  componentDidMount() {\n    this.fetchPostsSources();\n    this.refresher = setInterval(this.fetchPostsSources, 10000);\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  loadPosts = (query: NewQuery) => {\n    this.props.loadPosts(query).then((data: any) => {\n      if (data.payload.data.message) {\n        this.setState({\n          posts: [],\n          message: data.payload.data.message,\n          loading: false\n        });\n      } else {\n        this.setState({\n          posts: data.payload.data,\n          loading: false\n        });\n      }\n    });\n  };\n  loadSources = (query: NewQuery) => {\n    this.props.loadSources(query).then((data: any) => {\n      if (data.payload.data.message) {\n        this.setState({\n          sources: [],\n          message: data.payload.data.message,\n          loading: false\n        });\n      } else {\n        this.setState({\n          sources: data.payload.data,\n          loading: false\n        });\n      }\n    });\n  };\n\n  fetchPostsSources = () => {\n    // set queries\n    const postQuery = {\n      token: this.props.currentUser.token,\n      action: [\"post\", \"fetch\"]\n    };\n    const sourceQuery = {\n      token: this.props.currentUser.token,\n      action: [\"source\", \"fetch\"]\n    };\n    // run requests\n    this.loadPosts(postQuery);\n    this.loadSources(sourceQuery);\n  };\n\n  showModule = (module: string = \"posts\") => {\n    console.log(\"show module - \" + module);\n    this.setState({ module: module });\n  };\n  toggleShowRead = () => {\n    this.setState({ showRead: !this.state.showRead });\n  };\n  toggleShowFilter = () => {\n    this.setState({ showFilter: !this.state.showFilter });\n  };\n\n  // update sources & posts\n  chooseFilter = (id: string) => {\n    this.toggleShowFilter();\n    if (id === \"clear\") {\n      this.setState({\n        filterId: \"\"\n      });\n    } else {\n      this.setState({ filterId: id });\n    }\n  };\n\n  handleRefreshClick = () => {\n    // set query object\n    const query = {\n      action: [\"post\", \"refresh\"],\n      fields: this.props.currentUser\n    };\n    // request redux action to query API\n    this.props.apiRequest(query).then((res: any) => {\n      const response = res.payload.data;\n      if (response.authed) {\n        // setUserEmail(cProps.email);\n        // setUserToken(cProps.token);\n        // toggleAuth();\n      }\n      // setLoading(false);\n    });\n  };\n  selectPostToShow = (props: { id: string }) => {\n    // set query object\n    const query = {\n      action: [\"post\", \"show\"],\n      id: props.id,\n      fields: this.props.currentUser\n    };\n    // request redux action to query API\n    this.props.apiRequest(query).then((res: any) => {\n      const response = res.payload.data;\n      if (response.authed) {\n        this.showModule(\"post\");\n        this.setState({\n          showPost: response.post\n        });\n      }\n    });\n  };\n\n  updateStatePosts = (props: { id: string; field: string }) => {\n    const newPosts = this.state.posts;\n    let oldPostState;\n    newPosts\n      .filter((post: Post) => post._id === props.id)\n      .forEach((post: Post) => {\n        if (props.field === \"read\") {\n          oldPostState = post.read;\n          post.read = !post.read;\n        } else {\n          oldPostState = post.star;\n          post.star = !post.star;\n        }\n      });\n    this.setState({ posts: newPosts });\n    return oldPostState;\n  };\n  updatePostAction = (props: { field: string; id: string }) => {\n    const oldState = this.updateStatePosts({\n      id: props.id,\n      field: props.field\n    });\n    let fields: { [index: string]: boolean } = {};\n    fields[`${props.field}`] = !oldState;\n\n    const query = {\n      action: [\"post\", \"update\"],\n      id: props.id,\n      fields\n    };\n\n    this.props\n      .updatePost(query)\n      .then((response: { [index: string]: string }) => {\n        this.setState({ message: response.statusText });\n      });\n  };\n\n  render() {\n    const smartMenu = (\n      <SmartMenu\n        read={this.state.showRead}\n        toggleRead={this.toggleShowRead}\n        refresh={this.handleRefreshClick}\n        moduleToggle={this.showModule}\n        mode={this.state.module}\n        showFilter={this.state.filterId !== \"\"}\n        toggleFilter={this.toggleShowFilter}\n      />\n    );\n\n    const filter =\n      this.state.showFilter && this.state.sources ? (\n        <Suspense fallback={<Loading />}>\n          <Filter\n            toggle={this.toggleShowFilter}\n            list={this.state.sources}\n            choose={this.chooseFilter}\n            id={this.state.filterId}\n          />\n        </Suspense>\n      ) : null;\n    let postsList;\n    if (this.state.message) {\n    } else if (this.state.loading) {\n      postsList = <Loading />;\n    } else {\n      postsList = (\n        <PostCardList\n          showRead={this.state.showRead}\n          posts={this.state.posts}\n          selectPost={this.selectPostToShow}\n          update={this.updatePostAction}\n          filter={this.state.filterId}\n        />\n      );\n    }\n    const postShow = (\n      <Suspense fallback={<Loading />}>\n        <PostShow post={this.state.showPost} update={this.updatePostAction} />\n      </Suspense>\n    );\n\n    const sourcesList = (\n      <Suspense fallback={<Loading />}>\n        <SourceCardList\n          sources={this.state.sources}\n          //  addSource={this.props.addSource}\n          //  deleteSource={this.deleteSource}\n          //  updateSource={this.props.updateSource}\n        />\n      </Suspense>\n    );\n    const profile = (\n      <Suspense fallback={<Loading />}>\n        <Profile\n          currentUser={this.props.currentUser}\n          signOff={this.props.signOff}\n        />\n      </Suspense>\n    );\n    return (\n      <ContentS data-test=\"app\">\n        <Header />\n        {smartMenu}\n        {filter}\n        {this.state.module === \"posts\" ? postsList : null}\n        {this.state.module === \"post\" ? postShow : null}\n        {this.state.module === \"sources\" ? sourcesList : null}\n        {this.state.module === \"profile\" ? profile : null}\n      </ContentS>\n    );\n  }\n}\nconst mapStateToProps = (state: AppState) => ({\n  // posts: state.posts,\n  // sources: state.sources,\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadPosts, updatePost, selectPost, loadSources, apiRequest }\n)(Content);\n","import {\n  // SystemState,\n  SET_POSTS,\n  Query,\n  PostId,\n  UPDATE_POST,\n  SELECT_POST\n} from \"./types\";\nimport { NewQuery } from \"../../types\";\n\nimport axios from \"axios\";\n\n// const apiUrl = `${process.env.REACT_APP_SERVER}/api`;\n\nexport function loadPosts(query: NewQuery) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: SET_POSTS,\n    payload: promise\n  };\n}\n\nexport function updatePost(query: Query) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: UPDATE_POST,\n    payload: promise\n  };\n}\n\nexport function selectPost(postId: PostId) {\n  const promise = axios\n    .get(`/post/${postId}`)\n    .then(response => response)\n    .catch(error => error);\n  return {\n    type: SELECT_POST,\n    payload: promise\n  };\n}\n\n// export function updateSource(query) {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({ query })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"UPDATE_SOURCE\",\n//     payload: promise\n//   };\n// }\n// export function refreshPosts() {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({\n//       query: {\n//         action: [\"post\", \"refresh\"]\n//       }\n//     })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"REFRESH_POSTS\",\n//     payload: promise\n//   };\n// }\n// export function addSource(query) {\n//   const promise = fetch(apiUrl, {\n//     method: \"POST\",\n//     headers: {\n//       Accept: \"application/json\",\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({ query })\n//   })\n//     .then(r => r.json())\n//     .catch(e => {\n//       return e;\n//     });\n\n//   return {\n//     type: \"ADD_SOURCE\",\n//     payload: promise\n//   };\n// }\n// export function deleteSource(query) {\n//   if (query.action && query.id) {\n//     const promise = fetch(apiUrl, {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify({ query })\n//     })\n//       .then(r => r)\n//       // r.json())\n//       .catch(e => {\n//         return e;\n//       });\n\n//     return {\n//       type: \"DELETE_SOURCE\",\n//       payload: promise\n//     };\n//   } else {\n//     return \"Missing action and/or id\";\n//   }\n// }\n\n// export function setSources() {\n//   const promise = fetch(`${apiUrl}/sources`).then(r => r.json());\n//   return {\n//     type: \"SET_SOURCES\",\n//     payload: promise\n//   };\n// }\n\n// export function selectPost(postId) {\n//   const promise = fetch(`${apiUrl}/post/${postId}`).then(r => r.json());\n//   return {\n//     type: \"SELECT_POST\",\n//     payload: promise\n//   };\n// }\n\n// export function sourceCreateModule(status) {\n//   return {\n//     type: \"SHOW_MODULE\",\n//     payload: status\n//   };\n// }\n","import {\n  SET_SOURCES\n  // Query,\n  // PostId,\n  // UPDATE_POST,\n  // SELECT_POST\n} from \"./types\";\nimport axios from \"axios\";\nimport { NewQuery } from \"../../types\";\n\n// const apiUrl = `${process.env.REACT_APP_SERVER}/api`;\n\nexport function loadSources(query: NewQuery) {\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n  return {\n    type: SET_SOURCES,\n    payload: promise\n  };\n}\n"],"sourceRoot":""}