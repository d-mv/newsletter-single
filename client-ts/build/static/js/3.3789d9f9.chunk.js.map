{"version":3,"sources":["store/post/actions.ts","components/Header/Title.tsx","components/Timestamp.tsx","components/Header/Header.tsx","components/SmartMenu/SmartButton.tsx","components/SmartMenu/SmartMenu.tsx","components/Post/PostCard.tsx","components/Post/PostCardList.tsx","containers/Content/Content.tsx","store/app/actions.ts","styles/PostCard.module.scss","store/source/actions.ts","modules/dateTime.ts","components/Post/PostLine.tsx","components/Post/PostButton.tsx","components/Post/PostFooter.tsx","styles/Title.module.scss","styles/Timestamp.module.scss","styles/Header.module.scss","styles/SmartButton.module.scss","styles/SmartMenu.module.scss","styles/PostButton.module.scss","styles/PostCardList.module.scss"],"names":["promise","query","axios","post","then","response","catch","error","selectPost","props","token","action","id","payload","data","type","SELECT_POST","Title","react_default","a","createElement","className","style","header","Timestamp","title","dateTime","date","Header","Header_Title","components_Timestamp","Date","connect","state","thisUser","currentUser","module","showRead","showFilter","apiRequest","showModule","setMessage","toggleShowRead","current","TOGGLE_SHOW_READ","toggleShowFilter","styleClass","_React$useState","React","useState","_React$useState2","Object","slicedToArray","refresh","toggleRefresh","handleClick","cProps","child","mode","message","handleRefreshClick","func","smartRotate","smartRefresh","accent","smartAccented","smart","function","aria-label","onClick","children","buttonElement","SmartButton","element","filterSourceId","homeButton","sourcesButton","showReadButton","index_esm","refreshButton","filterButton","profileButton","menu","text","concat","replace","starButton","star","ti_index_esm","readButton","read","_id","card","PostLine","source","author","buttons","update","PostFooter","timestamp","published","readingTime","readTime","Filter","lazy","__webpack_require__","e","bind","sources","filter","react","fallback","Loading","list","posts","map","component","Post_PostCard","key","sourceId","Central","PostShow","SourceCardList","Profile","SourceEdit","Content","loading","addSource","fetchPostsSources","_this","loadPosts","setState","loadSources","updateStatePosts","UProps","oldPostState","newPosts","forEach","field","newPost","updatePostAction","AProps","fields","updatePost","updateSourceInState","newSources","name","url","homepage","updateSourceAction","deleteAction","createSource","cSprops","newSource","newSourceToArray","newState","toConsumableArray","res","toggleShowAddSource","profile","submit","close","postShow","showPost","checkIfSourcesEmpty","length","checkIfPostsSourcesEmpty","messageComponent","postCardListComponent","Post_PostCardList","noSourcesListComponent","sourcesListComponent","popUpMessageComponent","this","refresher","setInterval","window","scrollTo","clearInterval","postsList","_this2","setTimeout","sourcesList","messageToShow","data-test","components_Header_Header","components_SmartMenu_SmartMenu","Component","LOAD_POSTS","UPDATE_POST","d","__webpack_exports__","_types__WEBPACK_IMPORTED_MODULE_0__","SHOW_MODULE","SET_MESSAGE","TOGGLE_SHOW_FILTER","exports","scaleUp","line","footer","wrapper","sub","slideInFromTop","slideInFromLeft","growLarge","slideDown","rotate","disappear","setFilter","axios__WEBPACK_IMPORTED_MODULE_1__","axios__WEBPACK_IMPORTED_MODULE_1___default","n","LOAD_SOURCES","SET_FILTER","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","dateFromDb","keys","timeToDisplay","getHours","getMinutes","getDay","getDate","getMonth","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_PostButton__WEBPACK_IMPORTED_MODULE_1__","_styles_PostCard_module_scss__WEBPACK_IMPORTED_MODULE_2__","_styles_PostCard_module_scss__WEBPACK_IMPORTED_MODULE_2___default","status","_styles_PostButton_module_scss__WEBPACK_IMPORTED_MODULE_1__","_styles_PostButton_module_scss__WEBPACK_IMPORTED_MODULE_1___default","PostButton","onStatus","offStatus","_modules_dateTime__WEBPACK_IMPORTED_MODULE_1__","parsed","span","button","modal","central","display"],"mappings":"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","file":"static/js/3.3789d9f9.chunk.js","sourcesContent":["import {\n  SET_POSTS, LOAD_POSTS,\n  UPDATE_POST, TOGGLE_SHOW_READ,\n  SELECT_POST\n} from \"./types\";\nimport { NewQuery } from \"../../types\";\n\nimport axios from \"axios\";\n\nconst promise = (query: NewQuery) => (\n  axios\n    .post(\"/\", {\n      query\n    }).then(response => response)\n    .catch(error => error))\n\nexport function loadPosts(token:string) {\n  const query = {\n  token: token,\n  action: [\"post\", \"fetch\"]\n};\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: LOAD_POSTS,\n    payload: promise\n  };\n}\n\nexport function setPosts(posts: any) {\n  return {\n    type: SET_POSTS,\n    payload: posts\n  };\n}\n\nexport function toggleShowRead(current: boolean) {\n  return {\n    type: TOGGLE_SHOW_READ,\n    payload: !current\n  };\n}\n\nexport function updatePost(props: { token: string, id: string, fields: any }) {\n  const query = {\n    token: props.token,\n    action: [\"post\", \"update\"],\n    id: props.id,\n    fields: props.fields\n  };\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then((response:any) => response)\n    .catch(error => error);\n\n  return {\n    type: UPDATE_POST,\n    payload: promise\n  };\n}\n\nexport function selectPost(props: { token: string, id: string }) {\n  const query = {\n    token: props.token,\n    action: [\"post\", \"show\"],\n    id: props.id\n  };\n  const request: any = promise(query)\n    .then((response: any) => response.data.post || {})\n    .catch((error: any) => error);\n\n  let payload = request\n  if (props === { token: '', id: '' }) {\n    return {\n      type: '',\n      payload: payload\n    };\n  } else {\n    return {\n      type: SELECT_POST,\n      payload: payload\n    };\n  }\n}\n","import React from \"react\";\n\nimport style from \"../../styles/Title.module.scss\";\n\nconst Title = () => {\n  return <h1 className={style.header}>The Newsletter</h1>;\n};\n\nexport default Title;\n","import React from \"react\";\n\nimport dateTime from \"../modules/dateTime\";\n\nimport style from \"../styles/Timestamp.module.scss\";\n\nconst Timestamp = (props: { date: Date }) => {\n  return <h3 className={style.title}>{dateTime(props.date)}</h3>;\n};\n\nexport default Timestamp;\n","import React from \"react\";\n\nimport Title from \"./Title\";\nimport DateTime from '../Timestamp'\nimport style from \"../../styles/Header.module.scss\";\n\nconst Header = () => {\n  return (\n    <header className={style.header}>\n      <Title />\n      <DateTime date={new Date()} />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\n\nimport { apiRequest } from \"../../store/user/actions\";\nimport { toggleShowRead, selectPost } from \"../../store/post/actions\";\nimport {\n  showModule,\n  setMessage,\n  toggleShowFilter\n} from \"../../store/app/actions\";\n\nimport style from \"../../styles/SmartButton.module.scss\";\n\nconst Button = (props: {\n  children: any;\n  mode: string;\n  accent: boolean;\n  function?: () => void;\n  apiRequest: (arg0?: any) => any;\n  thisUser: any;\n  module: string;\n  showRead: boolean;\n  showModule: (arg0: string) => any;\n  setMessage: (arg0: string) => any;\n  selectPost: (arg0: { token: string; id: string }) => any;\n\n  showFilter: boolean;\n  toggleShowFilter: (arg0: boolean) => void;\n\n  toggleShowRead: (current: boolean) => { type: string; payload: boolean };\n}) => {\n  const [refresh, toggleRefresh] = React.useState(false);\n\n  const handleRefreshClick = () => {\n    // start icon rotation\n    toggleRefresh(true);\n    // set query object\n    const query = {\n      token: props.thisUser.token,\n      action: [\"post\", \"refresh\"]\n    };\n    // request redux action to query API\n    props.apiRequest(query).then((response: any) => {\n      // stop icon rotation\n      toggleRefresh(false);\n      // save response message\n      props.setMessage(response.payload.data.message);\n    });\n  };\n\n  const handleClick = (cProps: { mode: string; child: any; func: any }) => {\n    if (cProps.child === \"BACK\" || cProps.child === \"HOME\") {\n      // if back -clear post from state\n      switch (cProps.child) {\n        case \"BACK\":\n          props.selectPost({ token: \"\", id: \"\" });\n          break;\n      }\n      props.showModule(\"posts\");\n    } else if (cProps.child === \"SOURCES\") {\n      props.showModule(\"sources\");\n    } else if (props.mode === \"profile\") {\n      props.showModule(\"profile\");\n    } else if (props.mode === \"refresh\") {\n      handleRefreshClick();\n    } else if (props.mode === \"showRead\") {\n      props.toggleShowRead(props.showRead);\n    } else if (props.mode === \"filter\") {\n      props.toggleShowFilter(props.showFilter);\n    } else {\n      cProps.func();\n    }\n  };\n\n  let styleClass;\n  if (props.mode === \"refresh\") {\n    styleClass = refresh ? style.smartRotate : style.smartRefresh;\n  } else if (props.accent) {\n    styleClass = style.smartAccented;\n  } else {\n    styleClass = style.smart;\n  }\n  const func = props.function ? props.function : null;\n  return (\n    <button\n      className={styleClass}\n      aria-label={props.mode}\n      onClick={() =>\n        handleClick({\n          mode: props.mode,\n          child: props.children,\n          func: func\n        })\n      }\n    >\n      {props.children}\n    </button>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  thisUser: state.currentUser,\n  module: state.module,\n  showRead: state.showRead,\n  showFilter: state.showFilter\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    apiRequest,\n    showModule,\n    setMessage,\n    toggleShowRead,\n    selectPost,\n    toggleShowFilter\n  }\n)(Button);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FaSyncAlt, FaEye, FaEyeSlash, FaFilter, FaUser } from \"react-icons/fa\";\n\nimport { AppState } from \"../../store\";\n\nimport SmartButton from \"./SmartButton\";\n\nimport style from \"../../styles/SmartMenu.module.scss\";\n\nconst buttonElement = (props: {\n  element: any;\n  mode: string;\n  accent: boolean;\n  function?: (arg0?: string) => void;\n}) => {\n  return (\n    <SmartButton\n      accent={props.accent}\n      mode={props.mode}\n      function={props.function}\n    >\n      {props.element}\n    </SmartButton>\n  );\n};\n\nconst SmartMenu = (props: {\n  showRead: boolean;\n  filterSourceId: string;\n  // toggleFilter: () => void;\n  module: string;\n}) => {\n  // homeButton\n  let homeButton = buttonElement({\n    element: props.module === \"post\" ? \"BACK\" : \"HOME\",\n    mode: \"home\",\n    accent: false\n  });\n  // sourcesButton\n  let sourcesButton = buttonElement({\n    element: \"SOURCES\",\n    mode: \"sources\",\n    accent: false\n  });\n  // showReadButton;\n  let showReadButton =\n    props.module === \"posts\"\n      ? buttonElement({\n          element: props.showRead ? <FaEye /> : <FaEyeSlash />,\n          mode: \"showRead\",\n          accent: props.showRead\n        })\n      : null;\n\n  // refreshButton;\n  let refreshButton =\n    props.module === \"posts\"\n      ? buttonElement({\n          element: <FaSyncAlt />,\n          mode: \"refresh\",\n          accent: false\n        })\n      : null;\n  // filterButton;\n  let filterButton =\n    props.module === \"posts\"\n      ? buttonElement({\n          element: <FaFilter />,\n          mode: \"filter\",\n          accent: props.filterSourceId !== ''\n        })\n      : null;\n\n  const profileButton = buttonElement({\n    element: <FaUser />,\n    mode: \"profile\",\n    accent: false\n  });\n\n  return (\n    <nav className={style.menu}>\n      {homeButton}\n      {sourcesButton}\n      {showReadButton}\n      {filterButton}\n      {refreshButton}\n      {profileButton}\n    </nav>\n  );\n};\nconst mapStateToProps = (state: AppState) => ({\n  module: state.module,\n  showRead: state.showRead,\n  filterSourceId: state.filterSourceId\n});\n\nexport default connect(mapStateToProps)(SmartMenu);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../../store\";\nimport { selectPost } from \"../../store/post/actions\";\nimport { showModule } from \"../../store/app/actions\";\n\nimport { FaCheck, FaCheckDouble } from \"react-icons/fa\";\nimport { TiStarFullOutline, TiStarOutline } from \"react-icons/ti\";\n\nimport Line from \"./PostLine\";\nimport Footer from \"./PostFooter\";\nimport { Post } from \"../../store/post/types\";\n\nimport style from \"../../styles/PostCard.module.scss\";\n\nconst PostCard = (props: {\n  post: Post;\n  update: (arg0: any) => void;\n  thisUser: any;\n  showModule: (arg0: string) => void;\n  selectPost: (arg0: { token: string; id: string }) => void;\n}) => {\n  const text = `${props.post.text.replace(/<(?:.|\\n)*?>/gm, \" \")}...`;\n\n  const starButton = props.post.star ? (\n    <TiStarFullOutline />\n  ) : (\n    <TiStarOutline />\n  );\n  const readButton = props.post.read ? <FaCheckDouble /> : <FaCheck />;\n\n  const selectPost = () => {\n    props.selectPost({ token: props.thisUser.token, id: props.post._id });\n    props.showModule(\"post\");\n  };\n\n  return (\n    <article className={style.card}>\n      <h3\n        className={style.title}\n        onClick={() => {\n          selectPost();\n        }}\n      >\n        {props.post.title}\n      </h3>\n      <Line\n        mode=\"card\"\n        source={props.post.source}\n        author={props.post.author}\n        buttons={{ star: starButton, read: readButton }}\n        read={props.post.read}\n        star={props.post.star}\n        update={props.update}\n        id={props.post._id}\n      />\n      <main\n        className={style.text}\n        onClick={() => {\n          selectPost();\n        }}\n      >\n        {text}\n      </main>\n      <Footer\n        timestamp={props.post.published}\n        readingTime={props.post.readTime}\n      />\n    </article>\n  );\n};\n\n// export default PostCard;\n\nconst mapStateToProps = (state: AppState) => ({\n  thisUser: state.currentUser\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    selectPost,\n    showModule\n  }\n)(PostCard);\n","import React, { Suspense } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../../store\";\nimport { Post } from \"../../store/post/types\";\n\nimport Loading from \"../../components/Loading\";\nimport PostCard from \"./PostCard\";\n\nimport style from \"../../styles/PostCardList.module.scss\";\n\nconst Filter = React.lazy(() => import(\"../../components/Filter\"));\n\nconst PostCardList = (props: {\n  showRead: boolean;\n  posts: any;\n  filterSourceId: string;\n  showFilter: boolean;\n  sources: any;\n  update: (arg0: any) => any;\n}) => {\n  const filter =\n    props.showFilter && props.sources ? (\n      <Suspense fallback={<Loading />}>\n        <Filter />\n      </Suspense>\n    ) : null;\n\n  return (\n    <div className={style.list}>\n      {/* show filter */}\n      {filter}\n      {/* show cards */}\n      {props.posts.map((post: Post) => {\n        // set the component\n        const component = (\n          <PostCard key={post._id} post={post} update={props.update} />\n        );\n        // if source filter ON\n        if (props.filterSourceId) {\n          // if SHOW READ is ON\n          if (props.showRead) {\n            return post.sourceId === props.filterSourceId ? component : null;\n          } else {\n            // if SHOW READ is OFF\n            return post.read === props.showRead &&\n              post.sourceId === props.filterSourceId\n              ? component\n              : null;\n          }\n          // if source filter OFF\n        } else {\n          if (props.showRead) {\n            return component;\n          } else {\n            return post.read === props.showRead ? component : null;\n          }\n        }\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  showRead: state.showRead,\n  sources: state.sources,\n  filterSourceId: state.filterSourceId,\n  showFilter: state.showFilter\n});\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(PostCardList);\n","import React, { Suspense } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../../store\";\nimport { Post } from \"../../store/post/types\";\nimport { loadPosts, updatePost } from \"../../store/post/actions\";\nimport { loadSources } from \"../../store/source/actions\";\nimport { apiRequest } from \"../../store/user/actions\";\nimport { setMessage } from \"../../store/app/actions\";\n\nimport Header from \"../../components/Header/Header\";\nimport SmartMenu from \"../../components/SmartMenu/SmartMenu\";\nimport Loading from \"../../components/Loading\";\nimport PostCardList from \"../../components/Post/PostCardList\";\n\nimport \"../../styles/_ui.scss\";\n\n// lazy loading\nconst Central = React.lazy(() => import(\"../../components/Central\"));\nconst PostShow = React.lazy(() => import(\"../../components/Post/PostShow\"));\nconst SourceCardList = React.lazy(() =>\n  import(\"../../components/Source/SourceCardList\")\n);\nconst Profile = React.lazy(() => import(\"../../components/Profile\"));\nconst SourceEdit = React.lazy(() =>\n  import(\"../../components/Source/SourceEdit\")\n);\n\ninterface props {\n  loadPosts: (arg0?: any) => any;\n  updatePost: (arg0?: any) => any;\n  loadSources: (arg0?: any) => any;\n  apiRequest: (arg0?: any) => any;\n  thisUser: any;\n  module: string;\n  message: string;\n  setMessage: (arg0: string) => any;\n  showPost: {};\n  sources: any;\n}\n\ninterface Content {\n  refresher: any;\n}\n\nclass Content extends React.Component<props> {\n  state = {\n    loading: true,\n    sources: [],\n    posts: [],\n    addSource: false\n  };\n\n  // * get posts & sources from API\n  componentDidMount() {\n    this.fetchPostsSources();\n    this.refresher = setInterval(this.fetchPostsSources, 10000);\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchPostsSources = () => {\n    this.props.loadPosts(this.props.thisUser.token).then((data: any) => {\n      this.setState({\n        posts: data.payload.data,\n        loading: false\n      });\n    });\n    this.props.loadSources(this.props.thisUser.token).then((data: any) => {\n      this.setState({\n        sources: data.payload.data,\n        loading: false\n      });\n    });\n  };\n  // * end-of-get posts/sources\n\n  // ! refactor\n  updateStatePosts = (UProps: { id: string; field: string }) => {\n    const newPosts = this.state.posts;\n    let oldPostState;\n    newPosts\n      .filter((post: Post) => post._id === UProps.id)\n      .forEach((post: Post) => {\n        if (UProps.field === \"read\") {\n          oldPostState = post.read;\n          post.read = !post.read;\n        } else {\n          oldPostState = post.star;\n          post.star = !post.star;\n        }\n      });\n    const update: any[] = newPosts.map((post: any) => {\n      let newPost = post;\n      if (post._id === UProps.id) {\n        if (UProps.field === \"read\") {\n          newPost.read = !post.read;\n        } else {\n          newPost.star = !post.star;\n        }\n      }\n      return newPost;\n    });\n    this.setState({ posts: update });\n    return oldPostState;\n  };\n  updatePostAction = (AProps: { field: string; id: string }) => {\n    const update = this.updateStatePosts({\n      id: AProps.id,\n      field: AProps.field\n    });\n    let fields: {\n      [index: string]: boolean;\n    } = {};\n    fields[`${AProps.field}`] = !update;\n\n    const query = {\n      token: this.props.thisUser.token,\n      id: AProps.id,\n      fields: fields\n    };\n    this.props.updatePost(query).then((response: any) => {\n      const message = response.payload.data.message;\n      this.props.setMessage(message);\n    });\n  };\n\n  updateSourceInState = (props: { [index: string]: string }) => {\n    const newSources = this.state.sources;\n    // let oldSourceElement;\n    newSources\n      .filter((source: any) => source._id === props._id)\n      .forEach((source: any) => {\n        source.name = props.name;\n        source.url = props.url;\n        source.homepage = props.homepage;\n      });\n    this.setState({ source: newSources });\n  };\n\n  updateSourceAction = (props: { [index: string]: string }) => {\n    const query = {\n      token: this.props.thisUser.token,\n      action: [\"source\", \"update\"],\n      fields: props\n    };\n\n    this.props.apiRequest(query).then((response: any) => {\n      const message = response.payload.data.message;\n      this.props.setMessage(message);\n      this.updateSourceInState(props);\n    });\n  };\n  // ! end-of-refactor\n  // delete source/post\n  deleteAction = (props: { [index: string]: string }) => {};\n\n  createSource = (cSprops: any) => {\n    const query = {\n      token: this.props.thisUser.token,\n      action: [\"source\", \"create\"],\n      fields: cSprops\n    };\n    let newSource = cSprops;\n    newSource._id = \"012345\";\n    const newSourceToArray = [newSource];\n    const newState = [...this.state.sources, ...newSourceToArray];\n    // request redux action to query API\n    this.props.apiRequest(query).then((res: any) => {\n      const message = res.payload.data.message;\n      this.props.setMessage(message);\n      this.setState({\n        addSource: false,\n        sources: newState\n      });\n    });\n  };\n\n  toggleShowAddSource = () => {\n    this.setState({ addSource: !this.state.addSource });\n  };\n\n  // ui elements\n  profile = (\n    <Suspense fallback={<Loading />}>\n      <Profile />\n    </Suspense>\n  );\n  addSource = (\n    <Suspense fallback={<Loading />}>\n      <SourceEdit submit={this.createSource} close={this.toggleShowAddSource} />\n    </Suspense>\n  );\n\n  postShow = (showPost: Post) => (\n    <Suspense fallback={<Loading />}>\n      <PostShow post={showPost} update={this.updatePostAction} />\n    </Suspense>\n  );\n  checkIfSourcesEmpty = () => {\n    const check =\n      this.props.sources === [] || this.props.sources.length === 0\n        ? true\n        : false;\n    return check;\n  };\n  checkIfPostsSourcesEmpty = () => {\n    let message;\n    if (\n      this.checkIfSourcesEmpty() &&\n      (this.state.posts === [] || this.state.posts.length === 0)\n    ) {\n      message = \"There are no sources configured.\";\n    } else if (this.state.posts === [] || this.state.posts.length === 0) {\n      message = \"The are no posts for now.\";\n    }\n    return message;\n  };\n\n  messageComponent = (message: string) => (\n    <Suspense fallback={<Loading />}>\n      <Central message={message} />\n    </Suspense>\n  );\n\n  postCardListComponent = () => (\n    <PostCardList posts={this.state.posts} update={this.updatePostAction} />\n  );\n\n  noSourcesListComponent = () => (\n    <Suspense fallback={<Loading />}>\n      <Central\n        message=\"The are no sources for now.\"\n        function={this.toggleShowAddSource}\n      >\n        <button className=\"button\" aria-label=\"Add source\">\n          Add source\n        </button>\n      </Central>\n    </Suspense>\n  );\n\n  sourcesListComponent = () => (\n    <Suspense fallback={<Loading />}>\n      <SourceCardList\n        sources={this.state.sources}\n        submit={this.createSource}\n        update={this.updateSourceAction}\n      />\n    </Suspense>\n  );\n\n  popUpMessageComponent = () => (\n    <section className=\"message\">{this.props.message}</section>\n  );\n\n  render() {\n    if (this.props.message) {\n      setTimeout(() => this.props.setMessage(\"\"), 3000);\n    }\n    // list of posts\n    let postsList;\n    const messageToShow = this.checkIfPostsSourcesEmpty();\n\n    if (this.state.loading) {\n      postsList = <Loading />;\n    } else if (messageToShow) {\n      postsList = this.messageComponent(messageToShow);\n    } else {\n      postsList = this.postCardListComponent();\n    }\n    //  list of sources\n    let sourcesList;\n    if (this.checkIfSourcesEmpty()) {\n      sourcesList = this.noSourcesListComponent();\n    } else {\n      sourcesList = this.sourcesListComponent();\n    }\n\n    return (\n      <main data-test=\"app\">\n        <Header />\n        {<SmartMenu />}\n        {this.props.message ? this.popUpMessageComponent() : null}\n        {this.props.module === \"posts\" ? postsList : null}\n        {\"_id\" in this.props.showPost\n          ? this.postShow(this.props.showPost)\n          : null}\n        {this.props.module === \"sources\" ? sourcesList : null}\n        {this.state.addSource ? this.addSource : null}\n        {this.props.module === \"profile\" ? this.profile : null}\n      </main>\n    );\n  }\n}\nconst mapStateToProps = (state: AppState) => ({\n  sources: state.sources,\n  thisUser: state.currentUser,\n  module: state.module,\n  message: state.message,\n  showPost: state.showPost\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    loadPosts,\n    updatePost,\n    loadSources,\n    apiRequest,\n    setMessage\n  }\n)(Content);\n","import { SHOW_MODULE, SET_MESSAGE, TOGGLE_SHOW_FILTER } from \"./types\";\n\nexport function showModule(module: string) {\n  return {\n    type: SHOW_MODULE,\n    payload: module\n  };\n}\nexport function setMessage(message: string) {\n  return {\n    type: SET_MESSAGE,\n    payload: message\n  };\n}\nexport function toggleShowFilter(filter:boolean) {\n  return {\n    type: TOGGLE_SHOW_FILTER,\n    payload: !filter\n  };\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PostCard_card__2J-H1\",\"scaleUp\":\"PostCard_scaleUp__3oKww\",\"text\":\"PostCard_text__1jLmP\",\"title\":\"PostCard_title__3Vi12\",\"line\":\"PostCard_line__1mgL2\",\"footer\":\"PostCard_footer__1aTwF\",\"wrapper\":\"PostCard_wrapper__2E9fT\",\"sub\":\"PostCard_sub__2hKdg\",\"slideInFromTop\":\"PostCard_slideInFromTop__2REAI\",\"slideInFromLeft\":\"PostCard_slideInFromLeft__FabEc\",\"growLarge\":\"PostCard_growLarge__g5rIF\",\"slideDown\":\"PostCard_slideDown__XTYyj\",\"rotate\":\"PostCard_rotate__2m0Yg\",\"disappear\":\"PostCard_disappear__37Is8\"};","import { LOAD_SOURCES, SET_SOURCES, SET_FILTER } from \"./types\";\nimport axios from \"axios\";\n\nexport function loadSources(token: string) {\n  const query = {\n    token: token,\n    action: [\"source\", \"fetch\"]\n  };\n  const promise = axios\n    .post(\"/\", {\n      query\n    })\n    .then(response => response)\n    .catch(error => error);\n\n  return {\n    type: LOAD_SOURCES,\n    payload: promise\n  };\n}\n\nexport function setSources(sources: any) {\n  return {\n    type: SET_SOURCES,\n    payload: sources\n  };\n}\n\nexport function setFilter(id: string) {\n  return {\n    type: SET_FILTER,\n    payload: id\n  };\n}\n","const months: { [index: number]: string } = {\n  1: \"Jan\",\n  2: \"Feb\",\n  3: \"Mar\",\n  4: \"Apr\",\n  5: \"May\",\n  6: \"Jun\",\n  7: \"Jul\",\n  8: \"Aug\",\n  9: \"Sep\",\n  10: \"Oct\",\n  11: \"Nov\",\n  12: \"Dec\"\n};\nconst daysOfWeek: { [index: number]: string } = {\n  1: \"Sun\",\n  2: \"Mon\",\n  3: \"Tue\",\n  4: \"Wed\",\n  5: \"Thu\",\n  6: \"Fri\",\n  7: \"Sat\"\n};\n\nconst dateTime = (props: Date) => {\n  let dateFromDb = new Date();\n  if (!Object.keys(props).length) {\n    dateFromDb = new Date(props);\n  }\n  let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n  if (dateFromDb.getHours() > 12) {\n    timeToDisplay = `${dateFromDb.getHours() -\n      12}:${dateFromDb.getMinutes()} pm`;\n  }\n  return `${daysOfWeek[dateFromDb.getDay() + 1]} ${dateFromDb.getDate()} ${\n    months[dateFromDb.getMonth() + 1]\n  } at ${timeToDisplay}`;\n};\n\nexport default dateTime;\n","import React from \"react\";\n\nimport Button from \"./PostButton\";\n\nimport style from \"../../styles/PostCard.module.scss\";\n\nconst PostLine = (props: {\n  mode: string;\n  author: string;\n  source: string;\n  buttons: { star: any; read?: any; trash?: any };\n  update: (arg0: any) => void;\n  id: string;\n  read: boolean;\n  star: boolean;\n}) => {\n  const wrapper =\n    props.mode === \"show\"\n      ? `${props.author} @ ${props.source}`\n      : `@${props.source}`;\n  return (\n    <section className={style.line} data-test=\"component__post-line\">\n      <div className={style.wrapper}>{wrapper}</div>\n      <div className={style.wrapper}>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"star\"\n          status={props.star}\n          data-test=\"component__post-line--button\"\n        >\n          {props.buttons.star}\n        </Button>\n        <Button\n          update={props.update}\n          id={props.id}\n          mode=\"read\"\n          status={props.read}\n          data-test=\"component__post-line--button\"\n        >\n          {props.buttons.read}\n        </Button>\n      </div>\n    </section>\n  );\n};\n\nexport default PostLine;\n","import React from \"react\";\n\nimport style from \"../../styles/PostButton.module.scss\";\n\nconst PostButton = (props: {\n  update: (arg0: any) => void;\n  mode: string;\n  id: string;\n  children: any;\n  status: boolean;\n}) => {\n  const status = props.status ? (\n    <span className={style.onStatus}>{props.children}</span>\n  ) : (\n    <span className={style.offStatus}>{props.children}</span>\n  );\n  return (\n    <button\n      className={style.post}\n      aria-label={props.mode}\n      onClick={() => props.update({ field: props.mode, id: props.id })}\n    >\n      {status}\n    </button>\n  );\n};\n\nexport default PostButton;\n","import React from \"react\";\n\nimport dateTime from \"../../modules/dateTime\";\n\nimport style from \"../../styles/PostCard.module.scss\";\n\nconst PostFooter = (props: {\n  timestamp: Date;\n  parsed?: Date;\n  readingTime: number;\n}) => {\n  const readTime = `~${props.readingTime} mins`;\n  const parsed = props.parsed ? (\n    <div className={style.wrapper}>\n      <span className={style.span}>parsed: </span>\n      {dateTime(props.parsed)}\n    </div>\n  ) : null;\n\n  return (\n    <footer className={style.footer}>\n      <div className={style.wrapper}>\n        <span className={style.span}>posted: </span>\n        {dateTime(props.timestamp)}\n      </div>\n      {parsed}\n      <div className={style.wrapper}>{readTime}</div>\n    </footer>\n  );\n};\n\nexport default PostFooter;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Title_header__a8239\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Timestamp_title__1oVzj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__4gWOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smart\":\"SmartButton_smart__2LjGI\",\"smartAccented\":\"SmartButton_smartAccented__3QZCJ\",\"smartRefresh\":\"SmartButton_smartRefresh__mmdzI\",\"smartRotate\":\"SmartButton_smartRotate__2lr2t\",\"rotate\":\"SmartButton_rotate__2cqkO\",\"scaleUp\":\"SmartButton_scaleUp__26vHE\",\"slideInFromTop\":\"SmartButton_slideInFromTop__1MliQ\",\"slideInFromLeft\":\"SmartButton_slideInFromLeft__3Xj3w\",\"growLarge\":\"SmartButton_growLarge__3AZ2_\",\"slideDown\":\"SmartButton_slideDown__37h5C\",\"disappear\":\"SmartButton_disappear__3verO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"SmartMenu_menu__2dsRy\",\"slideDown\":\"SmartMenu_slideDown__2HD0v\",\"scaleUp\":\"SmartMenu_scaleUp__2ghSY\",\"slideInFromTop\":\"SmartMenu_slideInFromTop__1iIxf\",\"slideInFromLeft\":\"SmartMenu_slideInFromLeft__3WgAG\",\"growLarge\":\"SmartMenu_growLarge__3i7pH\",\"rotate\":\"SmartMenu_rotate__caE1e\",\"disappear\":\"SmartMenu_disappear__3UryS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"PostButton_post__3eHpg\",\"status\":\"PostButton_status__3B7IS\",\"onStatus\":\"PostButton_onStatus__3XZOD\",\"offStatus\":\"PostButton_offStatus__3nzNP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PostCardList_button__1iLb_\",\"modal\":\"PostCardList_modal__2ji0D\",\"central\":\"PostCardList_central__2rVGP\",\"display\":\"PostCardList_display__3V18P\",\"list\":\"PostCardList_list__2tmb4\",\"message\":\"PostCardList_message__2tQPO\"};"],"sourceRoot":""}