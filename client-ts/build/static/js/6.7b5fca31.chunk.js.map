{"version":3,"sources":["styles/_uiElements.tsx","styles/Filter.tsx","styles/LoginForm.tsx","components/Login.tsx","styles/Home.tsx","containers/Home/Home.tsx"],"names":["Button","styled","button","_templateObject","borderBottomArs","arsenic","lightGrey","baseFont","boxShadow","boxTransition","boxShadowHover","borderBottomLG","Menu","div","arsenicSemiTrans","ButtonsWrapper","section","_templateObject2","buttonTemplate","_templateObject3","ButtonSource","_templateObject4","props","accent","dimGrey","ButtonClear","_templateObject5","LoginForm","height","silverSand","darkMediumGrey","statusFont","Title","h1","Label","span","Submit","Error","Login","_React$useState","React","useState","_React$useState2","Object","slicedToArray","userName","setUserName","_React$useState3","_React$useState4","userEmail","setUserEmail","_React$useState5","_React$useState6","userPassword","setUserPassword","_React$useState7","_React$useState8","nameError","setNameError","_React$useState9","_React$useState10","emailError","setEmailError","_React$useState11","_React$useState12","passwordError","setPasswordError","checkEmail","mail","check","length","checkPassword","pass","handleInputChange","event","target","name","value","nameEnter","newUser","react_default","a","createElement","type","onChange","formHeight","title","inputErrors","message","onSubmit","preventDefault","checkName","authObj","new","fields","email","password","login","id","HomeScreen","Home_templateObject","Home_templateObject2","SubTitle","h2","Home_templateObject3","Screenshot","Home_templateObject4","connect","state","user","checkUser","authNew","setAuthNew","showLogin","setShowLogin","loginMessage","setLoginMessage","cookies","Home_Title","_uiElements","onClick","Filter","components_Login","lProps","action","query","then","res","response","payload","data","console","log","status","setUserToken","token","set","path","toggleAuth"],"mappings":"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","file":"static/js/6.7b5fca31.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nimport {\n  arsenic,\n  lightGrey,\n  baseFont,\n  boxTransition,\n  boxShadow,\n  boxShadowHover,\n  borderBottomArs,\n  borderBottomLG\n} from \"./_definitions\";\n\nconst Button = styled.button`\n  font-weight: 300;\n  background: none;\n  border: none;\n  border-bottom: ${borderBottomArs};\n  background-color: ${arsenic};\n  color: ${lightGrey};\n  font-family: ${baseFont};\n  border-radius: 2px;\n  margin: 0.2rem auto;\n  padding: 10px;\n  font-size: 1rem;\n  letter-spacing: 1px;\n  outline: none;\n  box-shadow: ${boxShadow};\n  transition: ${boxTransition};\n  user-select: none;\n  cursor: pointer;\n  &:hover {\n    box-shadow: ${boxShadowHover};\n    border-bottom: ${borderBottomLG};\n  }\n  &:active {\n    transform: scale(0.95);\n    box-shadow: ${boxShadow};\n    border-bottom: ${borderBottomLG};\n  }\n`;\n\nexport { Button };\n","import styled from \"styled-components\";\n\nimport {\n  arsenicSemiTrans,\n  lightGrey,\n  arsenic,\n  dimGrey,\n  baseFont\n} from \"./_definitions\";\n\nconst Menu = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  height: 100vh;\n  width: 100vw;\n  background: ${arsenicSemiTrans};\n  z-index: 100;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n`;\nconst ButtonsWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n`;\n\nconst buttonTemplate = styled.button`\n  font-family: ${baseFont};\n  font-size: 1.1rem;\n  padding: 5px;\n  padding-top: 7px;\n  letter-spacing: 1px;\n  border-radius: 1px;\n  width: 180px;\n  margin: 3px auto;\n  text-align: center;\n`;\n\ninterface IProps {\n  accent: boolean;\n}\n\nconst ButtonSource = styled(buttonTemplate)<IProps>`\n  background-color: ${props => (props.accent ? dimGrey : lightGrey)};\n  color: ${props => (props.accent ? lightGrey : arsenic)};\n  border-bottom: 3px solid ${props => (props.accent ? dimGrey : lightGrey)};\n\n  &:hover {\n    border-bottom: 3px solid ${props => (props.accent ? lightGrey : dimGrey)};\n  }\n`;\n\nconst ButtonClear = styled(buttonTemplate)`\n  color: ${lightGrey};\n  background-color: ${arsenic};\n  border-bottom: 3px solid ${arsenic};\n\n  &:hover {\n    color: ${lightGrey};\n    border-bottom: 3px solid ${lightGrey};\n  }\n`;\n\nexport { Menu, ButtonsWrapper, ButtonClear, ButtonSource };\n","import styled from \"styled-components\";\n\nimport {\n  arsenic,\n  accent,\n  darkMediumGrey,\n  lightGrey,\n  silverSand,\n  baseFont,\n  statusFont,\n  boxShadow,\n  boxTransition,\n  boxShadowHover\n} from \"./_definitions\";\n\ninterface props {\n  height: string;\n}\n\nconst LoginForm = styled.section<props>`\n  height: ${props => props.height};\n\n  @media (max-width: 499px) {\n    width: 80%;\n    margin-top: 25vh;\n  }\n  @media (min-width: 500px) {\n    width: 50%;\n    margin-top: 30vh;\n  }\n  margin: 0 auto;\n  padding: 1rem;\n  text-align: center;\n\n  border-radius: 2px;\n  background-color: ${silverSand};\n  box-shadow: ${boxShadow};\n  transition: ${boxTransition};\n  &:hover {\n    box-shadow: ${boxShadowHover};\n  }\n\n  label {\n    display: grid;\n    border: 1px solid ${darkMediumGrey};\n    border-radius: 2px;\n    padding: 10px 20px;\n    margin: 1rem 0;\n\n    input {\n      background-color: ${lightGrey};\n      font-family: ${statusFont};\n      font-weight: 300;\n      font-size: 1rem;\n      border: none;\n      margin: 0.5rem 0;\n      border-radius: 2px;\n      padding: 3px 2px;\n    }\n  }\n`;\nconst Title = styled.h1``;\n\nconst Label = styled.span`\n  margin-top: -1.4rem;\n  background-color: ${silverSand};\n  color: black;\n  display: inline-block;\n  max-width: 5rem;\n  margin-left: 1rem;\n  text-align: center;\n  font-weight: 300;\n  font-size: 1rem;\n`;\nconst Submit = styled.button`\n  input {\n    font-weight: 300;\n    background: none;\n    border: none;\n    background-color: ${arsenic};\n    color: ${lightGrey};\n    font-family: ${baseFont};\n    border-radius: 2px;\n    /* margin: 0.2rem auto; */\n    padding: 10px;\n    font-size: 1rem;\n    letter-spacing: 1px;\n    outline: none;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n\n    &:hover {\n      box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25),\n        0 10px 10px rgba(0, 0, 0, 0.22);\n      background-color: ${darkMediumGrey};\n      color: ${arsenic};\n    }\n    &:active {\n      transform: scale(0.9);\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    }\n  }\n`;\n\nconst Error = styled.div`\n  padding: 5px;\n  margin-bottom: 5px;\n  color: ${accent};\n  list-style: none;\n  text-align: center;\n  li {\n    padding: 5px 0;\n  }\n`;\n\nexport { LoginForm, Title, Label, Submit, Error };\n","import React from \"react\";\n\nimport { LoginForm, Title, Label, Submit, Error } from \"../styles/LoginForm\";\n\nconst Login = (props: {\n  message: string;\n  cookies: any;\n  login: (arg0: any) => any;\n  newUser: boolean;\n}) => {\n  const [userName, setUserName] = React.useState(\"\");\n  const [userEmail, setUserEmail] = React.useState(\"\");\n  const [userPassword, setUserPassword] = React.useState(\"\");\n  const [nameError, setNameError] = React.useState(\"\");\n  const [emailError, setEmailError] = React.useState(\"\");\n  const [passwordError, setPasswordError] = React.useState(\"\");\n\n  const checkName = (name: string) => {\n    const check = name.length > 3 ? true : false;\n    if (check) {\n      setNameError(\"\");\n    } else {\n      setNameError(\"Name is too short\");\n    }\n    return check;\n  };\n\n  const checkEmail = (mail: string) => {\n    const check = mail.length > 0 ? true : false;\n    if (check) {\n      setEmailError(\"\");\n    } else {\n      setEmailError(\"Email is missing\");\n    }\n    return check;\n  };\n\n  const checkPassword = (pass: string) => {\n    const check = pass.length > 6 ? true : false;\n    if (check) {\n      setPasswordError(\"\");\n    } else {\n      setPasswordError(\"Password too short\");\n    }\n    return check;\n  };\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n\n    let check;\n    if (props.newUser) {\n      check =\n        checkName(userName) &&\n        checkEmail(userEmail) &&\n        checkPassword(userPassword);\n    } else {\n      check = checkEmail(userEmail) && checkPassword(userPassword);\n    }\n    if (check) {\n      const authObj = {\n        new: props.newUser,\n        fields: {\n          name: userName,\n          email: userEmail,\n          password: userPassword\n        }\n      };\n      props.login(authObj);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    switch (event.target.name) {\n      case \"uName\":\n        setUserName(event.target.value);\n        break;\n      case \"uPass\":\n        setUserPassword(event.target.value);\n        break;\n      default:\n        setUserEmail(event.target.value);\n        break;\n    }\n  };\n\n  const nameEnter = props.newUser ? (\n    <label>\n      <Label>Name</Label>\n      <input\n        type=\"text\"\n        name=\"uName\"\n        value={userName}\n        onChange={handleInputChange}\n      />\n    </label>\n  ) : null;\n  const formHeight = props.newUser ? \"350px\" : \"300px\";\n  const title = props.newUser ? \"Register new user\" : \"Login details\";\n\n  const inputErrors = (\n    <Error>\n      {nameError ? <li>{nameError}</li> : null}\n      {emailError ? <li>{emailError}</li> : null}\n      {passwordError ? <li>{passwordError}</li> : null}\n      {props.message ? <li>{props.message}</li> : null}\n    </Error>\n  );\n\n  return (\n    <LoginForm height={formHeight}>\n      <Title>{title}</Title>\n      <form onSubmit={handleSubmit}>\n        {nameEnter}\n        <label>\n          <Label>Email</Label>\n          <input\n            type=\"email\"\n            name=\"uMail\"\n            value={userEmail}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          <Label>Password</Label>\n          <input\n            type=\"password\"\n            name=\"uPass\"\n            value={userPassword}\n            onChange={handleInputChange}\n          />\n        </label>\n        {inputErrors}\n        <Submit>\n          <input\n            type=\"button\"\n            value={props.newUser ? \"Register\" : \"Login\"}\n            id=\"submit_button\"\n          />\n        </Submit>\n      </form>\n    </LoginForm>\n  );\n};\n\nexport default Login;\n","import styled from \"styled-components\";\n\nimport {\n  arsenic,\n  darkMediumGrey,\n  lightGrey,\n  baseFont,\n  boxTransition,\n  boxShadow\n} from \"./_definitions\";\n\nconst HomeScreen = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  font-family: ${baseFont};\n  background-color: ${lightGrey};\n  color: ${arsenic};\n`;\n\nconst Title = styled.h1`\n  position: absolute;\n  top: 20vh;\n  left: 10vw;\n  margin: 0;\n  padding: 0;\n  font-weight: 500;\n  @media (max-width: 399px) {\n    font-size: 2.5rem;\n  }\n  @media (min-width: 400px) {\n    font-size: 3.3rem;\n  }\n`;\nconst SubTitle = styled.h2`\n  position: absolute;\n  top: 30vh;\n  left: 10vw;\n  font-style: italic;\n  @media (max-width: 399px) {\n    font-size: 2rem;\n  }\n  @media (min-width: 400px) {\n    font-size: 2.2rem;\n  }\n  font-size: 2.2rem;\n`;\nconst Screenshot = styled.div`\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  @media (max-width: 499px) {\n    display: none;\n  }\n  @media (min-width: 800px) {\n    left: 50vw;\n    top: 20vh;\n    height: 50vh;\n    width: 45vw;\n    border-radius: 2px;\n    border: 1px solid ${darkMediumGrey};\n    background: rgba(0, 0, 0, 0)\n      url(\"https://res.cloudinary.com/diciu4xpu/image/upload/v1557432341/newsletter/homepage/screenshot_desktop.jpg\");\n  }\n  background-color: white;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover;\n  object-fit: cover;\n  box-shadow: ${boxShadow};\n  transition: ${boxTransition};\n`;\n\n\nexport { HomeScreen, Title, SubTitle, Screenshot };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\n\nimport { checkUser } from \"../../store/user/actions\";\nimport Login from \"../../components/Login\";\n\nimport { AuthObj } from \"../../types\";\n\nimport { HomeScreen, Title, SubTitle, Screenshot } from \"../../styles/Home\";\nimport { Button } from \"../../styles/_uiElements\";\nimport { Menu } from \"../../styles/Filter\";\n\n// import Home from \"../../components/Home\";\n// import Content from \"../../styles/Content\";\n\ninterface props {\n  checkUser: (arg0?: any) => any;\n  toggleAuth: () => void;\n  setUserEmail: (arg0: string) => void;\n  setUserToken: (arg0: string) => void;\n  cookies: any;\n}\n\nconst Home = (props: props) => {\n  const [authNew, setAuthNew] = React.useState(false);\n  const [showLogin, setShowLogin] = React.useState(false);\n  const [loginMessage, setLoginMessage] = React.useState(\"\");\n  const { cookies } = props;\n\n  // const cookiesCheck = (cProps: { email: string; token: string }) => {\n  //   const query = {\n  //     action: [\"user\", \"cookiesCheck\"],\n  //     fields: cProps\n  //   };\n  //   props.checkUser(query).then((res: any) => {\n  //     const response = res.payload.data;\n  //     if (response.authed) {\n  //       props.setUserEmail(cProps.email);\n  //       props.setUserToken(cProps.token);\n  //       props.toggleAuth();\n  //     }\n  //   });\n  // };\n\n  // const existingCookies = {\n  //   email: cookies.get(\"email\"),\n  //   token: cookies.get(\"token\")\n  // };\n  // if (cookies.get(\"email\") && cookies.get(\"token\")) {\n  //   cookiesCheck(existingCookies);\n  // }\n\n  const login = (lProps: AuthObj) => {\n    const action = lProps.new ? \"create\" : \"login\";\n    const query = {\n      action: [\"user\", lProps.new ? \"create\" : action],\n      id: \"\",\n      fields: lProps.fields\n    };\n    props.checkUser(query).then((res: any) => {\n      const response = res.payload.data;\n      console.log(response);\n      if (response.user === \"new\") {\n        setAuthNew(true);\n      } else if (response.status) {\n        setLoginMessage(\"\");\n\n        props.setUserEmail(response.user.email);\n        props.setUserToken(response.user.token);\n\n        cookies.set(\"email\", response.user.email, { path: \"/\" });\n        cookies.set(\"token\", response.user.token, { path: \"/\" });\n\n        props.toggleAuth();\n      } else {\n        setLoginMessage(response.data.message);\n      }\n    });\n  };\n\n  return (\n    <HomeScreen>\n      <Title>The Newsletter</Title>\n      <SubTitle>Just information.</SubTitle>\n      <Screenshot />\n      <Button onClick={() => setShowLogin(!showLogin)}>\n        Login or register\n      </Button>\n      {showLogin ? (\n        <Menu>\n          <Login\n            message={loginMessage}\n            cookies={props.cookies}\n            login={login}\n            newUser={authNew}\n          />\n        </Menu>\n      ) : null}\n    </HomeScreen>\n  );\n};\nconst mapStateToProps = (state: AppState) => ({\n  user: state.user\n});\n\nexport default connect(\n  mapStateToProps,\n  { checkUser }\n)(Home);\n"],"sourceRoot":""}