{"version":3,"sources":["styles/PostShow.tsx","components/PostShow.tsx"],"names":["Show","styled","article","_templateObject","baseFont","Title","h3","_templateObject2","Text","main","_templateObject3","darkMediumGrey","lightGrey","arsenic","dimGrey","silverSand","PostShow","props","starButton","post","star","react_default","a","createElement","ti_index_esm","trashButton","index_esm","regex","RegExp","removedStyleText","text","replace","onClick","link","url","window","open","title","PostLine","mode","source","author","buttons","trash","read","update","id","_id","dangerouslySetInnerHTML","__html","PostFooter","timestamp","published","parsed","readingTime","readTime"],"mappings":"w9FAWA,IAAMA,EAAOC,IAAOC,QAAVC,IACOC,KASXC,EAAQJ,IAAOK,GAAVC,KAgBLC,EAAOP,IAAOQ,KAAVC,IACmBC,IAGPC,IAmBTC,IA4EwBC,IACtBA,IAEeF,IAAuBA,IACjCA,IAAsBA,IAAsBA,IAC7CA,IAeOG,IAWAA,IACXF,KChHAG,UA1CE,SAACC,GAChB,IAAMC,EAAaD,EAAME,KAAKC,KAC5BC,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAEAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,MAEIC,EAAcJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,MAEdC,EAAQ,IAAIC,OAAO,eAAgB,MACnCC,EAAmBZ,EAAME,KAAKW,KAAKC,QAAQJ,EAAO,IACxD,OACEN,EAAAC,EAAAC,cAACvB,EAAD,KACEqB,EAAAC,EAAAC,cAAClB,EAAD,CACE2B,QAAS,WAjBQ,IAACC,IAkBChB,EAAME,KAAKe,IAjBpCC,OAAOC,KAAKH,EAAM,YAoBXhB,EAAME,KAAKkB,OAEdhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEC,KAAK,OACLC,OAAQvB,EAAME,KAAKqB,OACnBC,OAAQxB,EAAME,KAAKsB,OACnBC,QAAS,CAAEtB,KAAMF,EAAYyB,MAAOlB,GACpCmB,KAAM3B,EAAME,KAAKyB,KACjBxB,KAAMH,EAAME,KAAKC,KACjByB,OAAQ5B,EAAM4B,OACdC,GAAI7B,EAAME,KAAK4B,MAEjB1B,EAAAC,EAAAC,cAACf,EAAD,CACEwC,wBAAyB,CACvBC,OAAQpB,KAGZR,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEC,UAAWlC,EAAME,KAAKiC,UACtBC,OAAQpC,EAAME,KAAKkC,OACnBC,YAAarC,EAAME,KAAKoC","file":"static/js/10.6e5b05c2.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nimport {\n  darkMediumGrey,\n  baseFont,\n  lightGrey,\n  arsenic,\n  dimGrey,\n  silverSand\n} from \"./_definitions\";\n\nconst Show = styled.article`\n  font-family: ${baseFont};\n  padding: 0 20px;\n  padding-bottom: 1rem;\n  margin: 0 auto;\n  margin-top: 3rem;\n  max-width: 1000px;\n  display: flex;\n  flex-direction: column;\n`;\nconst Title = styled.h3`\n  cursor: pointer;\n  font-weight: 500;\n  margin: 0;\n  line-height: 1.6rem;\n  font-size: 1.3rem;\n  @media (max-width: 499px) {\n    font-size: 1.5rem;\n    line-height: 1.8rem;\n  }\n`;\n\ninterface IProps {\n  className?: any;\n}\n\nconst Text = styled.main<IProps>`\n  border-bottom: 1px solid ${darkMediumGrey};\n  padding-bottom: 1rem;\n  margin-bottom: 1rem;\n  background-color: ${lightGrey}\n  /* :root {\n    --light: white;\n    --lightGrey: #d3d3d3;\n    --silverSand: #c4c4c4;\n    --dimGrey: #6b6b6b;\n    --arsenic: #444444;\n    --darkMediumGrey: #aaaaaa;\n    --accent: #6d6bc4;\n    --accentAlt: #914992;\n    --arsenicTrans: rgba(50, 50, 50, 0.8);\n    --arsenicLightTrans: rgba(50, 50, 50, 0.3);\n    --arsenicSemiTrans: rgba(50, 50, 50, 0.5);\n  } */\n\n\n    position: relative;\n    font-size: 1.2rem;\n    line-height: 25px;\n    color: ${arsenic};\n\n    @media (max-width: 499px) {\n      font-size: 1.3rem;\n    }\n\n    h1,\n    h2,\n    h3,\n    h4 {\n      font-weight: 700;\n    }\n\n    h1 {\n      font-size: 1.6rem;\n    }\n\n    h2 {\n      font-size: 1.4rem;\n    }\n\n    h3 {\n      font-size: 1.2rem;\n    }\n\n    h4 {\n      margin: 0.1rem 0;\n    }\n\n    p,\n    i {\n      margin: 10px 0;\n      padding: 0;\n    }\n\n    button,\n    address,\n    time,\n    figure,\n    hr,\n    img,\n    video,\n    iframe,\n    figcaption,\n    .signature,\n    .book-cta,\n    .border-bottom {\n      display: none;\n    }\n\n    article {\n      header {\n        display: none;\n      }\n    }\n\n    br {\n      margin: 5px;\n    }\n\n    em {\n      font-weight: 300;\n      font-style: italic;\n    }\n\n    strong {\n      font-weight: 700;\n    }\n\n    li {\n      margin: 5px 0;\n      padding-left: 10px;\n    }\n\n    a {\n      text-decoration: none;\n      border-bottom: 0.03rem solid ${dimGrey};\n      color: ${dimGrey};\n      line-height: 0.85;\n      text-shadow: 1px -1px ${lightGrey}, -1px 1px ${lightGrey},\n        -1px -1px ${lightGrey}, 1px 0px ${lightGrey}, 1px 1px ${lightGrey},\n        -2px 1px ${lightGrey};\n    }\n\n    blockquote {\n      font-weight: 300;\n      font-style: italic;\n    }\n\n    pre {\n      font-weight: 300;\n      font-family: \"Open Sans\";\n      letter-spacing: 1px;\n      font-size: 1rem;\n      width: 80%;\n      margin: 1rem auto;\n      background-color: ${silverSand};\n      white-space: pre-wrap;\n      padding: 0.5rem 1rem;\n      line-height: 1.5rem;\n      text-align: left;\n    }\n\n    code {\n      font-weight: 300;\n      font-family: \"Roboto Mono\";\n      font-size: 1rem;\n      background-color: ${silverSand};\n      color: ${arsenic};\n      padding: 0.2rem;\n    }\n\n`;\n\nexport { Show, Title, Text };\n","import React from \"react\";\nimport { FaTrash } from \"react-icons/fa\";\nimport { TiStarFullOutline, TiStarOutline } from \"react-icons/ti\";\n\nimport { Post } from \"../store/post/types\";\nimport Line from \"./PostElements/PostLine\";\nimport Footer from \"./PostElements/PostFooter\";\n\nimport { Show, Title, Text } from \"../styles/PostShow\";\n\nconst handleTitleClick = (link: string) => {\n  window.open(link, \"_blank\");\n};\n\nconst PostShow = (props: { post: Post; update: (arg0: any) => void }) => {\n  const starButton = props.post.star ? (\n    <TiStarFullOutline />\n  ) : (\n    <TiStarOutline />\n  );\n  const trashButton = <FaTrash />;\n  // clean text\n  const regex = new RegExp(\"style = '.*'\", \"gm\");\n  const removedStyleText = props.post.text.replace(regex, \"\");\n  return (\n    <Show>\n      <Title\n        onClick={() => {\n          handleTitleClick(props.post.url);\n        }}\n      >\n        {props.post.title}\n      </Title>\n      <Line\n        mode=\"show\"\n        source={props.post.source}\n        author={props.post.author}\n        buttons={{ star: starButton, trash: trashButton }}\n        read={props.post.read}\n        star={props.post.star}\n        update={props.update}\n        id={props.post._id}\n      />\n      <Text\n        dangerouslySetInnerHTML={{\n          __html: removedStyleText\n        }}\n      />\n      <Footer\n        timestamp={props.post.published}\n        parsed={props.post.parsed}\n        readingTime={props.post.readTime}\n      />\n    </Show>\n  );\n};\nexport default PostShow;\n"],"sourceRoot":""}