{"version":3,"sources":["containers/Sources/SourceCreate/SourceCreate.module.scss","containers/Posts/PostShow.module.scss","components/Sources/SourceCard.module.scss","components/Posts/PostButton/PostButton.module.scss","components/Posts/PostCard.module.scss","components/SmartMenu/SmartMenu.module.scss","components/TitleBar/TitleBar.module.scss","components/NavMenu/NavMenuElement.module.scss","components/Sources/SourceButton/SourceButton.module.scss","containers/Sources/SourcesList.module.scss","components/NavMenu/NavMenu.module.scss","components/PostTitle/PostTitle.module.scss","components/Source/Source.module.scss","components/Divider/Divider.module.scss","containers/ContentDisplay/ContentDisplay.module.scss","containers/Posts/PostCardList.module.scss","components/DateTime.js","components/TitleBar/TitleBar.js","actions/index.js","components/NavMenu/NavMenuElement.js","components/NavMenu/NavMenu.js","components/SmartMenu/SmartMenu.js","components/PostTitle/PostTitle.js","components/Posts/PostButton/PostButton.js","components/Source/Source.js","components/ApproxVolume.js","components/Divider/Divider.js","components/Posts/PostCard.js","containers/Posts/PostCardList.js","components/Sources/SourceButton/SourceButton.js","containers/Sources/SourceCreate/SourceCreate.js","components/Sources/SourceCard.js","containers/Sources/SourcesList.js","containers/Posts/PostShow.js","containers/ContentDisplay/ContentDisplay.js","components/App/App.js","serviceWorker.js","index.js","reducers/posts_reducer.js","reducers/sources_reducer.js","reducers/add_source_reducer.js","reducers/select_post_reducer.js","reducers/update_post_reducer.js","reducers/update_source_reducer.js","reducers/delete_source_reducer.js","reducers/refresh_posts_reducer.js","reducers/source_create_module_reducer.js"],"names":["module","exports","createForm","openForm","labelTitle","center","body","statusLine","secondLine","sourceAuthorWrapper","author","buttonsWrapper","text","signature","book-cta","border-bottom","sectionWrapper","section","nameWrapper","name","url","button","delete","on","read","unRead","bodyRead","statsLine","smartMenu","refresh","newsletterHead","title","timeStamp","element","buttonArrow","buttonArrowOpen","buttonDims","addSource","refreshSource","message","menu","menuOpen","postTitle","postTitleShow","sourceFormat","source","sourceShow","divider","dividerCard","contentDisplay","actionMessage","appear","content","flex","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","DateTime","dateToChange","Date","this","props","timestamp","minutes","getMinutes","concat","hours","getHours","timeToDisplay","dateTimeString","getDay","getDate","getMonth","pre","react_default","a","createElement","React","Component","TitleBar","className","styles","components_DateTime","apiUrl","process","setPosts","type","payload","fetch","then","r","json","catch","e","updatePost","query","method","headers","Accept","Content-Type","JSON","stringify","updateSource","refreshPosts","action","deleteSource","id","setSources","selectPost","postId","NavMenuElement","handleClick","_this","options","showRead","show","elementStyle","style","menuStatus","onClick","NavMenu","menuStyle","NavMenu_NavMenuElement","SmartMenu","toggleModule","event","moduleToggle","target","innerText","render","homeBack","showHide","index_esm","readToggle","mode","homeBackButton","PostTitle","selector","postTitleStyle","PostButton","buttonStyle","ti_index_esm","value","Source","sourceStyle","ApproxVolume","volume","units","Divider","dividerStyle","card","PostCard","post","_id","handleAction","update","field","replace","bodyClass","components_PostTitle_PostTitle","components_Source_Source","Posts_PostButton_PostButton","star","dangerouslySetInnerHTML","__html","published","components_ApproxVolume","readTime","components_Divider_Divider","PostCardList","selectPostToShow","updatePostAction","checkPost","Posts_PostCard","key","_this2","posts","length","map","SourceButton","sourceDelete","toggleEditSource","sourceId","SourceCreate","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","home","handleChange","bind","assertThisInitialized","handleSubmit","change","setState","preventDefault","values","toggle","create","onSubmit","input","onChange","submit","as","SourceCard","showEdit","showEditSourceId","goHome","Sources_SourceButton_SourceButton","Sources_SourceCreate_SourceCreate","SourcesList","showAddSource","showEditSource","toggleAddSource","changeMessage","setTimeout","clearMessage","createSource","fields","request","fetchSources","handleRefreshPosts","sources","Sources_SourceCard","PostShow","height","window","open","componentDidMount","scrollTo","ref","divElement","parsed","pages","ContentDisplay","sourceList","handleRefreshClick","updateMessage","fetchPostsSources","data","updateStatePosts","updatedPosts","forEach","newPost","push","showModule","setInterval","refresher","clearInterval","Posts_PostCardList","Posts_PostShow","Sources_SourcesList","components_SmartMenu_SmartMenu","components_NavMenu_NavMenu","connect","selectModule","dispatch","bindActionCreators","App","TitleBar_TitleBar","containers_ContentDisplay_ContentDisplay","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","WebFont","load","google","families","reducers","combineReducers","arguments","undefined","refreshPostsReducer","sourceCreateModule","middlewares","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","reduxPromise","logger","ReactDOM","es","store","createStore","components_App_App","document","getElementById","URL","href","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6bdf8b4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"createForm\":\"SourceCreate_createForm__ip7VY\",\"openForm\":\"SourceCreate_openForm__LzWuh\",\"labelTitle\":\"SourceCreate_labelTitle__1cXrb\",\"center\":\"SourceCreate_center__2kQsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostShow_body__2TwRe\",\"statusLine\":\"PostShow_statusLine__2IdMQ\",\"secondLine\":\"PostShow_secondLine__2UdMm\",\"sourceAuthorWrapper\":\"PostShow_sourceAuthorWrapper__wmORu\",\"author\":\"PostShow_author__2zb90\",\"buttonsWrapper\":\"PostShow_buttonsWrapper__3rLlP\",\"text\":\"PostShow_text__1LUHk\",\"signature\":\"PostShow_signature__2kcrB\",\"book-cta\":\"PostShow_book-cta__1Zi7g\",\"border-bottom\":\"PostShow_border-bottom__2BsMA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionWrapper\":\"SourceCard_sectionWrapper__cLh38\",\"section\":\"SourceCard_section__1GsAX\",\"nameWrapper\":\"SourceCard_nameWrapper__2qkrb\",\"name\":\"SourceCard_name__3dZ2_\",\"url\":\"SourceCard_url__3DiHr\",\"buttonsWrapper\":\"SourceCard_buttonsWrapper__2bEZR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PostButton_button__1dQxV\",\"delete\":\"PostButton_delete__EgzSD\",\"on\":\"PostButton_on__JhT8o\",\"read\":\"PostButton_read__3_P90\",\"unRead\":\"PostButton_unRead__2fZJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostCard_body__1dWen\",\"text\":\"PostCard_text__LS6Tr\",\"bodyRead\":\"PostCard_bodyRead__2-ozQ\",\"secondLine\":\"PostCard_secondLine__8KX_q\",\"statsLine\":\"PostCard_statsLine__3e0dV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smartMenu\":\"SmartMenu_smartMenu__3NTZc\",\"text\":\"SmartMenu_text__3yKic\",\"refresh\":\"SmartMenu_refresh__WfKir\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsletterHead\":\"TitleBar_newsletterHead__O-_qt\",\"title\":\"TitleBar_title__3YLqa\",\"timeStamp\":\"TitleBar_timeStamp__3J601\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"NavMenuElement_element__df_g8\",\"button\":\"NavMenuElement_button__2gpJC\",\"buttonArrow\":\"NavMenuElement_buttonArrow__3lPn9\",\"buttonArrowOpen\":\"NavMenuElement_buttonArrowOpen__gmt7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SourceButton_button__1TMyL\",\"buttonDims\":\"SourceButton_buttonDims__2J6RB\",\"addSource\":\"SourceButton_addSource__Q5b6a\",\"refreshSource\":\"SourceButton_refreshSource__3zNOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SourcesList_section__2QZ_A\",\"message\":\"SourcesList_message__1ujgw\",\"buttonsWrapper\":\"SourcesList_buttonsWrapper__zvfx3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"NavMenu_menu__3DpfU\",\"menuOpen\":\"NavMenu_menuOpen__3P4RL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PostTitle_title__3Rtbu\",\"postTitle\":\"PostTitle_postTitle__1exmo\",\"postTitleShow\":\"PostTitle_postTitleShow__YJbat\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sourceFormat\":\"Source_sourceFormat__3I71m\",\"source\":\"Source_source__39_G7\",\"sourceShow\":\"Source_sourceShow__2Gc-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divider\":\"Divider_divider__1AOMc\",\"dividerCard\":\"Divider_dividerCard__qxBqq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentDisplay\":\"ContentDisplay_contentDisplay__1I9CB\",\"actionMessage\":\"ContentDisplay_actionMessage__28yXc\",\"appear\":\"ContentDisplay_appear__1zQ0p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PostCardList_content__2V28v\",\"flex\":\"PostCardList_flex__3-SqG\"};","import React from 'react';\n\nconst months = {\n  1: 'Jan',\n  2: 'Feb',\n  3: 'Mar',\n  4: 'Apr',\n  5: 'May',\n  6: 'Jun',\n  7: 'Jul',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec'\n};\nconst daysOfWeek = {\n  1: 'Sun',\n  2: 'Mon',\n  3: 'Tue',\n  4: 'Wed',\n  5: 'Thu',\n  6: 'Fri',\n  7: 'Sat'\n};\n\nclass DateTime extends React.Component {\n  render() {\n    let dateToChange = new Date();\n    if (this.props.timestamp) {\n      dateToChange = new Date(this.props.timestamp);\n    }\n\n    const minutes =\n      dateToChange.getMinutes() < 10\n        ? `0${dateToChange.getMinutes()}`\n        : dateToChange.getMinutes();\n\n    const hours =\n      dateToChange.getHours() > 12\n        ? dateToChange.getHours() - 12\n        : dateToChange.getHours();\n\n    let timeToDisplay = `${hours}:${minutes}`;\n\n    if (dateToChange.getHours() > 11) {\n      timeToDisplay = `${timeToDisplay} pm`;\n    } else {\n      timeToDisplay = `${timeToDisplay} am`;\n    }\n\n    let dateTimeString = `${\n      daysOfWeek[dateToChange.getDay() + 1]\n    } ${dateToChange.getDate()} ${\n      months[dateToChange.getMonth() + 1]\n    } at ${timeToDisplay}`;\n    if (this.props.pre) {\n      dateTimeString = `${this.props.pre} ${dateTimeString}`;\n    }\n    return <div>{dateTimeString}</div>;\n  }\n}\n\nexport default DateTime;\n","import React from 'react';\n\nimport DateTime from '../DateTime';\nimport styles from './TitleBar.module.scss';\n\nexport default class TitleBar extends React.Component {\n  render() {\n    return (\n      <header className={styles.newsletterHead}>\n        <div className={styles.title}>The Newsletter</div>\n        <time className={styles.timeStamp}>\n          <DateTime />\n        </time>\n      </header>\n    );\n  }\n}\n","const apiUrl = `${process.env.REACT_APP_SERVER}/api`;\n\nexport function setPosts() {\n  const promise = fetch(`${apiUrl}/list`)\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'SET_POSTS',\n    payload: promise\n  };\n}\nexport function updatePost(query) {\n  const promise = fetch(apiUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'UPDATE_POST',\n    payload: promise\n  };\n}\nexport function updateSource(query) {\n  const promise = fetch(apiUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'UPDATE_SOURCE',\n    payload: promise\n  };\n}\nexport function refreshPosts() {\n  const promise = fetch(apiUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: {\n        action: ['post', 'refresh']\n      }\n    })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'REFRESH_POSTS',\n    payload: promise\n  };\n}\nexport function addSource(query) {\n  const promise = fetch(apiUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'ADD_SOURCE',\n    payload: promise\n  };\n}\nexport function deleteSource(query) {\n  if (query.action && query.id) {\n    const promise = fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ query })\n    })\n      .then(r => r)\n      // r.json())\n      .catch(e => {\n        return e;\n      });\n\n    return {\n      type: 'DELETE_SOURCE',\n      payload: promise\n    };\n  } else {\n    return 'Missing action and/or id';\n  }\n}\n\nexport function setSources() {\n  const promise = fetch(`${apiUrl}/sources`).then(r => r.json());\n  return {\n    type: 'SET_SOURCES',\n    payload: promise\n  };\n}\n\nexport function selectPost(postId) {\n  const promise = fetch(`${apiUrl}/post/${postId}`).then(r => r.json());\n  return {\n    type: 'SELECT_POST',\n    payload: promise\n  };\n}\n\nexport function sourceCreateModule(status) {\n  return {\n    type: 'SHOW_MODULE',\n    payload: status\n  };\n}\n","import React from 'react';\n\nimport style from './NavMenuElement.module.scss';\n\nclass NavMenuElement extends React.Component {\n  handleClick = () => {\n    if (this.props.name === 'Show/Hide Read') {\n      this.props.options.showRead('');\n      this.props.options.menuOpen('');\n    } else {\n      if (this.props.name !== 'toggle') {\n        this.props.options.menuOpen('');\n        this.props.options.show(this.props.name);\n      } else {\n        this.props.options.menuOpen('');\n      }\n    }\n  };\n\n  render() {\n    let elementStyle = style.button;\n    let button = this.props.name;\n    if (button === 'toggle') {\n      button = '⋮';\n      if (this.props.options.menuStatus) {\n        elementStyle = style.buttonArrowOpen;\n      } else {\n        elementStyle = style.buttonArrow;\n      }\n    }\n    return (\n      <div onClick={this.handleClick} className={elementStyle}>\n        {button}\n      </div>\n    );\n  }\n}\n\nexport default NavMenuElement;\n","import React from 'react';\n\nimport NavMenuElement from './NavMenuElement';\nimport style from './NavMenu.module.scss';\n\nclass NavMenu extends React.Component {\n  render() {\n    let menuStyle = style.menu;\n    if (this.props.options.menuStatus) menuStyle = style.menuOpen;\n    return (\n      <nav className={menuStyle}>\n        <NavMenuElement options={this.props.options} name=\"toggle\" />\n        <NavMenuElement options={this.props.options} name=\"Sources\" />\n        <NavMenuElement options={this.props.options} name=\"Show/Hide Read\" />\n        <NavMenuElement options={this.props.options} name=\"Home\" />\n      </nav>\n    );\n  }\n}\n\nexport default NavMenu;\n","import React from 'react';\n\nimport { FaSyncAlt, FaEye, FaEyeSlash } from 'react-icons/fa';\n\nimport style from './SmartMenu.module.scss';\n\nclass SmartMenu extends React.Component {\n  toggleModule = event => {\n    this.props.moduleToggle(event.target.innerText);\n  };\n  render = () => {\n    let homeBack = 'HOME';\n    let showHide = (\n      <button>\n        {this.props.read ? (\n          <FaEye onClick={this.props.readToggle} />\n        ) : (\n          <FaEyeSlash onClick={this.props.readToggle} />\n        )}\n      </button>\n    );\n\n    if (this.props.mode === 'show') {\n      showHide = null;\n      homeBack = 'BACK';\n    } else if (this.props.mode === 'SOURCES') {\n      showHide = null;\n    }\n\n    const homeBackButton = (\n      <button className={style.text} onClick={this.toggleModule}>\n        {homeBack}\n      </button>\n    );\n    return (\n      <section className={style.smartMenu}>\n        {homeBackButton}\n        <button>\n          <FaSyncAlt onClick={this.props.refresh} className={style.refresh} />\n        </button>\n        {showHide}\n        <button className={style.text} onClick={this.toggleModule}>\n          SOURCES\n        </button>\n      </section>\n    );\n  };\n}\nexport default SmartMenu;\n","import React from 'react';\n\nimport style from './PostTitle.module.scss';\nclass PostTitle extends React.Component {\n  handleClick = () => {\n    this.props.selector();\n  };\n  render() {\n    let postTitleStyle = style.postTitle;\n    if (this.props.mode === 'show') {\n      postTitleStyle = style.postTitleShow;\n    }\n    return (\n      <header onClick={this.handleClick} className={postTitleStyle}>\n        {this.props.postTitle}\n      </header>\n    );\n  }\n}\nexport default PostTitle;\n","import React from 'react';\nimport { FaCheck, FaCheckDouble, FaTrash } from 'react-icons/fa';\nimport { TiStarFullOutline, TiStarOutline } from 'react-icons/ti';\n\nimport style from './PostButton.module.scss';\n\nclass PostButton extends React.Component {\n  updatePost = () => {\n    this.props.action(this.props.type);\n  };\n\n  render() {\n    let button = <FaTrash />;\n    let buttonStyle = style.delete;\n    switch (this.props.type) {\n      case 'star':\n        button = <TiStarOutline />;\n        buttonStyle = style.button;\n        if (this.props.value) {\n          button = <TiStarFullOutline />;\n          buttonStyle = style.on;\n        }\n        break;\n      case 'read':\n        button = <FaCheck />;\n        buttonStyle = style.read;\n        if (this.props.value) {\n          button = <FaCheckDouble />;\n          buttonStyle = style.unRead;\n        }\n        break;\n      default:\n        break;\n    }\n    return (\n      <button className={buttonStyle} onClick={this.updatePost}>\n        {button}\n      </button>\n    );\n  }\n}\n\nexport default PostButton;\n","import React from 'react';\n\nimport style from './Source.module.scss';\nclass Source extends React.Component {\n  render() {\n    let sourceStyle = style.source;\n    if (this.props.mode === 'show') {\n      sourceStyle = style.sourceShow;\n    }\n    return <div className={sourceStyle}>@ {this.props.source}</div>;\n  }\n}\nexport default Source;\n","const ApproxVolume = props => {\n  return `~${props.volume} ${props.units}`;\n};\n\nexport default ApproxVolume;\n","import React from 'react';\n\nimport style from './Divider.module.scss';\nclass Divider extends React.Component {\n  render() {\n    let dividerStyle = style.divider;\n    if (this.props.card) dividerStyle = style.dividerCard;\n    return <div className={dividerStyle} />;\n  }\n}\nexport default Divider;\n","import React from 'react';\n\nimport PostTitle from '../PostTitle/PostTitle';\nimport PostButton from './PostButton/PostButton';\nimport Source from '../Source/Source';\nimport DateTime from '../DateTime';\nimport ApproxVolume from '../ApproxVolume';\nimport Divider from '../Divider/Divider';\n\nimport style from './PostCard.module.scss';\n\nclass PostCard extends React.Component {\n  handleClick = () => {\n    this.props.selector(this.props.post._id);\n  };\n\n  handleAction = props => {\n    this.props.update({\n      action: 'update',\n      field: props,\n      value: !this.props.post[`${props}`],\n      postId: this.props.post._id\n    });\n  };\n  render() {\n    const text = `${this.props.post.text.replace(/<(?:.|\\n)*?>/gm, ' ')}...`;\n    let bodyClass = style.body;\n\n    if (this.props.post.read) {\n      bodyClass = style.bodyRead;\n    }\n    return (\n      <section className={bodyClass} id={this.props.post._id}>\n        <PostTitle\n          mode=\"card\"\n          selector={this.handleClick}\n          postTitle={this.props.post.title}\n        />\n        <section className={style.secondLine}>\n          <Source mode=\"card\" source={this.props.post.source} />\n          <div className={style.buttonsWrapper}>\n            <PostButton\n              type=\"star\"\n              value={this.props.post.star}\n              action={this.handleAction}\n            />\n            <PostButton\n              type=\"read\"\n              value={this.props.post.read}\n              action={this.handleAction}\n            />\n          </div>\n        </section>\n        <section\n          className={style.text}\n          onClick={this.handleClick}\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n        <footer>\n          <DateTime timestamp={new Date(this.props.post.published)} />\n          <ApproxVolume\n            volume={this.props.post.readTime}\n            units=\"mins\"\n            mode=\"card\"\n          />\n        </footer>\n        <Divider />\n      </section>\n    );\n  }\n}\n\nexport default PostCard;\n","import React from 'react';\n\nimport PostCard from '../../components/Posts/PostCard';\nimport style from './PostCardList.module.scss';\n\nclass PostCardList extends React.Component {\n  selectPostToShow = props => {\n    this.props.selectPost(props);\n  };\n  updatePostAction = props => {\n    this.props.updatePost(props);\n  };\n\n  checkPost = post => {\n    if (!this.props.showRead && !post.read) {\n      return (\n        <PostCard\n          key={post._id}\n          selector={this.selectPostToShow}\n          update={this.updatePostAction}\n          post={post}\n        />\n      );\n    } else if (this.props.showRead) {\n      return (\n        <PostCard\n          key={post._id}\n          selector={this.selectPostToShow}\n          update={this.updatePostAction}\n          post={post}\n        />\n      );\n    } else {\n      return null;\n    }\n  };\n  render() {\n    if (this.props.posts.length > 0) {\n      return (\n        <section className={style.flex}>\n          {this.props.posts.map(post => {\n            return this.checkPost(post);\n          })}\n        </section>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default PostCardList;\n","import React from 'react';\n\nimport { FaEdit, FaTrash } from 'react-icons/fa';\n\nimport style from './SourceButton.module.scss';\n\nclass SourceButton extends React.Component {\n  handleClick = () => {\n    if (this.props.type === 'add') this.props.show('');\n    if (this.props.type === 'delete') this.props.sourceDelete('');\n    if (this.props.type === 'refresh') this.props.refresh('');\n    if (this.props.type === 'edit')\n      this.props.toggleEditSource(this.props.sourceId);\n  };\n  render() {\n    let button = 'Add Source';\n    let buttonStyle = style.button;\n    switch (this.props.type) {\n      case 'edit':\n        button = <FaEdit />;\n        break;\n      case 'refresh':\n        button = 'Refresh';\n        buttonStyle = style.refreshSource;\n        break;\n      case 'add':\n        buttonStyle = style.addSource;\n        break;\n      default:\n        button = <FaTrash />;\n    }\n    return (\n      <button className={buttonStyle} onClick={this.handleClick}>\n        {button}\n      </button>\n    );\n  }\n}\n\nexport default SourceButton;\n","import React from 'react';\n\nimport style from './SourceCreate.module.scss';\n\nclass SourceCreate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (props.source) {\n      this.state = {\n        name: props.source.name,\n        url: props.source.url,\n        home: props.source.home\n      };\n    } else {\n      this.state = {\n        name: '',\n        url: '',\n        home: ''\n      };\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let change = {};\n    let field = event.target.name;\n    change[field] = event.target.value;\n    this.setState(change);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    // form values\n    const values = {\n      name: event.target[0].value,\n      url: event.target[1].value,\n      home: event.target[2].value\n    };\n    // if module mode Update\n    if (this.props.mode === 'Update') {\n      // are these old values?\n      const oldValues =\n        values.name === this.props.source.name &&\n        values.url === this.props.source.url &&\n        values.home === this.props.source.home;\n      // if no, then process\n      if (!oldValues) {\n        const query = { id: this.props.source._id, values: values };\n        this.props.toggleEditSource();\n        this.props.updateSource(query);\n        // otherwise, just close\n      } else {\n        this.props.toggleEditSource();\n      }\n      // if module mode Create\n    } else if (this.props.mode === 'Create') {\n      this.props.toggle();\n      this.props.create(values);\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={style.createForm}>\n        <label>\n          <div className={style.labelTitle}>Name</div>\n          <input\n            className={style.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>URL</div>\n          <input\n            type=\"text\"\n            name=\"url\"\n            value={this.state.url}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>Homepage</div>\n          <input\n            type=\"text\"\n            name=\"home\"\n            value={this.state.home}\n            onChange={this.handleChange}\n          />\n        </label>\n        <div className={style.center}>\n          <button\n            className={style.submit}\n            as=\"input\"\n            type=\"submit\"\n            value=\"Submit\"\n          >\n            {this.props.mode}\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SourceCreate;\n","import React from 'react';\n\nimport SourceButton from './SourceButton/SourceButton';\nimport SourceCreate from '../../containers/Sources/SourceCreate/SourceCreate';\nimport style from './SourceCard.module.scss';\n\nclass SourceCard extends React.Component {\n  sourceDelete = () => {\n    this.props.sourceDelete(this.props.source._id);\n  };\n  render() {\n    let showEdit = false;\n    if (\n      this.props.showEditSourceId === this.props.source._id &&\n      this.props.showEdit\n    )\n      showEdit = true;\n    return (\n      <section className={style.sectionWrapper}>\n        <div className={style.section}>\n          <section className={style.nameWrapper}>\n            <p onClick={this.goHome} className={style.name}>\n              {this.props.source.name}\n            </p>\n            <p className={style.url}>{this.props.source.url}</p>\n          </section>\n          <section className={style.buttonsWrapper}>\n            <SourceButton\n              type=\"edit\"\n              toggleEditSource={this.props.toggleEditSource}\n              sourceId={this.props.source._id}\n            />\n            <SourceButton type=\"delete\" sourceDelete={this.sourceDelete} />\n          </section>\n        </div>\n        {showEdit ? (\n          <SourceCreate\n            mode=\"Update\"\n            toggleEditSource={this.props.toggleEditSource}\n            source={this.props.source}\n            updateSource={this.props.updateSource}\n          />\n        ) : null}\n      </section>\n    );\n  }\n}\n\nexport default SourceCard;\n","import React from 'react';\n\nimport SourceCard from '../../components/Sources/SourceCard';\nimport SourceButton from '../../components/Sources/SourceButton/SourceButton';\nimport SourceCreate from './SourceCreate/SourceCreate';\nimport style from './SourcesList.module.scss';\n\nclass SourcesList extends React.Component {\n  state = {\n    showAddSource: false,\n    showEditSource: false,\n    showEditSourceId: '',\n    message: ''\n  };\n\n  toggleAddSource = () => {\n    // if Edit Source component open - close it\n    if (this.state.showEditSource)\n      this.setState({\n        showEditSource: false,\n        showEditSourceId: ''\n      });\n    this.setState(state => ({\n      showAddSource: !this.state.showAddSource\n    }));\n  };\n\n  toggleEditSource = id => {\n    // if Add Source component open - close it\n    if (this.state.showAddSource) this.setState({ showAddSource: false });\n    // if Show Edit is true and ...\n    if (this.state.showEditSource) {\n      // ... there is same ID - close it\n      if (id === this.state.showEditSourceId) {\n        this.setState({\n          showEditSource: !this.state.showEditSource,\n          showEditSourceId: id\n        });\n        // ... this is different ID - open the other one\n      } else if (id && id !== this.state.showEditSourceId) {\n        this.setState({\n          showEditSource: true,\n          showEditSourceId: id\n        });\n      } else {\n        this.setState({\n          showEditSource: false,\n          showEditSourceId: ''\n        });\n      }\n    }\n    // if Show Edit is false\n    else {\n      this.setState({\n        showEditSource: true,\n        showEditSourceId: id\n      });\n    }\n  };\n\n  changeMessage = message => {\n    this.setState({ message: message });\n    setTimeout(this.clearMessage, 3000);\n  };\n\n  clearMessage = () => {\n    this.setState({ message: '' });\n  };\n\n  createSource = fields => {\n    if (fields.name === '' || fields.home === '' || fields.url === '')\n      this.changeMessage('Not enough info. Source not created.');\n    const request = { action: ['source', 'create'], fields };\n    this.props.addSource(request);\n  };\n\n  updateSource = fields => {\n    if (\n      fields.values.name === '' ||\n      fields.values.home === '' ||\n      fields.values.url === '' ||\n      fields.values.id === ''\n    )\n      this.changeMessage('Not enough info. Source not created.');\n    const request = {\n      action: ['source', 'update'],\n      id: fields.id,\n      fields: fields.values\n    };\n    this.props.updateSource(request);\n  };\n\n  sourceDelete = id => {\n    const request = { action: ['source', 'delete'], id: id };\n    this.props.deleteSource(request);\n    this.fetchSources();\n  };\n\n  handleRefreshPosts = () => {\n    this.props.refreshPosts();\n  };\n\n  render() {\n    if (this.props.sources.length > 0) {\n      return (\n        <section className={style.section}>\n          <div className={style.buttonsWrapper}>\n            <SourceButton\n              type=\"add\"\n              show={this.toggleAddSource}\n              name=\"Add Source\"\n            />\n          </div>\n          {this.state.showAddSource ? (\n            <SourceCreate\n              mode=\"Create\"\n              create={this.createSource}\n              toggle={this.toggleAddSource}\n            />\n          ) : null}\n          {this.state.message === '' ? null : (\n            <div className={style.message}>{this.state.message}</div>\n          )}\n          {this.props.sources.map(source => {\n            return (\n              <SourceCard\n                source={source}\n                key={source._id}\n                sourceDelete={this.sourceDelete}\n                showEdit={this.state.showEditSource}\n                showEditSourceId={this.state.showEditSourceId}\n                toggleEditSource={this.toggleEditSource}\n                updateSource={this.updateSource}\n              />\n            );\n          })}\n        </section>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default SourcesList;\n","import React from 'react';\n\nimport PostTitle from '../../components/PostTitle/PostTitle';\nimport Source from '../../components/Source/Source';\nimport PostButton from '../../components/Posts/PostButton/PostButton';\nimport DateTime from '../../components/DateTime';\nimport ApproxVolume from '../../components/ApproxVolume';\nimport Divider from '../../components/Divider/Divider';\n\nimport style from './PostShow.module.scss';\n\nclass PostShow extends React.Component {\n  state = {\n    star: this.props.post.star,\n    height: 0\n  };\n\n  handleClick = () => {\n    window.open(this.props.post.url, '_blank');\n  };\n\n  handleAction = props => {\n    if (props === 'star') {\n      this.setState({ star: !this.state.star });\n    }\n    const request = {\n      action: 'update',\n      field: props,\n      value: !this.props.post[`${props}`],\n      postId: this.props.post._id,\n      module: 'show'\n    };\n\n    if (props === 'delete') {\n      request.action = 'delete';\n    }\n    this.props.updatePost(request);\n  };\n\n  componentDidMount = () => {\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    let author = '';\n    if (!this.props.post.author) {\n      author = '';\n    } else {\n      author = `by ${this.props.post.author}`;\n    }\n    return (\n      <article className={style.body}>\n        <PostTitle\n          mode=\"show\"\n          selector={this.handleClick}\n          postTitle={this.props.post.title}\n        />\n        <div className={style.secondLine}>\n          <div className={style.sourceAuthorWrapper}>\n            <div className={style.author}>{author}</div>\n            <Source mode=\"show\" source={this.props.post.source} />\n          </div>\n          <div className={style.buttonsWrapper}>\n            <PostButton\n              type=\"star\"\n              value={this.state.star}\n              postId={this.props.post._id}\n              action={this.handleAction}\n            />\n            <PostButton\n              type=\"delete\"\n              postId={this.props.post._id}\n              action={this.handleAction}\n            />\n          </div>\n        </div>\n        <section\n          ref={divElement => (this.divElement = divElement)}\n          className={style.text}\n          dangerouslySetInnerHTML={{\n            __html: this.props.post.text\n          }}\n        />\n        <footer>\n          <Divider />\n          <div className={style.statusLine}>\n            <DateTime\n              pre=\"published:\"\n              timestamp={new Date(this.props.post.published)}\n              mode=\"show\"\n            />\n            <DateTime\n              pre=\"parsed:\"\n              timestamp={new Date(this.props.post.parsed)}\n              mode=\"show\"\n            />\n            <div>\n              <ApproxVolume volume={this.props.post.pages} units=\"pages\" />\n            </div>\n          </div>\n        </footer>\n      </article>\n    );\n  }\n}\n\nexport default PostShow;\n","import React from \"react\";\n// Redux\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n// Actions\nimport { updatePost } from \"../../actions\";\nimport { setPosts } from \"../../actions\";\nimport { selectPost } from \"../../actions\";\nimport { refreshPosts } from \"../../actions\";\nimport { setSources } from \"../../actions\";\nimport { addSource } from \"../../actions\";\nimport { deleteSource } from \"../../actions\";\nimport { updateSource } from \"../../actions\";\n\nimport NavMenu from \"../../components/NavMenu/NavMenu\";\nimport SmartMenu from \"../../components/SmartMenu/SmartMenu\";\nimport PostCardList from \"../Posts/PostCardList\";\nimport SourcesList from \"../Sources/SourcesList\";\nimport PostShow from \"../Posts/PostShow\";\n\nimport style from \"./ContentDisplay.module.scss\";\n\nclass ContentDisplay extends React.Component {\n  state = {\n    post: {},\n    posts: [],\n    sources: [],\n    sourceList: [],\n    module: \"HOME\",\n    menuOpen: false,\n    showRead: false,\n    actionMessage: \"\"\n  };\n  handleRefreshClick = () => {\n    this.props.refreshPosts().then(() => {\n      this.updateMessage(\"Posts refreshed.\");\n    });\n  };\n  componentWillMount() {\n    this.fetchPostsSources();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchPostsSources, 5000);\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchPostsSources = () => {\n    this.props.setPosts().then(data => {\n      this.setState({\n        posts: data.payload\n      });\n      this.updateMessage(data.payload.message);\n    });\n    this.props.setSources().then(data => {\n      this.setState({\n        sources: data.payload\n      });\n      this.updateMessage(data.payload.message);\n    });\n  };\n\n  updateStatePosts = props => {\n    const updatedPosts = [];\n    this.state.posts.forEach(post => {\n      if (post._id === props.postId) {\n        const newPost = post;\n        newPost[`${props.field}`] = props.value;\n        updatedPosts.push(newPost);\n      } else {\n        updatedPosts.push(post);\n      }\n    });\n    this.setState({ posts: updatedPosts });\n  };\n\n  updatePostAction = props => {\n    let action = \"\";\n    switch (props.action) {\n      case \"delete\":\n        action = [\"post\", \"delete\"];\n        break;\n      default:\n        action = [\"post\", \"update\"];\n        break;\n    }\n    let fields = {};\n    fields[`${props.field}`] = props.value;\n    const query = { id: props.postId, action: action, fields: fields };\n    this.updateStatePosts({\n      field: props.field,\n      value: props.value,\n      postId: props.postId\n    });\n    this.props\n      .updatePost(query)\n      .then(() => this.updateMessage(\"Post updated.\"));\n    if (props.action === \"delete\" && props.module === \"show\") {\n      this.showModule(\"HOME\");\n    }\n  };\n\n  selectPostToShow = postId => {\n    this.updatePostAction({\n      action: \"update\",\n      field: \"read\",\n      value: true,\n      postId: postId\n    });\n    this.props.selectPost(postId).then(data => {\n      this.showModule(\"show\");\n      this.setState({ post: data.payload });\n    });\n  };\n\n  showModule = module => {\n    this.setState({ module: module });\n  };\n\n  menuOpen = () => {\n    this.setState({\n      menuOpen: !this.state.menuOpen\n    });\n  };\n\n  showRead = () => {\n    this.setState({\n      showRead: !this.state.showRead\n    });\n  };\n\n  updateMessage = message => {\n    this.setState({ actionMessage: message });\n    setInterval(() => this.setState({ actionMessage: \"\" }), 6000);\n  };\n\n  render() {\n    const options = {\n      show: this.showModule,\n      menuOpen: this.menuOpen,\n      menuStatus: this.state.menuOpen,\n      showRead: this.showRead\n    };\n    let module = (\n      <PostCardList\n        showRead={this.state.showRead}\n        posts={this.state.posts}\n        selectPost={this.selectPostToShow}\n        updatePost={this.updatePostAction}\n      />\n    );\n    switch (this.state.module) {\n      case \"show\":\n        module = (\n          <PostShow post={this.state.post} updatePost={this.updatePostAction} />\n        );\n        break;\n      case \"SOURCES\":\n        module = (\n          <SourcesList\n            sources={this.state.sources}\n            addSource={this.props.addSource}\n            deleteSource={this.props.deleteSource}\n            updateSource={this.props.updateSource}\n          />\n        );\n        break;\n      default:\n        break;\n    }\n    const message =\n      this.state.actionMessage ? (\n        <div className={style.actionMessage}>\n          {this.state.actionMessage}\n        </div>\n      ) : null;\n    return (\n      <div className={style.contentDisplay}>\n        {message}\n        <SmartMenu\n          read={this.state.showRead}\n          readToggle={this.showRead}\n          refresh={this.handleRefreshClick}\n          moduleToggle={this.showModule}\n          mode={this.state.module}\n          sources={this.state.sources}\n        />\n        {module}\n        <NavMenu options={options} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      setPosts,\n      selectPost,\n      updatePost,\n      refreshPosts,\n      setSources,\n      addSource,\n      deleteSource,\n      updateSource\n    },\n    dispatch\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    selectPost: state.selectPost,\n    selectModule: state.selectModule,\n    updatePost: state.updatePost,\n    sources: state.sources,\n    addSource: state.addSource,\n    deleteSource: state.deleteSource,\n    updateSource: updateSource\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ContentDisplay);\n","import React from 'react';\n\nimport TitleBar from '../TitleBar/TitleBar';\nimport ContentDisplay from '../../containers/ContentDisplay/ContentDisplay';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <TitleBar />\n        <ContentDisplay />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { logger } from 'redux-logger';\nimport reduxPromise from 'redux-promise';\n\n// reducers\nimport postsReducer from './reducers/posts_reducer';\nimport sourcesReducer from './reducers/sources_reducer';\nimport addSourceReducer from './reducers/add_source_reducer';\nimport updatePostReducer from './reducers/update_post_reducer';\nimport updateSourceReducer from './reducers/update_source_reducer';\nimport refreshPostsReducer from './reducers/refresh_posts_reducer';\nimport selectPostReducer from './reducers/select_post_reducer';\nimport deleteSourceReducer from './reducers/delete_source_reducer';\nimport sourceCreateModuleReducer from './reducers/source_create_module_reducer.js';\n\nimport WebFont from 'webfontloader';\n\n// load components\nimport App from './components/App/App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\n// loading fonts\nWebFont.load({\n  google: {\n    families: [\n      'Alegreya:400,400i,500,500i,700,700i:cyrillic,cyrillic-ext,latin-ext',\n      'Open+Sans:300,300i,400',\n      'Roboto+Mono:300'\n    ]\n  }\n});\n\nconst initialState = {\n  posts: [],\n  sources: [],\n  addSource: '',\n  updatePost: '',\n  selectPost: '',\n  sourceCreateModule: true,\n  deleteSource: '',\n  refreshPostsReducer: ''\n};\n\n// Define reducers\nconst reducers = combineReducers({\n  posts: postsReducer,\n  sources: sourcesReducer,\n  addSource: addSourceReducer,\n  selectPost: selectPostReducer,\n  updatePost: updatePostReducer,\n  updateSource: updateSourceReducer,\n  deleteSource: deleteSourceReducer,\n  refreshPostsReducer: refreshPostsReducer,\n  sourceCreateModule: sourceCreateModuleReducer\n});\n// Add logger\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewares = composeEnhancers(applyMiddleware(reduxPromise, logger));\n\nReactDOM.render(\n  <Provider store={createStore(reducers, initialState, middlewares)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_SOURCES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'ADD_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SELECT_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'DELETE_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SHOW_MODULE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n"],"sourceRoot":""}