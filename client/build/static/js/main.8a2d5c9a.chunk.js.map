{"version":3,"sources":["containers/Sources/SourceCreate/SourceCreate.module.scss","components/Posts/PostShow.module.scss","components/Sources/SourceCard.module.scss","containers/Posts/PostButton/PostButton.module.scss","components/Posts/PostCard.module.scss","components/TitleBar/TitleBar.module.scss","components/NavMenu/NavMenuElement.module.scss","containers/Posts/PostCardList.module.scss","components/Error/Error.module.scss","components/Sources/SourceButton/SourceButton.module.scss","containers/Sources/SourcesList.module.scss","components/NavMenu/NavMenu.module.scss","components/PostTitle/PostTitle.module.scss","components/Source/Source.module.scss","components/Divider/Divider.module.scss","components/DateTime.js","components/TitleBar/TitleBar.js","actions/index.js","components/NavMenu/NavMenuElement.js","components/NavMenu/NavMenu.js","components/PostTitle/PostTitle.js","containers/Posts/PostButton/PostButton.js","components/Source/Source.js","components/ApproxVolume.js","components/Posts/PostCard.js","components/Divider/Divider.js","components/Error/Error.js","containers/Posts/PostCardList.js","components/Sources/SourceButton/SourceButton.js","containers/Sources/SourceCreate/SourceCreate.js","components/Sources/SourceCard.js","containers/Sources/SourcesList.js","components/Posts/PostShow.js","containers/ContentDisplay.js","components/App/App.js","serviceWorker.js","index.js","reducers/posts_reducer.js","reducers/sources_reducer.js","reducers/add_source_reducer.js","reducers/select_post_reducer.js","reducers/update_post_reducer.js","reducers/update_source_reducer.js","reducers/delete_source_reducer.js","reducers/refresh_posts_reducer.js","reducers/source_create_module_reducer.js"],"names":["module","exports","createForm","openForm","labelTitle","center","body","secondLine","sourceAuthorWrapper","author","buttonsWrapper","text","signature","book-cta","border-bottom","statusLine","sectionWrapper","section","nameWrapper","name","url","button","delete","on","read","unRead","bodyRead","statsLine","newsletterHead","title","timeStamp","element","buttonArrow","buttonArrowOpen","content","grid","gridCell","errorWrapper","errorTitle","error","buttonDims","addSource","refreshSource","message","menu","menuOpen","postTitle","postTitleShow","sourceFormat","source","sourceShow","divider","dividerCard","months","1","2","3","4","5","6","7","8","9","10","11","12","daysOfWeek","DateTime","dateFromDb","Date","this","props","timestamp","timeToDisplay","concat","getHours","getMinutes","dateTimeString","getDay","getDate","getMonth","pre","react_default","a","createElement","React","Component","TitleBar","className","styles","components_DateTime","postUrl","process","REACT_APP_API_URL","setPosts","type","payload","fetch","then","r","json","catch","e","updatePost","query","method","headers","Accept","Content-Type","JSON","stringify","updateSource","refreshPosts","action","deleteSource","id","setSources","selectPost","postId","NavMenuElement","handleClick","_this","options","showRead","show","elementStyle","style","menuStatus","onClick","NavMenu","menuStyle","NavMenu_NavMenuElement","PostTitle","titleClick","postTitleStyle","mode","PostButton","fields","value","toggle","buttonStyle","connect","state","dispatch","bindActionCreators","Source","sourceStyle","ApproxVolume","volume","units","PostCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selector","post","_id","bind","assertThisInitialized","replace","bodyClass","key","components_PostTitle_PostTitle","components_Source_Source","Posts_PostButton_PostButton","star","dangerouslySetInnerHTML","__html","published","components_ApproxVolume","readTime","Divider","dividerStyle","card","PostCardList","fetchPosts","data","selectPostToShow","showPost","refresher","setInterval","window","scrollTo","clearInterval","_this2","posts","Error","map","Posts_PostCard","components_Divider_Divider","selectModule","SourceButton","sourceDelete","refresh","toggleEditSource","sourceId","SourceCreate","home","handleChange","handleSubmit","event","change","target","setState","preventDefault","values","create","onSubmit","input","onChange","submit","as","SourceCard","showEdit","showEditSourceId","goHome","Sources_SourceButton_SourceButton","Sources_SourceCreate_SourceCreate","SourcesList","showAddSource","showEditSource","toggleAddSource","console","log","changeMessage","setTimeout","clearMessage","fetchSources","createSource","request","handleRefreshPosts","sources","length","Sources_SourceCard","PostShow","open","componentDidMount","parsed","pages","ContentDisplay","markRead","setPostToShow","showModule","Posts_PostCardList","Posts_PostShow","Sources_SourcesList","components_NavMenu_NavMenu","App","TitleBar_TitleBar","containers_ContentDisplay","Boolean","location","hostname","match","WebFont","load","google","families","reducers","combineReducers","arguments","undefined","refreshPostsReducer","sourceCreateModule","middlewares","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","reduxPromise","logger","ReactDOM","render","es","store","createStore","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kFACAA,EAAAC,QAAA,CAAkBC,WAAA,iCAAAC,SAAA,+BAAAC,WAAA,iCAAAC,OAAA,+CCAlBL,EAAAC,QAAA,CAAkBK,KAAA,uBAAAC,WAAA,6BAAAC,oBAAA,sCAAAC,OAAA,yBAAAC,eAAA,iCAAAC,KAAA,uBAAAC,UAAA,4BAAAC,WAAA,2BAAAC,gBAAA,gCAAAC,WAAA,gDCAlBf,EAAAC,QAAA,CAAkBe,eAAA,mCAAAC,QAAA,4BAAAC,YAAA,gCAAAC,KAAA,yBAAAC,IAAA,wBAAAV,eAAA,sDCAlBV,EAAAC,QAAA,CAAkBoB,OAAA,2BAAAC,OAAA,2BAAAC,GAAA,uBAAAC,KAAA,yBAAAC,OAAA,6CCAlBzB,EAAAC,QAAA,CAAkBK,KAAA,uBAAAoB,SAAA,2BAAAf,KAAA,uBAAAJ,WAAA,6BAAAoB,UAAA,+CCAlB3B,EAAAC,QAAA,CAAkB2B,eAAA,iCAAAC,MAAA,wBAAAC,UAAA,8CCAlB9B,EAAAC,QAAA,CAAkB8B,QAAA,gCAAAV,OAAA,+BAAAW,YAAA,oCAAAC,gBAAA,0DCAlBjC,EAAAC,QAAA,CAAkBiC,QAAA,8BAAAC,KAAA,2BAAAC,SAAA,iDCAlBpC,EAAAC,QAAA,CAAkBoC,aAAA,4BAAAC,WAAA,0BAAAC,MAAA,uCCAlBvC,EAAAC,QAAA,CAAkBoB,OAAA,6BAAAmB,WAAA,iCAAAC,UAAA,gCAAAC,cAAA,sDCAlB1C,EAAAC,QAAA,CAAkBgB,QAAA,6BAAA0B,QAAA,6BAAAjC,eAAA,yDCAlBV,EAAAC,QAAA,CAAkB2C,KAAA,sBAAAC,SAAA,4CCAlB7C,EAAAC,QAAA,CAAkB4B,MAAA,yBAAAiB,UAAA,6BAAAC,cAAA,mDCAlB/C,EAAAC,QAAA,CAAkB+C,aAAA,6BAAAC,OAAA,uBAAAC,WAAA,6CCAlBlD,EAAAC,QAAA,CAAkBkD,QAAA,yBAAAC,YAAA,kRCCZC,EAAS,CACbC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,GAAI,MACJC,GAAI,MACJC,GAAI,OAEAC,EAAa,CACjBZ,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,OA0BUO,mLArBX,IAAIC,EAAa,IAAIC,KACjBC,KAAKC,MAAMC,YACbJ,EAAa,IAAIC,KAAKC,KAAKC,MAAMC,YAEnC,IAAIC,EAAa,GAAAC,OAAMN,EAAWO,WAAjB,KAAAD,OAA+BN,EAAWQ,aAA1C,OACbR,EAAWO,WAAa,KAC1BF,EAAa,GAAAC,OAAMN,EAAWO,WAC5B,GADW,KAAAD,OACLN,EAAWQ,aADN,QAGf,IAAIC,EAAc,GAAAH,OAChBR,EAAWE,EAAWU,SAAW,GADjB,KAAAJ,OAEdN,EAAWW,UAFG,KAAAL,OAGhBrB,EAAOe,EAAWY,WAAa,GAHf,QAAAN,OAIXD,GAIP,OAHIH,KAAKC,MAAMU,MACbJ,EAAc,GAAAH,OAAMJ,KAAKC,MAAMU,IAAjB,KAAAP,OAAwBG,IAEjCK,EAAAC,EAAAC,cAAA,WAAMP,UAnBMQ,IAAMC,4BCrBRC,mLAEjB,OACEL,EAAAC,EAAAC,cAAA,UAAQI,UAAWC,IAAO7D,gBACxBsD,EAAAC,EAAAC,cAAA,OAAKI,UAAWC,IAAO5D,OAAvB,kBACAqD,EAAAC,EAAAC,cAAA,QAAMI,UAAWC,IAAO3D,WACtBoD,EAAAC,EAAAC,cAACM,EAAD,eAN4BL,IAAMC,WCLtCK,EACJC,8CAAYC,mBACZ,+CAEK,SAASC,IAOd,MAAO,CACLC,KAAM,YACNC,QARcC,MAAK,GAAAvB,OAAIiB,EAAJ,UAClBO,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SACZC,MAAM,SAAAC,GACL,OAAOA,KAQN,SAASC,EAAWC,GAczB,MAAO,CACLT,KAAM,cACNC,QAfcC,MAAMN,EAAS,CAC7Bc,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACRC,eAAgB,oBAElBtG,KAAMuG,KAAKC,UAAU,CAAEN,YAEtBN,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SACZC,MAAM,SAAAC,GACL,OAAOA,KAQN,SAASS,EAAaP,GAc3B,MAAO,CACLT,KAAM,gBACNC,QAfcC,MAAMN,EAAS,CAC7Bc,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACRC,eAAgB,oBAElBtG,KAAMuG,KAAKC,UAAU,CAAEN,YAEtBN,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SACZC,MAAM,SAAAC,GACL,OAAOA,KAQN,SAASU,IAkBd,MAAO,CACLjB,KAAM,gBACNC,QAnBcC,MAAMN,EAAS,CAC7Bc,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACRC,eAAgB,oBAElBtG,KAAMuG,KAAKC,UAAU,CACnBN,MAAO,CACLS,OAAQ,CAAC,OAAQ,gBAIpBf,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SACZC,MAAM,SAAAC,GACL,OAAOA,KAQN,SAAS7D,EAAU+D,GAcxB,MAAO,CACLT,KAAM,aACNC,QAfcC,MAAMN,EAAS,CAC7Bc,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACRC,eAAgB,oBAElBtG,KAAMuG,KAAKC,UAAU,CAAEN,YAEtBN,KAAK,SAAAC,GAAC,OAAIA,EAAEC,SACZC,MAAM,SAAAC,GACL,OAAOA,KAQN,SAASY,EAAaV,GAC3B,OAAIA,EAAMS,QAAUT,EAAMW,GAejB,CACLpB,KAAM,gBACNC,QAhBcC,MAAMN,EAAS,CAC7Bc,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACRC,eAAgB,oBAElBtG,KAAMuG,KAAKC,UAAU,CAAEN,YAEtBN,KAAK,SAAAC,GAAC,OAAIA,IAEVE,MAAM,SAAAC,GACL,OAAOA,KAQJ,2BAIJ,SAASc,IAEd,MAAO,CACLrB,KAAM,cACNC,QAHcC,MAAK,GAAAvB,OAAIiB,EAAJ,aAAuBO,KAAK,SAAAC,GAAC,OAAIA,EAAEC,UAOnD,SAASiB,EAAWC,GAEzB,MAAO,CACLvB,KAAM,cACNC,QAHcC,MAAK,GAAAvB,OAAIiB,EAAJ,UAAAjB,OAAoB4C,IAAUpB,KAAK,SAAAC,GAAC,OAAIA,EAAEC,+BC5FlDmB,6MAjCbC,YAAc,WACY,mBAApBC,EAAKlD,MAAMpD,MACbsG,EAAKlD,MAAMmD,QAAQC,SAAS,IAC5BF,EAAKlD,MAAMmD,QAAQ7E,SAAS,KAEJ,WAApB4E,EAAKlD,MAAMpD,MACbsG,EAAKlD,MAAMmD,QAAQ7E,SAAS,IAC5B4E,EAAKlD,MAAMmD,QAAQE,KAAKH,EAAKlD,MAAMpD,OAEnCsG,EAAKlD,MAAMmD,QAAQ7E,SAAS,6EAMhC,IAAIgF,EAAeC,IAAMzG,OACrBA,EAASiD,KAAKC,MAAMpD,KASxB,MARe,WAAXE,IACFA,EAAS,SAEPwG,EADEvD,KAAKC,MAAMmD,QAAQK,WACND,IAAM7F,gBAEN6F,IAAM9F,aAIvBkD,EAAAC,EAAAC,cAAA,OAAK4C,QAAS1D,KAAKkD,YAAahC,UAAWqC,GACxCxG,UA5BoBgE,IAAMC,4BCgBpB2C,mLAbX,IAAIC,EAAYJ,IAAMlF,KAEtB,OADI0B,KAAKC,MAAMmD,QAAQK,aAAYG,EAAYJ,IAAMjF,UAEnDqC,EAAAC,EAAAC,cAAA,OAAKI,UAAW0C,GACdhD,EAAAC,EAAAC,cAAC+C,EAAD,CAAgBT,QAASpD,KAAKC,MAAMmD,QAASvG,KAAK,WAClD+D,EAAAC,EAAAC,cAAC+C,EAAD,CAAgBT,QAASpD,KAAKC,MAAMmD,QAASvG,KAAK,YAClD+D,EAAAC,EAAAC,cAAC+C,EAAD,CAAgBT,QAASpD,KAAKC,MAAMmD,QAASvG,KAAK,mBAClD+D,EAAAC,EAAAC,cAAC+C,EAAD,CAAgBT,QAASpD,KAAKC,MAAMmD,QAASvG,KAAK,iBATpCkE,IAAMC,mCCcb8C,6MAfbZ,YAAc,WACZC,EAAKlD,MAAM8D,sFAGX,IAAIC,EAAiBR,IAAMhF,UAI3B,MAHwB,SAApBwB,KAAKC,MAAMgE,OACbD,EAAiBR,IAAM/E,eAGvBmC,EAAAC,EAAAC,cAAA,UAAQ4C,QAAS1D,KAAKkD,YAAahC,UAAW8C,GAC3ChE,KAAKC,MAAMzB,kBAXIuC,IAAMC,4BCMxBkD,6MACJjC,WAAa,WACX,IAAIU,EAAS,GACb,OAAQQ,EAAKlD,MAAMwB,MACjB,IAAK,SACHkB,EAAS,CAAC,OAAQ,UAClB,MACF,QACEA,EAAS,CAAC,OAAQ,UAGtB,IAAIwB,EAAS,GACbA,EAAM,GAAA/D,OAAI+C,EAAKlD,MAAMwB,QAAW0B,EAAKlD,MAAMmE,MAC3C,IAAMlC,EAAQ,CAAEW,GAAIM,EAAKlD,MAAM+C,OAAQL,OAAQA,EAAQwB,OAAQA,GAC/DhB,EAAKlD,MAAMgC,WAAWC,GAClBiB,EAAKlD,MAAMoE,QACblB,EAAKlD,MAAMoE,OAAO,iFAKpB,IAAItH,EAAS,SACTuH,EAAcd,IAAMxG,OACxB,OAAQgD,KAAKC,MAAMwB,MACjB,IAAK,OACH1E,EAAS,SACTuH,EAAcd,IAAMzG,OAChBiD,KAAKC,MAAMmE,QACbE,EAAcd,IAAMvG,IAEtB,MACF,IAAK,OACHF,EAAS,SACTuH,EAAcd,IAAMtG,KAChB8C,KAAKC,MAAMmE,QACbrH,EAAS,SACTuH,EAAcd,IAAMrG,QAM1B,OACEyD,EAAAC,EAAAC,cAAA,UAAQI,UAAWoD,EAAaZ,QAAS1D,KAAKiC,YAC3ClF,UA5CgBgE,IAAMC,WA2DhBuD,cALS,SAAAC,GACtB,MAAO,CACLvC,WAAYuC,EAAMvC,aANK,SAAAwC,GACzB,OAAOC,YAAmB,CAAEzC,WAAYA,GAAcwC,IAQzCF,CAGbL,oBC3DaS,mLAPX,IAAIC,EAAcpB,IAAM7E,OAIxB,MAHwB,SAApBqB,KAAKC,MAAMgE,OACbW,EAAcpB,IAAM5E,YAEfgC,EAAAC,EAAAC,cAAA,OAAKI,UAAW0D,GAAhB,KAAgC5E,KAAKC,MAAMtB,eANjCoC,IAAMC,WCCZ6D,EAJM,SAAA5E,GACnB,UAAAG,OAAWH,EAAM6E,OAAjB,KAAA1E,OAA2BH,EAAM8E,yBCgEpBC,eAvDb,SAAAA,EAAY/E,GAAO,IAAAkD,EAAA,OAAA8B,OAAAC,EAAA,EAAAD,CAAAjF,KAAAgF,IACjB7B,EAAA8B,OAAAE,EAAA,EAAAF,CAAAjF,KAAAiF,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAArF,KAAMC,KAIRiD,YAAc,WACZC,EAAKlD,MAAMqF,SAASnC,EAAKlD,MAAMsF,KAAKC,MAHpCrC,EAAKD,YAAcC,EAAKD,YAAYuC,KAAjBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA9B,KAHFA,wEAUjB,IAAM9G,EAAI,GAAA+D,OAAMJ,KAAKC,MAAMsF,KAAKlJ,KAAKsJ,QAAQ,iBAAkB,KAArD,OACNC,EAAYpC,IAAMxH,KAItB,OAHIgE,KAAKC,MAAMsF,KAAKrI,OAClB0I,EAAYpC,IAAMpG,UAGlBwD,EAAAC,EAAAC,cAAA,WAASI,UAAW0E,EAAWC,IAAK7F,KAAKC,MAAMsF,KAAKC,KAClD5E,EAAAC,EAAAC,cAACgF,EAAD,CACE7B,KAAK,OACLF,WAAY/D,KAAKkD,YACjB1E,UAAWwB,KAAKC,MAAMsF,KAAKhI,QAE7BqD,EAAAC,EAAAC,cAAA,WAASI,UAAWsC,IAAMvH,YACxB2E,EAAAC,EAAAC,cAACiF,EAAD,CAAQ9B,KAAK,OAAOtF,OAAQqB,KAAKC,MAAMsF,KAAK5G,SAC5CiC,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,IAAMpH,gBACpBwE,EAAAC,EAAAC,cAACkF,EAAD,CACEvE,KAAK,OACL2C,MAAOpE,KAAKC,MAAMsF,KAAKU,KACvBjD,OAAQhD,KAAKC,MAAMsF,KAAKC,MAE1B5E,EAAAC,EAAAC,cAACkF,EAAD,CACEvE,KAAK,OACL2C,MAAOpE,KAAKC,MAAMsF,KAAKrI,KACvB8F,OAAQhD,KAAKC,MAAMsF,KAAKC,QAI9B5E,EAAAC,EAAAC,cAAA,WACEI,UAAWsC,IAAMnH,KACjBqH,QAAS1D,KAAKkD,YACdgD,wBAAyB,CAAEC,OAAQ9J,KAErCuE,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACM,EAAD,CAAUlB,UAAW,IAAIH,KAAKC,KAAKC,MAAMsF,KAAKa,aAC9CxF,EAAAC,EAAAC,cAACuF,EAAD,CACEvB,OAAQ9E,KAAKC,MAAMsF,KAAKe,SACxBvB,MAAM,OACNd,KAAK,kBAhDMlD,IAAMC,+BCCduF,oLALX,IAAIC,EAAehD,KAAM3E,QAEzB,OADImB,KAAKC,MAAMwG,OAAMD,EAAehD,KAAM1E,aACnC8B,EAAAC,EAAAC,cAAA,OAAKI,UAAWsF,WAJLzF,IAAMC,mDCUb/C,GATD,SAAAgC,GACZ,OACEW,EAAAC,EAAAC,cAAA,QAAMI,UAAWsC,KAAMzF,cACrB6C,EAAAC,EAAAC,cAAA,KAAGI,UAAWsC,KAAMxF,YAApB,SACA4C,EAAAC,EAAAC,cAAA,KAAGI,UAAWsC,KAAMvF,OAAQgC,EAAM5B,WCIlCqI,8MAcJC,WAAa,WACXxD,EAAKlD,MAAMuB,WAAWI,KAAK,SAAAgF,SAE7BC,iBAAmB,SAAA7D,GACjBG,EAAKlD,MAAM8C,WAAWC,GAAQpB,KAAK,SAAAgF,GACjCzD,EAAKlD,MAAM6G,SAASF,0FAjBtB5G,KAAK2G,yDAIL3G,KAAK+G,UAAYC,YAAYhH,KAAK2G,WAAY,KAC9CM,OAAOC,SAAS,EAAG,kDAInBC,cAAcnH,KAAK+G,4CAWZ,IAAAK,EAAApH,KACD3B,EAAU2B,KAAKC,MAAMoH,MAAMhJ,QACjC,OAAIA,EACKuC,EAAAC,EAAAC,cAACwG,GAAD,CAAOjJ,QAASA,IAGvBuC,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAM3F,MACnBmC,KAAKC,MAAMoH,MAAME,IAAI,SAAAhC,GACpB,OAAK6B,EAAKnH,MAAMoD,UAAakC,EAAKrI,KAOvBkK,EAAKnH,MAAMoD,SAElBzC,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAM1F,SAAU+H,IAAKN,EAAKC,KACxC5E,EAAAC,EAAAC,cAAC0G,GAAD,CAAUlC,SAAU8B,EAAKP,iBAAkBtB,KAAMA,IACjD3E,EAAAC,EAAAC,cAAC2G,GAAD,CAAShB,MAAI,KAIV,KAbL7F,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAM1F,SAAU+H,IAAKN,EAAKC,KACxC5E,EAAAC,EAAAC,cAAC0G,GAAD,CAAUlC,SAAU8B,EAAKP,iBAAkBtB,KAAMA,IACjD3E,EAAAC,EAAAC,cAAC2G,GAAD,CAAShB,MAAI,eAlCF1F,IAAMC,WAiElBuD,eARS,SAAAC,GACtB,MAAO,CACL6C,MAAO7C,EAAM6C,MACbtE,WAAYyB,EAAMzB,WAClB2E,aAAclD,EAAMkD,eARG,SAAAjD,GACzB,OAAOC,YAAmB,CAAElD,WAAUuB,cAAc0B,IAWvCF,CAGbmC,wBC3CaiB,8MAhCbzE,YAAc,WACY,QAApBC,EAAKlD,MAAMwB,MAAgB0B,EAAKlD,MAAMqD,KAAK,IACvB,WAApBH,EAAKlD,MAAMwB,MAAmB0B,EAAKlD,MAAM2H,aAAa,IAClC,YAApBzE,EAAKlD,MAAMwB,MAAoB0B,EAAKlD,MAAM4H,QAAQ,IAC9B,SAApB1E,EAAKlD,MAAMwB,MACb0B,EAAKlD,MAAM6H,iBAAiB3E,EAAKlD,MAAM8H,mFAGzC,IAAIhL,EAAS,aACTuH,EAAcd,KAAMzG,OACxB,OAAQiD,KAAKC,MAAMwB,MACjB,IAAK,OACH1E,EAAS,SACT,MACF,IAAK,UACHA,EAAS,UACTuH,EAAcd,KAAMpF,cACpB,MACF,IAAK,MACHkG,EAAcd,KAAMrF,UACpB,MACF,QACEpB,EAAS,SAEb,OACE6D,EAAAC,EAAAC,cAAA,UAAQI,UAAWoD,EAAaZ,QAAS1D,KAAKkD,aAC3CnG,UA3BkBgE,IAAMC,8BCyGlBgH,eAxGb,SAAAA,EAAY/H,GAAO,IAAAkD,EAAA,OAAA8B,OAAAC,EAAA,EAAAD,CAAAjF,KAAAgI,GACjB7E,EAAA8B,OAAAE,EAAA,EAAAF,CAAAjF,KAAAiF,OAAAG,EAAA,EAAAH,CAAA+C,GAAA3C,KAAArF,KAAMC,IAEFA,EAAMtB,OACRwE,EAAKqB,MAAQ,CACX3H,KAAMoD,EAAMtB,OAAO9B,KACnBC,IAAKmD,EAAMtB,OAAO7B,IAClBmL,KAAMhI,EAAMtB,OAAOsJ,MAGrB9E,EAAKqB,MAAQ,CACX3H,KAAM,GACNC,IAAK,GACLmL,KAAM,IAIV9E,EAAK+E,aAAe/E,EAAK+E,aAAazC,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA9B,KACpBA,EAAKgF,aAAehF,EAAKgF,aAAa1C,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAA9B,KAlBHA,4EAqBNiF,GACX,IAAIC,EAAS,GAEbA,EADYD,EAAME,OAAOzL,MACTuL,EAAME,OAAOlE,MAC7BpE,KAAKuI,SAASF,wCAEHD,GACXA,EAAMI,iBAEN,IAAMC,EAAS,CACb5L,KAAMuL,EAAME,OAAO,GAAGlE,MACtBtH,IAAKsL,EAAME,OAAO,GAAGlE,MACrB6D,KAAMG,EAAME,OAAO,GAAGlE,OAGxB,GAAwB,WAApBpE,KAAKC,MAAMgE,KAOb,GAJEwE,EAAO5L,OAASmD,KAAKC,MAAMtB,OAAO9B,MAClC4L,EAAO3L,MAAQkD,KAAKC,MAAMtB,OAAO7B,KACjC2L,EAAOR,OAASjI,KAAKC,MAAMtB,OAAOsJ,KAQlCjI,KAAKC,MAAM6H,uBANG,CACd,IAAM5F,EAAQ,CAAEW,GAAI7C,KAAKC,MAAMtB,OAAO6G,IAAKiD,OAAQA,GACnDzI,KAAKC,MAAM6H,mBACX9H,KAAKC,MAAMwC,aAAaP,OAMG,WAApBlC,KAAKC,MAAMgE,OACpBjE,KAAKC,MAAMoE,SACXrE,KAAKC,MAAMyI,OAAOD,qCAKpB,OACE7H,EAAAC,EAAAC,cAAA,QAAM6H,SAAU3I,KAAKmI,aAAcjH,UAAWsC,KAAM5H,YAClDgF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAM1H,YAAtB,QACA8E,EAAAC,EAAAC,cAAA,SACEI,UAAWsC,KAAMoF,MACjBnH,KAAK,OACL5E,KAAK,OACLuH,MAAOpE,KAAKwE,MAAM3H,KAClBgM,SAAU7I,KAAKkI,gBAGnBtH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAM1H,YAAtB,OACA8E,EAAAC,EAAAC,cAAA,SACEW,KAAK,OACL5E,KAAK,MACLuH,MAAOpE,KAAKwE,MAAM1H,IAClB+L,SAAU7I,KAAKkI,gBAGnBtH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAM1H,YAAtB,YACA8E,EAAAC,EAAAC,cAAA,SACEW,KAAK,OACL5E,KAAK,OACLuH,MAAOpE,KAAKwE,MAAMyD,KAClBY,SAAU7I,KAAKkI,gBAGnBtH,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAMzH,QACpB6E,EAAAC,EAAAC,cAAA,UACEI,UAAWsC,KAAMsF,OACjBC,GAAG,QACHtH,KAAK,SACL2C,MAAM,UAELpE,KAAKC,MAAMgE,eAjGGlD,IAAMC,+BC4ClBgI,8MAzCbpB,aAAe,WACbzE,EAAKlD,MAAM2H,aAAazE,EAAKlD,MAAMtB,OAAO6G,8EAG1C,IAAIyD,GAAW,EAMf,OAJEjJ,KAAKC,MAAMiJ,mBAAqBlJ,KAAKC,MAAMtB,OAAO6G,KAClDxF,KAAKC,MAAMgJ,WAEXA,GAAW,GAEXrI,EAAAC,EAAAC,cAAA,WAASI,UAAWsC,KAAM9G,gBACxBkE,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAM7G,SACpBiE,EAAAC,EAAAC,cAAA,WAASI,UAAWsC,KAAM5G,aACxBgE,EAAAC,EAAAC,cAAA,KAAG4C,QAAS1D,KAAKmJ,OAAQjI,UAAWsC,KAAM3G,MACvCmD,KAAKC,MAAMtB,OAAO9B,MAErB+D,EAAAC,EAAAC,cAAA,KAAGI,UAAWsC,KAAM1G,KAAMkD,KAAKC,MAAMtB,OAAO7B,MAE9C8D,EAAAC,EAAAC,cAAA,WAASI,UAAWsC,KAAMpH,gBACxBwE,EAAAC,EAAAC,cAACsI,GAAD,CACE3H,KAAK,OACLqG,iBAAkB9H,KAAKC,MAAM6H,iBAC7BC,SAAU/H,KAAKC,MAAMtB,OAAO6G,MAE9B5E,EAAAC,EAAAC,cAACsI,GAAD,CAAc3H,KAAK,SAASmG,aAAc5H,KAAK4H,iBAGlDqB,EACCrI,EAAAC,EAAAC,cAACuI,GAAD,CACEpF,KAAK,SACL6D,iBAAkB9H,KAAKC,MAAM6H,iBAC7BnJ,OAAQqB,KAAKC,MAAMtB,OACnB8D,aAAczC,KAAKC,MAAMwC,eAEzB,aApCa1B,IAAMC,+BCSzBsI,8MACJ9E,MAAQ,CACN+E,eAAe,EACfC,gBAAgB,EAChBN,iBAAkB,GAClB7K,QAAS,MAGXoL,gBAAkB,WAEZtG,EAAKqB,MAAMgF,gBACbrG,EAAKoF,SAAS,CACZiB,gBAAgB,EAChBN,iBAAkB,KAEtB/F,EAAKoF,SAAS,SAAA/D,GAAK,MAAK,CACtB+E,eAAgBpG,EAAKqB,MAAM+E,oBAI/BzB,iBAAmB,SAAAjF,GACjB6G,QAAQC,IAAI9G,GACZ6G,QAAQC,IAAIxG,EAAKqB,MAAMgF,gBACvBE,QAAQC,IAAIxG,EAAKqB,MAAM0E,kBAEnB/F,EAAKqB,MAAM+E,eAAepG,EAAKoF,SAAS,CAAEgB,eAAe,IAEzDpG,EAAKqB,MAAMgF,eAET3G,IAAOM,EAAKqB,MAAM0E,iBACpB/F,EAAKoF,SAAS,CACZiB,gBAAiBrG,EAAKqB,MAAMgF,eAC5BN,iBAAkBrG,IAGXA,GAAMA,IAAOM,EAAKqB,MAAM0E,iBACjC/F,EAAKoF,SAAS,CACZiB,gBAAgB,EAChBN,iBAAkBrG,IAGpBM,EAAKoF,SAAS,CACZiB,gBAAgB,EAChBN,iBAAkB,KAMtB/F,EAAKoF,SAAS,CACZiB,gBAAgB,EAChBN,iBAAkBrG,OAKxB+G,cAAgB,SAAAvL,GACd8E,EAAKoF,SAAS,CAAElK,QAASA,IACzBwL,WAAW1G,EAAK2G,aAAc,QAehCC,aAAe,WACb5G,EAAKlD,MAAM6C,gBAGbgH,aAAe,WACb3G,EAAKoF,SAAS,CAAElK,QAAS,QAG3B2L,aAAe,SAAA7F,GACO,KAAhBA,EAAOtH,MAA+B,KAAhBsH,EAAO8D,MAA8B,KAAf9D,EAAOrH,KACrDqG,EAAKyG,cAAc,wCACrB,IAAMK,EAAU,CAAEtH,OAAQ,CAAC,SAAU,UAAWwB,UAChDhB,EAAKlD,MAAM9B,UAAU8L,MAGvBxH,aAAe,SAAA0B,GAEY,KAAvBA,EAAOsE,OAAO5L,MACS,KAAvBsH,EAAOsE,OAAOR,MACQ,KAAtB9D,EAAOsE,OAAO3L,KACO,KAArBqH,EAAOsE,OAAO5F,IAEdM,EAAKyG,cAAc,wCACrB,IAAMK,EAAU,CACdtH,OAAQ,CAAC,SAAU,UACnBE,GAAIsB,EAAOtB,GACXsB,OAAQA,EAAOsE,QAEjBtF,EAAKlD,MAAMwC,aAAawH,MAG1BrC,aAAe,SAAA/E,GACb,IAAMoH,EAAU,CAAEtH,OAAQ,CAAC,SAAU,UAAWE,GAAIA,GACpDM,EAAKlD,MAAM2C,aAAaqH,GACxB9G,EAAK4G,kBAGPG,mBAAqB,WACnB/G,EAAKlD,MAAMyC,oGAjDX1C,KAAK+J,2DAIL/J,KAAK+G,UAAYC,YAAYhH,KAAK+J,aAAc,oDAIhD5C,cAAcnH,KAAK+G,4CA4CZ,IAAAK,EAAApH,KACP,OACEY,EAAAC,EAAAC,cAAA,WAASI,UAAWsC,KAAM7G,SACxBiE,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAMpH,gBACnB4D,KAAKC,MAAMkK,QAAQC,OAAS,EAC3BxJ,EAAAC,EAAAC,cAACsI,GAAD,CACE3H,KAAK,UACLoG,QAAS7H,KAAKkK,mBACdrN,KAAK,YAEL,KACJ+D,EAAAC,EAAAC,cAACsI,GAAD,CACE3H,KAAK,MACL6B,KAAMtD,KAAKyJ,gBACX5M,KAAK,gBAGRmD,KAAKwE,MAAM+E,cACV3I,EAAAC,EAAAC,cAACuI,GAAD,CACEpF,KAAK,SACLyE,OAAQ1I,KAAKgK,aACb3F,OAAQrE,KAAKyJ,kBAEb,KACoB,KAAvBzJ,KAAKwE,MAAMnG,QAAiB,KAC3BuC,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAMnF,SAAU2B,KAAKwE,MAAMnG,SAE5C2B,KAAKC,MAAMkK,QAAQ5C,IAAI,SAAA5I,GACtB,OACEiC,EAAAC,EAAAC,cAACuJ,GAAD,CACE1L,OAAQA,EACRkH,IAAKlH,EAAO6G,IACZoC,aAAcR,EAAKQ,aACnBqB,SAAU7B,EAAK5C,MAAMgF,eACrBN,iBAAkB9B,EAAK5C,MAAM0E,iBAC7BpB,iBAAkBV,EAAKU,iBACvBrF,aAAc2E,EAAK3E,yBAtJP1B,IAAMC,WA+KjBuD,eAVS,SAAAC,GACtB,MAAO,CACL2F,QAAS3F,EAAM2F,QACfhM,UAAWqG,EAAMrG,UACjByE,aAAc4B,EAAM5B,aACpBF,aAAcA,EACdD,aAAcA,IAbS,SAAAgC,GACzB,OAAOC,YACL,CAAE5B,aAAY3E,YAAWyE,eAAcF,eAAcD,gBACrDgC,IAcWF,CAGb+E,wBCrHagB,8MAjEbpH,YAAc,WACZ+D,OAAOsD,KAAKpH,EAAKlD,MAAMsF,KAAKzI,IAAK,aAGnC0N,kBAAoB,WAClBvD,OAAOC,SAAS,EAAG,4EAInB,IAAI/K,EAAS,GAMb,OAFEA,EAHG6D,KAAKC,MAAMsF,KAAKpJ,OAGb,MAAAiE,OAASJ,KAAKC,MAAMsF,KAAKpJ,QAFtB,GAKTyE,EAAAC,EAAAC,cAAA,WAASI,UAAWsC,KAAMxH,MACxB4E,EAAAC,EAAAC,cAACgF,EAAD,CACE7B,KAAK,OACLF,WAAY/D,KAAKkD,YACjB1E,UAAWwB,KAAKC,MAAMsF,KAAKhI,QAE7BqD,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAMvH,YACpB2E,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAMtH,qBACpB0E,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAMrH,QAASA,GAC/ByE,EAAAC,EAAAC,cAACiF,EAAD,CAAQ9B,KAAK,OAAOtF,OAAQqB,KAAKC,MAAMsF,KAAK5G,UAE9CiC,EAAAC,EAAAC,cAAA,OAAKI,UAAWsC,KAAMpH,gBACpBwE,EAAAC,EAAAC,cAACkF,EAAD,CACEvE,KAAK,OACL2C,MAAOpE,KAAKC,MAAMsF,KAAKU,KACvBjD,OAAQhD,KAAKC,MAAMsF,KAAKC,MAE1B5E,EAAAC,EAAAC,cAACkF,EAAD,CACEvE,KAAK,SACLuB,OAAQhD,KAAKC,MAAMsF,KAAKC,IACxBnB,OAAQrE,KAAKC,MAAMoE,WAIzBzD,EAAAC,EAAAC,cAAA,WACEI,UAAWsC,KAAMnH,KACjB6J,wBAAyB,CACvBC,OAAQnG,KAAKC,MAAMsF,KAAKlJ,QAG5BuE,EAAAC,EAAAC,cAAC2G,GAAD,MACA7G,EAAAC,EAAAC,cAAA,UAAQI,UAAWsC,KAAM/G,YACvBmE,EAAAC,EAAAC,cAACM,EAAD,CACET,IAAI,aACJT,UAAW,IAAIH,KAAKC,KAAKC,MAAMsF,KAAKa,WACpCnC,KAAK,SAEPrD,EAAAC,EAAAC,cAACM,EAAD,CACET,IAAI,UACJT,UAAW,IAAIH,KAAKC,KAAKC,MAAMsF,KAAKkF,QACpCxG,KAAK,SAEPrD,EAAAC,EAAAC,cAACuF,EAAD,CAAcvB,OAAQ9E,KAAKC,MAAMsF,KAAKmF,MAAO3F,MAAM,mBA3DtChE,IAAMC,WCEvB2J,eACJ,SAAAA,EAAY1K,GAAO,IAAAkD,EAAA,OAAA8B,OAAAC,EAAA,EAAAD,CAAAjF,KAAA2K,IACjBxH,EAAA8B,OAAAE,EAAA,EAAAF,CAAAjF,KAAAiF,OAAAG,EAAA,EAAAH,CAAA0F,GAAAtF,KAAArF,KAAMC,KAQR2K,SAAW,SAAA5H,GACT,IAEMd,EAAQ,CAAEW,GAAIG,EAAQL,OAFf,CAAC,OAAQ,UAEsBwB,OAD/B,CAAEjH,MAAM,IAErBiG,EAAKlD,MAAMgC,WAAWC,IAbLiB,EAgBnB0H,cAAgB,SAAAtF,GACdpC,EAAKoF,SAAS,CAAEhD,KAAMA,EAAK7D,UAC3ByB,EAAK2H,WAAW,QAChB3H,EAAKyH,SAASrF,EAAK7D,QAAQ8D,MAnBVrC,EAqBnB2H,WAAa,SAAApP,GACXyH,EAAKoF,SAAS,SAAA/D,GAAK,MAAK,CAAE9I,OAAQA,MAtBjByH,EAwBnB5E,SAAW,WACT4E,EAAKoF,SAAS,CACZhK,UAAW4E,EAAKqB,MAAMjG,YA1BP4E,EA6BnBE,SAAW,WACTF,EAAKoF,SAAS,CACZlF,UAAWF,EAAKqB,MAAMnB,YA7BxBF,EAAKqB,MAAQ,CACXe,KAAM,GACN7J,OAAQ,OACR6C,UAAU,EACV8E,UAAU,GANKF,wEAoCjB,IAAMC,EAAU,CACdE,KAAMtD,KAAK8K,WACXvM,SAAUyB,KAAKzB,SACfkF,WAAYzD,KAAKwE,MAAMjG,SACvB8E,SAAUrD,KAAKqD,UAEb3H,EACFkF,EAAAC,EAAAC,cAACiK,GAAD,CACEjE,SAAU9G,KAAK6K,cACfxH,SAAUrD,KAAKwE,MAAMnB,WAGzB,OAAQrD,KAAKwE,MAAM9I,QACjB,IAAK,OACHA,EAASkF,EAAAC,EAAAC,cAACkK,GAAD,CAAUzF,KAAMvF,KAAKwE,MAAMe,KAAMlB,OAAQrE,KAAK8K,aACvD,MACF,IAAK,UACHpP,EAASkF,EAAAC,EAAAC,cAACmK,GAAD,MAKb,OACErK,EAAAC,EAAAC,cAAA,WACGpF,EACDkF,EAAAC,EAAAC,cAACoK,EAAD,CAAS9H,QAASA,YA9DGrC,IAAMC,WA6EpBuD,eALS,SAAAC,GACtB,MAAO,CACLvC,WAAYuC,EAAMvC,aANK,SAAAwC,GACzB,OAAOC,YAAmB,CAAEzC,WAAYA,GAAcwC,IAQzCF,CAGboG,IC5EaQ,oLATX,OACEvK,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACsK,EAAD,MACAxK,EAAAC,EAAAC,cAACuK,GAAD,cALUtK,IAAMC,iBCOJsK,QACW,cAA7BrE,OAAOsE,SAASC,UAEe,UAA7BvE,OAAOsE,SAASC,UAEhBvE,OAAOsE,SAASC,SAASC,MACvB,2DCSNC,IAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,6BAA8B,4BAI7C,IAYMC,GAAWC,YAAgB,CAC/B1E,MC9Ca,WAAwB,IAAvB7C,EAAuBwH,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIrJ,EAAWqJ,UAAA5B,OAAA,EAAA4B,UAAA,QAAAC,EAErC,OAAQtJ,EAAOlB,MACb,IAAK,YACH,OAAOkB,EAAOjB,QAChB,QACE,OAAO8C,IDyCX2F,QE/Ca,WAAwB,IAAvB3F,EAAuBwH,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIrJ,EAAWqJ,UAAA5B,OAAA,EAAA4B,UAAA,QAAAC,EAErC,OAAQtJ,EAAOlB,MACb,IAAK,cACH,OAAOkB,EAAOjB,QAChB,QACE,OAAO8C,IF0CXrG,UGhDa,WAAwB,IAAvBqG,EAAuBwH,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIrJ,EAAWqJ,UAAA5B,OAAA,EAAA4B,UAAA,QAAAC,EAErC,OAAQtJ,EAAOlB,MACb,IAAK,aACH,OAAOkB,EAAOjB,QAChB,QACE,OAAO8C,IH2CXzB,WIjDa,WAAwB,IAAvByB,EAAuBwH,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIrJ,EAAWqJ,UAAA5B,OAAA,EAAA4B,UAAA,QAAAC,EAErC,OAAQtJ,EAAOlB,MACb,IAAK,cACH,OAAOkB,EAAOjB,QAChB,QACE,OAAO8C,IJ4CXvC,WKlDa,WAAwB,IAAvBuC,EAAuBwH,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIrJ,EAAWqJ,UAAA5B,OAAA,EAAA4B,UAAA,QAAAC,EAErC,OAAQtJ,EAAOlB,MACb,IAAK,cACH,OAAOkB,EAAOjB,QAChB,QACE,OAAO8C,IL6CX/B,aMnDa,WAAwB,IAAvB+B,EAAuBwH,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIrJ,EAAWqJ,UAAA5B,OAAA,EAAA4B,UAAA,QAAAC,EAErC,OAAQtJ,EAAOlB,MACb,IAAK,gBACH,OAAOkB,EAAOjB,QAChB,QACE,OAAO8C,IN8CX5B,aOpDa,WAAwB,IAAvB4B,EAAuBwH,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIrJ,EAAWqJ,UAAA5B,OAAA,EAAA4B,UAAA,QAAAC,EAErC,OAAQtJ,EAAOlB,MACb,IAAK,gBACH,OAAOkB,EAAOjB,QAChB,QACE,OAAO8C,IP+CX0H,oBQrDa,WAAwB,IAAvB1H,EAAuBwH,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIrJ,EAAWqJ,UAAA5B,OAAA,EAAA4B,UAAA,QAAAC,EAErC,OAAQtJ,EAAOlB,MACb,IAAK,cACH,OAAOkB,EAAOjB,QAChB,QACE,OAAO8C,IRgDX2H,mBStDa,WAAwB,IAAvB3H,EAAuBwH,UAAA5B,OAAA,QAAA6B,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIrJ,EAAWqJ,UAAA5B,OAAA,EAAA4B,UAAA,QAAAC,EAErC,OAAQtJ,EAAOlB,MACb,IAAK,cACH,OAAOkB,EAAOjB,QAChB,QACE,OAAO8C,MToDP4H,IADmBnF,OAAOoF,sCAAwCC,KACnCC,YAAgBC,IAAcC,WAEnEC,IAASC,OACP/L,EAAAC,EAAAC,cAAC8L,EAAA,EAAD,CAAUC,MAAOC,YAAYhB,GA5BV,CACnBzE,MAAO,GACP8C,QAAS,GACThM,UAAW,GACX8D,WAAY,GACZc,WAAY,GACZoJ,oBAAoB,EACpBvJ,aAAc,GACdsJ,oBAAqB,IAoBgCE,KACnDxL,EAAAC,EAAAC,cAACiM,GAAD,OAEFC,SAASC,eAAe,SDiEpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxL,KAAK,SAAAyL,GACjCA,EAAaC","file":"static/js/main.8a2d5c9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"createForm\":\"SourceCreate_createForm__ip7VY\",\"openForm\":\"SourceCreate_openForm__LzWuh\",\"labelTitle\":\"SourceCreate_labelTitle__1cXrb\",\"center\":\"SourceCreate_center__2kQsx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostShow_body__2WmAE\",\"secondLine\":\"PostShow_secondLine__3vwd2\",\"sourceAuthorWrapper\":\"PostShow_sourceAuthorWrapper__1tVgH\",\"author\":\"PostShow_author__2BZMA\",\"buttonsWrapper\":\"PostShow_buttonsWrapper__2AD4t\",\"text\":\"PostShow_text__2EVp7\",\"signature\":\"PostShow_signature__2pbhX\",\"book-cta\":\"PostShow_book-cta__J9QoZ\",\"border-bottom\":\"PostShow_border-bottom__21nEI\",\"statusLine\":\"PostShow_statusLine__18MQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionWrapper\":\"SourceCard_sectionWrapper__cLh38\",\"section\":\"SourceCard_section__1GsAX\",\"nameWrapper\":\"SourceCard_nameWrapper__2qkrb\",\"name\":\"SourceCard_name__3dZ2_\",\"url\":\"SourceCard_url__3DiHr\",\"buttonsWrapper\":\"SourceCard_buttonsWrapper__2bEZR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PostButton_button__2W_Fb\",\"delete\":\"PostButton_delete__2KLD_\",\"on\":\"PostButton_on__MT6cS\",\"read\":\"PostButton_read__1Wxur\",\"unRead\":\"PostButton_unRead__kKFrQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"PostCard_body__1dWen\",\"bodyRead\":\"PostCard_bodyRead__2-ozQ\",\"text\":\"PostCard_text__LS6Tr\",\"secondLine\":\"PostCard_secondLine__8KX_q\",\"statsLine\":\"PostCard_statsLine__3e0dV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newsletterHead\":\"TitleBar_newsletterHead__O-_qt\",\"title\":\"TitleBar_title__3YLqa\",\"timeStamp\":\"TitleBar_timeStamp__3J601\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"NavMenuElement_element__df_g8\",\"button\":\"NavMenuElement_button__2gpJC\",\"buttonArrow\":\"NavMenuElement_buttonArrow__3lPn9\",\"buttonArrowOpen\":\"NavMenuElement_buttonArrowOpen__gmt7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PostCardList_content__2V28v\",\"grid\":\"PostCardList_grid__lArsm\",\"gridCell\":\"PostCardList_gridCell__1xCNd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrapper\":\"Error_errorWrapper__1935b\",\"errorTitle\":\"Error_errorTitle__2ctO9\",\"error\":\"Error_error__2O-9n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SourceButton_button__1TMyL\",\"buttonDims\":\"SourceButton_buttonDims__2J6RB\",\"addSource\":\"SourceButton_addSource__Q5b6a\",\"refreshSource\":\"SourceButton_refreshSource__3zNOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"SourcesList_section__2QZ_A\",\"message\":\"SourcesList_message__1ujgw\",\"buttonsWrapper\":\"SourcesList_buttonsWrapper__zvfx3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"NavMenu_menu__3DpfU\",\"menuOpen\":\"NavMenu_menuOpen__3P4RL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PostTitle_title__3Rtbu\",\"postTitle\":\"PostTitle_postTitle__1exmo\",\"postTitleShow\":\"PostTitle_postTitleShow__YJbat\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sourceFormat\":\"Source_sourceFormat__3I71m\",\"source\":\"Source_source__39_G7\",\"sourceShow\":\"Source_sourceShow__2Gc-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divider\":\"Divider_divider__1AOMc\",\"dividerCard\":\"Divider_dividerCard__qxBqq\"};","import React from 'react';\n\nconst months = {\n  1: 'Jan',\n  2: 'Feb',\n  3: 'Mar',\n  4: 'Apr',\n  5: 'May',\n  6: 'Jun',\n  7: 'Jul',\n  8: 'Aug',\n  9: 'Sep',\n  10: 'Oct',\n  11: 'Nov',\n  12: 'Dec'\n};\nconst daysOfWeek = {\n  1: 'Sun',\n  2: 'Mon',\n  3: 'Tue',\n  4: 'Wed',\n  5: 'Thu',\n  6: 'Fri',\n  7: 'Sat'\n};\n\nclass DateTime extends React.Component {\n  render() {\n    let dateFromDb = new Date();\n    if (this.props.timestamp) {\n      dateFromDb = new Date(this.props.timestamp);\n    }\n    let timeToDisplay = `${dateFromDb.getHours()}:${dateFromDb.getMinutes()} am`;\n    if (dateFromDb.getHours() > 12) {\n      timeToDisplay = `${dateFromDb.getHours() -\n        12}:${dateFromDb.getMinutes()} pm`;\n    }\n    let dateTimeString = `${\n      daysOfWeek[dateFromDb.getDay() + 1]\n    } ${dateFromDb.getDate()} ${\n      months[dateFromDb.getMonth() + 1]\n    } at ${timeToDisplay}`;\n    if (this.props.pre) {\n      dateTimeString = `${this.props.pre} ${dateTimeString}`;\n    }\n    return <div>{dateTimeString}</div>;\n  }\n}\n\nexport default DateTime;\n","import React from 'react';\n\nimport DateTime from '../DateTime';\nimport styles from './TitleBar.module.scss';\n\nexport default class TitleBar extends React.Component {\n  render() {\n    return (\n      <header className={styles.newsletterHead}>\n        <div className={styles.title}>The Newsletter</div>\n        <time className={styles.timeStamp}>\n          <DateTime />\n        </time>\n      </header>\n    );\n  }\n}\n","const postUrl =\n  process.env.REACT_APP_API_URL ||\n  'https://the-newsletter-app.herokuapp.com/api';\n\nexport function setPosts() {\n  const promise = fetch(`${postUrl}/list`)\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'SET_POSTS',\n    payload: promise\n  };\n}\nexport function updatePost(query) {\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'UPDATE_POST',\n    payload: promise\n  };\n}\nexport function updateSource(query) {\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'UPDATE_SOURCE',\n    payload: promise\n  };\n}\nexport function refreshPosts() {\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: {\n        action: ['post', 'refresh']\n      }\n    })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'REFRESH_POSTS',\n    payload: promise\n  };\n}\nexport function addSource(query) {\n  const promise = fetch(postUrl, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  })\n    .then(r => r.json())\n    .catch(e => {\n      return e;\n    });\n\n  return {\n    type: 'ADD_SOURCE',\n    payload: promise\n  };\n}\nexport function deleteSource(query) {\n  if (query.action && query.id) {\n    const promise = fetch(postUrl, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ query })\n    })\n      .then(r => r)\n      // r.json())\n      .catch(e => {\n        return e;\n      });\n\n    return {\n      type: 'DELETE_SOURCE',\n      payload: promise\n    };\n  } else {\n    return 'Missing action and/or id';\n  }\n}\n\nexport function setSources() {\n  const promise = fetch(`${postUrl}/sources`).then(r => r.json());\n  return {\n    type: 'SET_SOURCES',\n    payload: promise\n  };\n}\n\nexport function selectPost(postId) {\n  const promise = fetch(`${postUrl}/post/${postId}`).then(r => r.json());\n  return {\n    type: 'SELECT_POST',\n    payload: promise\n  };\n}\n\nexport function sourceCreateModule(status) {\n  return {\n    type: 'SHOW_MODULE',\n    payload: status\n  };\n}\n","import React from 'react';\n\nimport style from './NavMenuElement.module.scss';\n\nclass NavMenuElement extends React.Component {\n  handleClick = () => {\n    if (this.props.name === 'Show/Hide Read') {\n      this.props.options.showRead('');\n      this.props.options.menuOpen('');\n    } else {\n      if (this.props.name !== 'toggle') {\n        this.props.options.menuOpen('');\n        this.props.options.show(this.props.name);\n      } else {\n        this.props.options.menuOpen('');\n      }\n    }\n  };\n\n  render() {\n    let elementStyle = style.button;\n    let button = this.props.name;\n    if (button === 'toggle') {\n      button = '⋮';\n      if (this.props.options.menuStatus) {\n        elementStyle = style.buttonArrowOpen;\n      } else {\n        elementStyle = style.buttonArrow;\n      }\n    }\n    return (\n      <div onClick={this.handleClick} className={elementStyle}>\n        {button}\n      </div>\n    );\n  }\n}\n\nexport default NavMenuElement;\n","import React from 'react';\n\nimport NavMenuElement from './NavMenuElement';\nimport style from './NavMenu.module.scss';\n\nclass NavMenu extends React.Component {\n  render() {\n    let menuStyle = style.menu;\n    if (this.props.options.menuStatus) menuStyle = style.menuOpen;\n    return (\n      <nav className={menuStyle}>\n        <NavMenuElement options={this.props.options} name=\"toggle\" />\n        <NavMenuElement options={this.props.options} name=\"Sources\" />\n        <NavMenuElement options={this.props.options} name=\"Show/Hide Read\" />\n        <NavMenuElement options={this.props.options} name=\"Home\" />\n      </nav>\n    );\n  }\n}\n\nexport default NavMenu;\n","import React from 'react';\n\nimport style from './PostTitle.module.scss';\nclass PostTitle extends React.Component {\n  handleClick = () => {\n    this.props.titleClick();\n  };\n  render() {\n    let postTitleStyle = style.postTitle;\n    if (this.props.mode === 'show') {\n      postTitleStyle = style.postTitleShow;\n    }\n    return (\n      <header onClick={this.handleClick} className={postTitleStyle}>\n        {this.props.postTitle}\n      </header>\n    );\n  }\n}\nexport default PostTitle;\n","import React from 'react';\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { updatePost } from '../../../actions';\n\nimport style from './PostButton.module.scss';\n\nclass PostButton extends React.Component {\n  updatePost = () => {\n    let action = '';\n    switch (this.props.type) {\n      case 'delete':\n        action = ['post', 'delete'];\n        break;\n      default:\n        action = ['post', 'update'];\n        break;\n    }\n    let fields = {};\n    fields[`${this.props.type}`] = !this.props.value;\n    const query = { id: this.props.postId, action: action, fields: fields };\n    this.props.updatePost(query);\n    if (this.props.toggle) {\n      this.props.toggle('Home');\n    }\n  };\n\n  render() {\n    let button = '✘';\n    let buttonStyle = style.delete;\n    switch (this.props.type) {\n      case 'star':\n        button = '✓';\n        buttonStyle = style.button;\n        if (this.props.value) {\n          buttonStyle = style.on;\n        }\n        break;\n      case 'read':\n        button = '◎';\n        buttonStyle = style.read;\n        if (this.props.value) {\n          button = '◉';\n          buttonStyle = style.unRead;\n        }\n        break;\n      default:\n        break;\n    }\n    return (\n      <button className={buttonStyle} onClick={this.updatePost}>\n        {button}\n      </button>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ updatePost: updatePost }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    updatePost: state.updatePost\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostButton);\n","import React from 'react';\n\nimport style from './Source.module.scss';\nclass Source extends React.Component {\n  render() {\n    let sourceStyle = style.source;\n    if (this.props.mode === 'show') {\n      sourceStyle = style.sourceShow;\n    }\n    return <div className={sourceStyle}>@ {this.props.source}</div>;\n  }\n}\nexport default Source;\n","const ApproxVolume = props => {\n  return `~${props.volume} ${props.units}`;\n};\n\nexport default ApproxVolume;\n","import React from 'react';\n\nimport PostTitle from '../PostTitle/PostTitle';\nimport PostButton from '../../containers/Posts/PostButton/PostButton';\nimport Source from '../Source/Source';\nimport DateTime from '../DateTime';\nimport ApproxVolume from '../ApproxVolume';\nimport style from './PostCard.module.scss';\n\nclass PostCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick = () => {\n    this.props.selector(this.props.post._id);\n  };\n\n  render() {\n    const text = `${this.props.post.text.replace(/<(?:.|\\n)*?>/gm, ' ')}...`;\n    let bodyClass = style.body;\n    if (this.props.post.read) {\n      bodyClass = style.bodyRead;\n    }\n    return (\n      <section className={bodyClass} key={this.props.post._id}>\n        <PostTitle\n          mode=\"card\"\n          titleClick={this.handleClick}\n          postTitle={this.props.post.title}\n        />\n        <section className={style.secondLine}>\n          <Source mode=\"card\" source={this.props.post.source} />\n          <div className={style.buttonsWrapper}>\n            <PostButton\n              type=\"star\"\n              value={this.props.post.star}\n              postId={this.props.post._id}\n            />\n            <PostButton\n              type=\"read\"\n              value={this.props.post.read}\n              postId={this.props.post._id}\n            />\n          </div>\n        </section>\n        <section\n          className={style.text}\n          onClick={this.handleClick}\n          dangerouslySetInnerHTML={{ __html: text }}\n        />\n        <footer>\n          <DateTime timestamp={new Date(this.props.post.published)} />\n          <ApproxVolume\n            volume={this.props.post.readTime}\n            units=\"mins\"\n            mode=\"card\"\n          />\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default PostCard;\n","import React from 'react';\n\nimport style from './Divider.module.scss';\nclass Divider extends React.Component {\n  render() {\n    let dividerStyle = style.divider;\n    if (this.props.card) dividerStyle = style.dividerCard;\n    return <div className={dividerStyle} />;\n  }\n}\nexport default Divider;\n","import React from 'react';\n\nimport style from './Error.module.scss';\n\nconst error = props => {\n  return (\n    <main className={style.errorWrapper}>\n      <p className={style.errorTitle}>ERROR</p>\n      <p className={style.error}>{props.message}</p>\n    </main>\n  );\n};\n\nexport default error;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setPosts } from '../../actions';\nimport { selectPost } from '../../actions';\n\nimport PostCard from '../../components/Posts/PostCard';\nimport Divider from '../../components/Divider/Divider';\nimport style from './PostCardList.module.scss';\nimport Error from '../../components/Error/Error';\n\nclass PostCardList extends React.Component {\n  componentWillMount() {\n    this.fetchPosts();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchPosts, 5000);\n    window.scrollTo(0, 0);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchPosts = () => {\n    this.props.setPosts().then(data => {});\n  };\n  selectPostToShow = postId => {\n    this.props.selectPost(postId).then(data => {\n      this.props.showPost(data);\n    });\n  };\n  render() {\n    const message = this.props.posts.message;\n    if (message) {\n      return <Error message={message} />;\n    }\n    return (\n      <div className={style.grid}>\n        {this.props.posts.map(post => {\n          if (!this.props.showRead && !post.read) {\n            return (\n              <div className={style.gridCell} key={post._id}>\n                <PostCard selector={this.selectPostToShow} post={post} />\n                <Divider card />\n              </div>\n            );\n          } else if (this.props.showRead) {\n            return (\n              <div className={style.gridCell} key={post._id}>\n                <PostCard selector={this.selectPostToShow} post={post} />\n                <Divider card />\n              </div>\n            );\n          } else {\n            return null;\n          }\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setPosts, selectPost }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts,\n    selectPost: state.selectPost,\n    selectModule: state.selectModule\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostCardList);\n","import React from 'react';\n\nimport style from './SourceButton.module.scss';\n\nclass SourceButton extends React.Component {\n  handleClick = () => {\n    if (this.props.type === 'add') this.props.show('');\n    if (this.props.type === 'delete') this.props.sourceDelete('');\n    if (this.props.type === 'refresh') this.props.refresh('');\n    if (this.props.type === 'edit')\n      this.props.toggleEditSource(this.props.sourceId);\n  };\n  render() {\n    let button = 'Add Source';\n    let buttonStyle = style.button;\n    switch (this.props.type) {\n      case 'edit':\n        button = '✎';\n        break;\n      case 'refresh':\n        button = 'Refresh';\n        buttonStyle = style.refreshSource;\n        break;\n      case 'add':\n        buttonStyle = style.addSource;\n        break;\n      default:\n        button = '⌦';\n    }\n    return (\n      <button className={buttonStyle} onClick={this.handleClick}>\n        {button}\n      </button>\n    );\n  }\n}\n\nexport default SourceButton;\n","import React from 'react';\n\nimport style from './SourceCreate.module.scss';\n\nclass SourceCreate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (props.source) {\n      this.state = {\n        name: props.source.name,\n        url: props.source.url,\n        home: props.source.home\n      };\n    } else {\n      this.state = {\n        name: '',\n        url: '',\n        home: ''\n      };\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let change = {};\n    let field = event.target.name;\n    change[field] = event.target.value;\n    this.setState(change);\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    // form values\n    const values = {\n      name: event.target[0].value,\n      url: event.target[1].value,\n      home: event.target[2].value\n    };\n    // if module mode Update\n    if (this.props.mode === 'Update') {\n      // are these old values?\n      const oldValues =\n        values.name === this.props.source.name &&\n        values.url === this.props.source.url &&\n        values.home === this.props.source.home;\n      // if no, then process\n      if (!oldValues) {\n        const query = { id: this.props.source._id, values: values };\n        this.props.toggleEditSource();\n        this.props.updateSource(query);\n        // otherwise, just close\n      } else {\n        this.props.toggleEditSource();\n      }\n      // if module mode Create\n    } else if (this.props.mode === 'Create') {\n      this.props.toggle();\n      this.props.create(values);\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={style.createForm}>\n        <label>\n          <div className={style.labelTitle}>Name</div>\n          <input\n            className={style.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>URL</div>\n          <input\n            type=\"text\"\n            name=\"url\"\n            value={this.state.url}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          <div className={style.labelTitle}>Homepage</div>\n          <input\n            type=\"text\"\n            name=\"home\"\n            value={this.state.home}\n            onChange={this.handleChange}\n          />\n        </label>\n        <div className={style.center}>\n          <button\n            className={style.submit}\n            as=\"input\"\n            type=\"submit\"\n            value=\"Submit\"\n          >\n            {this.props.mode}\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SourceCreate;\n","import React from 'react';\n\nimport SourceButton from './SourceButton/SourceButton';\nimport SourceCreate from '../../containers/Sources/SourceCreate/SourceCreate';\nimport style from './SourceCard.module.scss';\n\nclass SourceCard extends React.Component {\n  sourceDelete = () => {\n    this.props.sourceDelete(this.props.source._id);\n  };\n  render() {\n    let showEdit = false;\n    if (\n      this.props.showEditSourceId === this.props.source._id &&\n      this.props.showEdit\n    )\n      showEdit = true;\n    return (\n      <section className={style.sectionWrapper}>\n        <div className={style.section}>\n          <section className={style.nameWrapper}>\n            <p onClick={this.goHome} className={style.name}>\n              {this.props.source.name}\n            </p>\n            <p className={style.url}>{this.props.source.url}</p>\n          </section>\n          <section className={style.buttonsWrapper}>\n            <SourceButton\n              type=\"edit\"\n              toggleEditSource={this.props.toggleEditSource}\n              sourceId={this.props.source._id}\n            />\n            <SourceButton type=\"delete\" sourceDelete={this.sourceDelete} />\n          </section>\n        </div>\n        {showEdit ? (\n          <SourceCreate\n            mode=\"Update\"\n            toggleEditSource={this.props.toggleEditSource}\n            source={this.props.source}\n            updateSource={this.props.updateSource}\n          />\n        ) : null}\n      </section>\n    );\n  }\n}\n\nexport default SourceCard;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { setSources } from '../../actions';\nimport { addSource } from '../../actions';\nimport { deleteSource } from '../../actions';\nimport { refreshPosts } from '../../actions';\nimport { updateSource } from '../../actions';\n\nimport SourceCard from '../../components/Sources/SourceCard';\nimport SourceButton from '../../components/Sources/SourceButton/SourceButton';\nimport SourceCreate from './SourceCreate/SourceCreate';\nimport style from './SourcesList.module.scss';\n\nclass SourcesList extends React.Component {\n  state = {\n    showAddSource: false,\n    showEditSource: false,\n    showEditSourceId: '',\n    message: ''\n  };\n\n  toggleAddSource = () => {\n    // if Edit Source component open - close it\n    if (this.state.showEditSource)\n      this.setState({\n        showEditSource: false,\n        showEditSourceId: ''\n      });\n    this.setState(state => ({\n      showAddSource: !this.state.showAddSource\n    }));\n  };\n\n  toggleEditSource = id => {\n    console.log(id);\n    console.log(this.state.showEditSource);\n    console.log(this.state.showEditSourceId);\n    // if Add Source component open - close it\n    if (this.state.showAddSource) this.setState({ showAddSource: false });\n    // if Show Edit is true and ...\n    if (this.state.showEditSource) {\n      // ... there is same ID - close it\n      if (id === this.state.showEditSourceId) {\n        this.setState({\n          showEditSource: !this.state.showEditSource,\n          showEditSourceId: id\n        });\n        // ... this is different ID - open the other one\n      } else if (id && id !== this.state.showEditSourceId) {\n        this.setState({\n          showEditSource: true,\n          showEditSourceId: id\n        });\n      } else {\n        this.setState({\n          showEditSource: false,\n          showEditSourceId: ''\n        });\n      }\n    }\n    // if Show Edit is false\n    else {\n      this.setState({\n        showEditSource: true,\n        showEditSourceId: id\n      });\n    }\n  };\n\n  changeMessage = message => {\n    this.setState({ message: message });\n    setTimeout(this.clearMessage, 3000);\n  };\n\n  componentWillMount() {\n    this.fetchSources();\n  }\n\n  componentDidMount() {\n    this.refresher = setInterval(this.fetchSources, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.refresher);\n  }\n\n  fetchSources = () => {\n    this.props.setSources();\n  };\n\n  clearMessage = () => {\n    this.setState({ message: '' });\n  };\n\n  createSource = fields => {\n    if (fields.name === '' || fields.home === '' || fields.url === '')\n      this.changeMessage('Not enough info. Source not created.');\n    const request = { action: ['source', 'create'], fields };\n    this.props.addSource(request);\n  };\n\n  updateSource = fields => {\n    if (\n      fields.values.name === '' ||\n      fields.values.home === '' ||\n      fields.values.url === '' ||\n      fields.values.id === ''\n    )\n      this.changeMessage('Not enough info. Source not created.');\n    const request = {\n      action: ['source', 'update'],\n      id: fields.id,\n      fields: fields.values\n    };\n    this.props.updateSource(request);\n  };\n\n  sourceDelete = id => {\n    const request = { action: ['source', 'delete'], id: id };\n    this.props.deleteSource(request);\n    this.fetchSources();\n  };\n\n  handleRefreshPosts = () => {\n    this.props.refreshPosts();\n  };\n\n  render() {\n    return (\n      <section className={style.section}>\n        <div className={style.buttonsWrapper}>\n          {this.props.sources.length > 0 ? (\n            <SourceButton\n              type=\"refresh\"\n              refresh={this.handleRefreshPosts}\n              name=\"Refresh\"\n            />\n          ) : null}\n          <SourceButton\n            type=\"add\"\n            show={this.toggleAddSource}\n            name=\"Add Source\"\n          />\n        </div>\n        {this.state.showAddSource ? (\n          <SourceCreate\n            mode=\"Create\"\n            create={this.createSource}\n            toggle={this.toggleAddSource}\n          />\n        ) : null}\n        {this.state.message === '' ? null : (\n          <div className={style.message}>{this.state.message}</div>\n        )}\n        {this.props.sources.map(source => {\n          return (\n            <SourceCard\n              source={source}\n              key={source._id}\n              sourceDelete={this.sourceDelete}\n              showEdit={this.state.showEditSource}\n              showEditSourceId={this.state.showEditSourceId}\n              toggleEditSource={this.toggleEditSource}\n              updateSource={this.updateSource}\n            />\n          );\n        })}\n      </section>\n    );\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { setSources, addSource, deleteSource, refreshPosts, updateSource },\n    dispatch\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    sources: state.sources,\n    addSource: state.addSource,\n    deleteSource: state.deleteSource,\n    refreshPosts: refreshPosts,\n    updateSource: updateSource\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SourcesList);\n","import React from 'react';\n\nimport PostTitle from '../PostTitle/PostTitle';\nimport Source from '../Source/Source';\nimport PostButton from '../../containers/Posts/PostButton/PostButton';\nimport DateTime from '../DateTime';\nimport ApproxVolume from '../ApproxVolume';\nimport Divider from '../Divider/Divider';\nimport style from './PostShow.module.scss';\n\nclass PostShow extends React.Component {\n  handleClick = () => {\n    window.open(this.props.post.url, '_blank');\n  };\n\n  componentDidMount = () => {\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    let author = '';\n    if (!this.props.post.author) {\n      author = '';\n    } else {\n      author = `by ${this.props.post.author}`;\n    }\n    return (\n      <article className={style.body}>\n        <PostTitle\n          mode=\"show\"\n          titleClick={this.handleClick}\n          postTitle={this.props.post.title}\n        />\n        <div className={style.secondLine}>\n          <div className={style.sourceAuthorWrapper}>\n            <div className={style.author}>{author}</div>\n            <Source mode=\"show\" source={this.props.post.source} />\n          </div>\n          <div className={style.buttonsWrapper}>\n            <PostButton\n              type=\"star\"\n              value={this.props.post.star}\n              postId={this.props.post._id}\n            />\n            <PostButton\n              type=\"delete\"\n              postId={this.props.post._id}\n              toggle={this.props.toggle}\n            />\n          </div>\n        </div>\n        <section\n          className={style.text}\n          dangerouslySetInnerHTML={{\n            __html: this.props.post.text\n          }}\n        />\n        <Divider />\n        <footer className={style.statusLine}>\n          <DateTime\n            pre=\"published:\"\n            timestamp={new Date(this.props.post.published)}\n            mode=\"show\"\n          />\n          <DateTime\n            pre=\"parsed:\"\n            timestamp={new Date(this.props.post.parsed)}\n            mode=\"show\"\n          />\n          <ApproxVolume volume={this.props.post.pages} units=\"pages\" />\n        </footer>\n      </article>\n    );\n  }\n}\n\nexport default PostShow;\n","import React from 'react';\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n// Actions\nimport { updatePost } from '../actions';\n\nimport NavMenu from '../components/NavMenu/NavMenu';\nimport PostCardList from './Posts/PostCardList';\nimport SourcesList from './Sources/SourcesList';\nimport PostShow from '../components/Posts/PostShow';\n\nclass ContentDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      post: {},\n      module: 'Home',\n      menuOpen: false,\n      showRead: false\n    };\n  }\n  markRead = postId => {\n    let action = ['post', 'update'];\n    let fields = { read: true };\n    const query = { id: postId, action: action, fields: fields };\n    this.props.updatePost(query);\n  };\n\n  setPostToShow = post => {\n    this.setState({ post: post.payload });\n    this.showModule('show');\n    this.markRead(post.payload._id);\n  };\n  showModule = module => {\n    this.setState(state => ({ module: module }));\n  };\n  menuOpen = () => {\n    this.setState({\n      menuOpen: !this.state.menuOpen\n    });\n  };\n  showRead = () => {\n    this.setState({\n      showRead: !this.state.showRead\n    });\n  };\n\n  render() {\n    const options = {\n      show: this.showModule,\n      menuOpen: this.menuOpen,\n      menuStatus: this.state.menuOpen,\n      showRead: this.showRead\n    };\n    let module = (\n      <PostCardList\n        showPost={this.setPostToShow}\n        showRead={this.state.showRead}\n      />\n    );\n    switch (this.state.module) {\n      case 'show':\n        module = <PostShow post={this.state.post} toggle={this.showModule} />;\n        break;\n      case 'Sources':\n        module = <SourcesList />;\n        break;\n      default:\n        break;\n    }\n    return (\n      <div>\n        {module}\n        <NavMenu options={options} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ updatePost: updatePost }, dispatch);\n};\n\nconst mapStateToProps = state => {\n  return {\n    updatePost: state.updatePost\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ContentDisplay);\n","import React from 'react';\n\nimport TitleBar from '../TitleBar/TitleBar';\nimport ContentDisplay from '../../containers/ContentDisplay';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <main>\n        <TitleBar />\n        <ContentDisplay />\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { logger } from 'redux-logger';\nimport reduxPromise from 'redux-promise';\n\n// reducers\nimport postsReducer from './reducers/posts_reducer';\nimport sourcesReducer from './reducers/sources_reducer';\nimport addSourceReducer from './reducers/add_source_reducer';\nimport updatePostReducer from './reducers/update_post_reducer';\nimport updateSourceReducer from './reducers/update_source_reducer';\nimport refreshPostsReducer from './reducers/refresh_posts_reducer';\nimport selectPostReducer from './reducers/select_post_reducer';\nimport deleteSourceReducer from './reducers/delete_source_reducer';\nimport sourceCreateModuleReducer from './reducers/source_create_module_reducer.js';\n\nimport WebFont from 'webfontloader';\n\n// load components\nimport App from './components/App/App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\n// loading fonts\nWebFont.load({\n  google: {\n    families: ['Aleo:300,300i,400,400i,700', 'IBM Plex Mono:300,400']\n  }\n});\n\nconst initialState = {\n  posts: [],\n  sources: [],\n  addSource: '',\n  updatePost: '',\n  selectPost: '',\n  sourceCreateModule: true,\n  deleteSource: '',\n  refreshPostsReducer: ''\n};\n\n// Define reducers\nconst reducers = combineReducers({\n  posts: postsReducer,\n  sources: sourcesReducer,\n  addSource: addSourceReducer,\n  selectPost: selectPostReducer,\n  updatePost: updatePostReducer,\n  updateSource: updateSourceReducer,\n  deleteSource: deleteSourceReducer,\n  refreshPostsReducer: refreshPostsReducer,\n  sourceCreateModule: sourceCreateModuleReducer\n});\n// Add logger\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middlewares = composeEnhancers(applyMiddleware(reduxPromise, logger));\n\nReactDOM.render(\n  <Provider store={createStore(reducers, initialState, middlewares)}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_POSTS':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SET_SOURCES':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'ADD_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SELECT_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'DELETE_SOURCE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'UPDATE_POST':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n  // Handle actions\n  switch (action.type) {\n    case 'SHOW_MODULE':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n"],"sourceRoot":""}